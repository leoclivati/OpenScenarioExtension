/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.openScenario.impl;

import de.bmwgroup.openscenario.openScenario.GlobalParameterDeclaration;
import de.bmwgroup.openscenario.openScenario.OpenScenarioPackage;
import de.bmwgroup.openscenario.openScenario.ParameterDeclaration;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Global Parameter Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.GlobalParameterDeclarationImpl#getParameterDeclaration <em>Parameter Declaration</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GlobalParameterDeclarationImpl extends OscDeclarationImpl implements GlobalParameterDeclaration
{
  /**
   * The cached value of the '{@link #getParameterDeclaration() <em>Parameter Declaration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameterDeclaration()
   * @generated
   * @ordered
   */
  protected ParameterDeclaration parameterDeclaration;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GlobalParameterDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.GLOBAL_PARAMETER_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterDeclaration getParameterDeclaration()
  {
    return parameterDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameterDeclaration(ParameterDeclaration newParameterDeclaration, NotificationChain msgs)
  {
    ParameterDeclaration oldParameterDeclaration = parameterDeclaration;
    parameterDeclaration = newParameterDeclaration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION, oldParameterDeclaration, newParameterDeclaration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParameterDeclaration(ParameterDeclaration newParameterDeclaration)
  {
    if (newParameterDeclaration != parameterDeclaration)
    {
      NotificationChain msgs = null;
      if (parameterDeclaration != null)
        msgs = ((InternalEObject)parameterDeclaration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION, null, msgs);
      if (newParameterDeclaration != null)
        msgs = ((InternalEObject)newParameterDeclaration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION, null, msgs);
      msgs = basicSetParameterDeclaration(newParameterDeclaration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION, newParameterDeclaration, newParameterDeclaration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION:
        return basicSetParameterDeclaration(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION:
        return getParameterDeclaration();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION:
        setParameterDeclaration((ParameterDeclaration)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION:
        setParameterDeclaration((ParameterDeclaration)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION:
        return parameterDeclaration != null;
    }
    return super.eIsSet(featureID);
  }

} //GlobalParameterDeclarationImpl
