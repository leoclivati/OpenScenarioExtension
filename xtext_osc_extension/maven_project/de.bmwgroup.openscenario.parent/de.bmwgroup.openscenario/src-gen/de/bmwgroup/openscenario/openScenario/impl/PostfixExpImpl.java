/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.openScenario.impl;

import de.bmwgroup.openscenario.openScenario.ArgumentList;
import de.bmwgroup.openscenario.openScenario.EventCondition;
import de.bmwgroup.openscenario.openScenario.Expression;
import de.bmwgroup.openscenario.openScenario.Factor;
import de.bmwgroup.openscenario.openScenario.OpenScenarioPackage;
import de.bmwgroup.openscenario.openScenario.ParameterReference;
import de.bmwgroup.openscenario.openScenario.PostfixExp;
import de.bmwgroup.openscenario.openScenario.PostfixExpTail;
import de.bmwgroup.openscenario.openScenario.PrimaryExp;
import de.bmwgroup.openscenario.openScenario.Relation;
import de.bmwgroup.openscenario.openScenario.Sum;
import de.bmwgroup.openscenario.openScenario.Term;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Postfix Exp</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getRelationalOp <em>Relational Op</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getNextSum <em>Next Sum</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getAdditiveOp <em>Additive Op</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getNextTerm <em>Next Term</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getMultiplicativeOp <em>Multiplicative Op</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getNextFactor <em>Next Factor</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getPrimaryExp <em>Primary Exp</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getTail <em>Tail</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getArgumentList <em>Argument List</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.PostfixExpImpl#getFieldName <em>Field Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PostfixExpImpl extends MethodInvocationImpl implements PostfixExp
{
  /**
   * The cached value of the '{@link #getRelationalOp() <em>Relational Op</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelationalOp()
   * @generated
   * @ordered
   */
  protected EList<String> relationalOp;

  /**
   * The cached value of the '{@link #getNextSum() <em>Next Sum</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNextSum()
   * @generated
   * @ordered
   */
  protected EList<Sum> nextSum;

  /**
   * The cached value of the '{@link #getAdditiveOp() <em>Additive Op</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAdditiveOp()
   * @generated
   * @ordered
   */
  protected EList<String> additiveOp;

  /**
   * The cached value of the '{@link #getNextTerm() <em>Next Term</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNextTerm()
   * @generated
   * @ordered
   */
  protected EList<Term> nextTerm;

  /**
   * The cached value of the '{@link #getMultiplicativeOp() <em>Multiplicative Op</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMultiplicativeOp()
   * @generated
   * @ordered
   */
  protected EList<String> multiplicativeOp;

  /**
   * The cached value of the '{@link #getNextFactor() <em>Next Factor</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNextFactor()
   * @generated
   * @ordered
   */
  protected EList<Factor> nextFactor;

  /**
   * The cached value of the '{@link #getPrimaryExp() <em>Primary Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrimaryExp()
   * @generated
   * @ordered
   */
  protected PrimaryExp primaryExp;

  /**
   * The cached value of the '{@link #getTail() <em>Tail</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTail()
   * @generated
   * @ordered
   */
  protected EList<PostfixExpTail> tail;

  /**
   * The cached value of the '{@link #getArgumentList() <em>Argument List</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgumentList()
   * @generated
   * @ordered
   */
  protected EList<ArgumentList> argumentList;

  /**
   * The cached value of the '{@link #getFieldName() <em>Field Name</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFieldName()
   * @generated
   * @ordered
   */
  protected EList<String> fieldName;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PostfixExpImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.POSTFIX_EXP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getRelationalOp()
  {
    if (relationalOp == null)
    {
      relationalOp = new EDataTypeEList<String>(String.class, this, OpenScenarioPackage.POSTFIX_EXP__RELATIONAL_OP);
    }
    return relationalOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Sum> getNextSum()
  {
    if (nextSum == null)
    {
      nextSum = new EObjectContainmentEList<Sum>(Sum.class, this, OpenScenarioPackage.POSTFIX_EXP__NEXT_SUM);
    }
    return nextSum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getAdditiveOp()
  {
    if (additiveOp == null)
    {
      additiveOp = new EDataTypeEList<String>(String.class, this, OpenScenarioPackage.POSTFIX_EXP__ADDITIVE_OP);
    }
    return additiveOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Term> getNextTerm()
  {
    if (nextTerm == null)
    {
      nextTerm = new EObjectContainmentEList<Term>(Term.class, this, OpenScenarioPackage.POSTFIX_EXP__NEXT_TERM);
    }
    return nextTerm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getMultiplicativeOp()
  {
    if (multiplicativeOp == null)
    {
      multiplicativeOp = new EDataTypeEList<String>(String.class, this, OpenScenarioPackage.POSTFIX_EXP__MULTIPLICATIVE_OP);
    }
    return multiplicativeOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Factor> getNextFactor()
  {
    if (nextFactor == null)
    {
      nextFactor = new EObjectContainmentEList<Factor>(Factor.class, this, OpenScenarioPackage.POSTFIX_EXP__NEXT_FACTOR);
    }
    return nextFactor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrimaryExp getPrimaryExp()
  {
    return primaryExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPrimaryExp(PrimaryExp newPrimaryExp, NotificationChain msgs)
  {
    PrimaryExp oldPrimaryExp = primaryExp;
    primaryExp = newPrimaryExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP, oldPrimaryExp, newPrimaryExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrimaryExp(PrimaryExp newPrimaryExp)
  {
    if (newPrimaryExp != primaryExp)
    {
      NotificationChain msgs = null;
      if (primaryExp != null)
        msgs = ((InternalEObject)primaryExp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP, null, msgs);
      if (newPrimaryExp != null)
        msgs = ((InternalEObject)newPrimaryExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP, null, msgs);
      msgs = basicSetPrimaryExp(newPrimaryExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP, newPrimaryExp, newPrimaryExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PostfixExpTail> getTail()
  {
    if (tail == null)
    {
      tail = new EObjectContainmentEList<PostfixExpTail>(PostfixExpTail.class, this, OpenScenarioPackage.POSTFIX_EXP__TAIL);
    }
    return tail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ArgumentList> getArgumentList()
  {
    if (argumentList == null)
    {
      argumentList = new EObjectContainmentEList<ArgumentList>(ArgumentList.class, this, OpenScenarioPackage.POSTFIX_EXP__ARGUMENT_LIST);
    }
    return argumentList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getFieldName()
  {
    if (fieldName == null)
    {
      fieldName = new EDataTypeEList<String>(String.class, this, OpenScenarioPackage.POSTFIX_EXP__FIELD_NAME);
    }
    return fieldName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_SUM:
        return ((InternalEList<?>)getNextSum()).basicRemove(otherEnd, msgs);
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_TERM:
        return ((InternalEList<?>)getNextTerm()).basicRemove(otherEnd, msgs);
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_FACTOR:
        return ((InternalEList<?>)getNextFactor()).basicRemove(otherEnd, msgs);
      case OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP:
        return basicSetPrimaryExp(null, msgs);
      case OpenScenarioPackage.POSTFIX_EXP__TAIL:
        return ((InternalEList<?>)getTail()).basicRemove(otherEnd, msgs);
      case OpenScenarioPackage.POSTFIX_EXP__ARGUMENT_LIST:
        return ((InternalEList<?>)getArgumentList()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.POSTFIX_EXP__RELATIONAL_OP:
        return getRelationalOp();
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_SUM:
        return getNextSum();
      case OpenScenarioPackage.POSTFIX_EXP__ADDITIVE_OP:
        return getAdditiveOp();
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_TERM:
        return getNextTerm();
      case OpenScenarioPackage.POSTFIX_EXP__MULTIPLICATIVE_OP:
        return getMultiplicativeOp();
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_FACTOR:
        return getNextFactor();
      case OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP:
        return getPrimaryExp();
      case OpenScenarioPackage.POSTFIX_EXP__TAIL:
        return getTail();
      case OpenScenarioPackage.POSTFIX_EXP__ARGUMENT_LIST:
        return getArgumentList();
      case OpenScenarioPackage.POSTFIX_EXP__FIELD_NAME:
        return getFieldName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.POSTFIX_EXP__RELATIONAL_OP:
        getRelationalOp().clear();
        getRelationalOp().addAll((Collection<? extends String>)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_SUM:
        getNextSum().clear();
        getNextSum().addAll((Collection<? extends Sum>)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__ADDITIVE_OP:
        getAdditiveOp().clear();
        getAdditiveOp().addAll((Collection<? extends String>)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_TERM:
        getNextTerm().clear();
        getNextTerm().addAll((Collection<? extends Term>)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__MULTIPLICATIVE_OP:
        getMultiplicativeOp().clear();
        getMultiplicativeOp().addAll((Collection<? extends String>)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_FACTOR:
        getNextFactor().clear();
        getNextFactor().addAll((Collection<? extends Factor>)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP:
        setPrimaryExp((PrimaryExp)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__TAIL:
        getTail().clear();
        getTail().addAll((Collection<? extends PostfixExpTail>)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__ARGUMENT_LIST:
        getArgumentList().clear();
        getArgumentList().addAll((Collection<? extends ArgumentList>)newValue);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__FIELD_NAME:
        getFieldName().clear();
        getFieldName().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.POSTFIX_EXP__RELATIONAL_OP:
        getRelationalOp().clear();
        return;
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_SUM:
        getNextSum().clear();
        return;
      case OpenScenarioPackage.POSTFIX_EXP__ADDITIVE_OP:
        getAdditiveOp().clear();
        return;
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_TERM:
        getNextTerm().clear();
        return;
      case OpenScenarioPackage.POSTFIX_EXP__MULTIPLICATIVE_OP:
        getMultiplicativeOp().clear();
        return;
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_FACTOR:
        getNextFactor().clear();
        return;
      case OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP:
        setPrimaryExp((PrimaryExp)null);
        return;
      case OpenScenarioPackage.POSTFIX_EXP__TAIL:
        getTail().clear();
        return;
      case OpenScenarioPackage.POSTFIX_EXP__ARGUMENT_LIST:
        getArgumentList().clear();
        return;
      case OpenScenarioPackage.POSTFIX_EXP__FIELD_NAME:
        getFieldName().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.POSTFIX_EXP__RELATIONAL_OP:
        return relationalOp != null && !relationalOp.isEmpty();
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_SUM:
        return nextSum != null && !nextSum.isEmpty();
      case OpenScenarioPackage.POSTFIX_EXP__ADDITIVE_OP:
        return additiveOp != null && !additiveOp.isEmpty();
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_TERM:
        return nextTerm != null && !nextTerm.isEmpty();
      case OpenScenarioPackage.POSTFIX_EXP__MULTIPLICATIVE_OP:
        return multiplicativeOp != null && !multiplicativeOp.isEmpty();
      case OpenScenarioPackage.POSTFIX_EXP__NEXT_FACTOR:
        return nextFactor != null && !nextFactor.isEmpty();
      case OpenScenarioPackage.POSTFIX_EXP__PRIMARY_EXP:
        return primaryExp != null;
      case OpenScenarioPackage.POSTFIX_EXP__TAIL:
        return tail != null && !tail.isEmpty();
      case OpenScenarioPackage.POSTFIX_EXP__ARGUMENT_LIST:
        return argumentList != null && !argumentList.isEmpty();
      case OpenScenarioPackage.POSTFIX_EXP__FIELD_NAME:
        return fieldName != null && !fieldName.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass)
  {
    if (baseClass == ParameterReference.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == EventCondition.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Expression.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Relation.class)
    {
      switch (derivedFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Sum.class)
    {
      switch (derivedFeatureID)
      {
        case OpenScenarioPackage.POSTFIX_EXP__RELATIONAL_OP: return OpenScenarioPackage.SUM__RELATIONAL_OP;
        case OpenScenarioPackage.POSTFIX_EXP__NEXT_SUM: return OpenScenarioPackage.SUM__NEXT_SUM;
        default: return -1;
      }
    }
    if (baseClass == Term.class)
    {
      switch (derivedFeatureID)
      {
        case OpenScenarioPackage.POSTFIX_EXP__ADDITIVE_OP: return OpenScenarioPackage.TERM__ADDITIVE_OP;
        case OpenScenarioPackage.POSTFIX_EXP__NEXT_TERM: return OpenScenarioPackage.TERM__NEXT_TERM;
        default: return -1;
      }
    }
    if (baseClass == Factor.class)
    {
      switch (derivedFeatureID)
      {
        case OpenScenarioPackage.POSTFIX_EXP__MULTIPLICATIVE_OP: return OpenScenarioPackage.FACTOR__MULTIPLICATIVE_OP;
        case OpenScenarioPackage.POSTFIX_EXP__NEXT_FACTOR: return OpenScenarioPackage.FACTOR__NEXT_FACTOR;
        default: return -1;
      }
    }
    return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass)
  {
    if (baseClass == ParameterReference.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == EventCondition.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Expression.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Relation.class)
    {
      switch (baseFeatureID)
      {
        default: return -1;
      }
    }
    if (baseClass == Sum.class)
    {
      switch (baseFeatureID)
      {
        case OpenScenarioPackage.SUM__RELATIONAL_OP: return OpenScenarioPackage.POSTFIX_EXP__RELATIONAL_OP;
        case OpenScenarioPackage.SUM__NEXT_SUM: return OpenScenarioPackage.POSTFIX_EXP__NEXT_SUM;
        default: return -1;
      }
    }
    if (baseClass == Term.class)
    {
      switch (baseFeatureID)
      {
        case OpenScenarioPackage.TERM__ADDITIVE_OP: return OpenScenarioPackage.POSTFIX_EXP__ADDITIVE_OP;
        case OpenScenarioPackage.TERM__NEXT_TERM: return OpenScenarioPackage.POSTFIX_EXP__NEXT_TERM;
        default: return -1;
      }
    }
    if (baseClass == Factor.class)
    {
      switch (baseFeatureID)
      {
        case OpenScenarioPackage.FACTOR__MULTIPLICATIVE_OP: return OpenScenarioPackage.POSTFIX_EXP__MULTIPLICATIVE_OP;
        case OpenScenarioPackage.FACTOR__NEXT_FACTOR: return OpenScenarioPackage.POSTFIX_EXP__NEXT_FACTOR;
        default: return -1;
      }
    }
    return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (relationalOp: ");
    result.append(relationalOp);
    result.append(", additiveOp: ");
    result.append(additiveOp);
    result.append(", multiplicativeOp: ");
    result.append(multiplicativeOp);
    result.append(", fieldName: ");
    result.append(fieldName);
    result.append(')');
    return result.toString();
  }

} //PostfixExpImpl
