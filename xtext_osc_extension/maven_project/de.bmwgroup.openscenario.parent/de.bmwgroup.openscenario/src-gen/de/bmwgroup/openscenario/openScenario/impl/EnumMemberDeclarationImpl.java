/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.openScenario.impl;

import de.bmwgroup.openscenario.openScenario.EnumMemberDeclaration;
import de.bmwgroup.openscenario.openScenario.OpenScenarioPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Enum Member Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.EnumMemberDeclarationImpl#getEnumMemberName <em>Enum Member Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.EnumMemberDeclarationImpl#getEnumMemberValue <em>Enum Member Value</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EnumMemberDeclarationImpl extends MinimalEObjectImpl.Container implements EnumMemberDeclaration
{
  /**
   * The default value of the '{@link #getEnumMemberName() <em>Enum Member Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumMemberName()
   * @generated
   * @ordered
   */
  protected static final String ENUM_MEMBER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEnumMemberName() <em>Enum Member Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumMemberName()
   * @generated
   * @ordered
   */
  protected String enumMemberName = ENUM_MEMBER_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getEnumMemberValue() <em>Enum Member Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumMemberValue()
   * @generated
   * @ordered
   */
  protected static final String ENUM_MEMBER_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEnumMemberValue() <em>Enum Member Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumMemberValue()
   * @generated
   * @ordered
   */
  protected String enumMemberValue = ENUM_MEMBER_VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnumMemberDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.ENUM_MEMBER_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEnumMemberName()
  {
    return enumMemberName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnumMemberName(String newEnumMemberName)
  {
    String oldEnumMemberName = enumMemberName;
    enumMemberName = newEnumMemberName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_NAME, oldEnumMemberName, enumMemberName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEnumMemberValue()
  {
    return enumMemberValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnumMemberValue(String newEnumMemberValue)
  {
    String oldEnumMemberValue = enumMemberValue;
    enumMemberValue = newEnumMemberValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_VALUE, oldEnumMemberValue, enumMemberValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_NAME:
        return getEnumMemberName();
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_VALUE:
        return getEnumMemberValue();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_NAME:
        setEnumMemberName((String)newValue);
        return;
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_VALUE:
        setEnumMemberValue((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_NAME:
        setEnumMemberName(ENUM_MEMBER_NAME_EDEFAULT);
        return;
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_VALUE:
        setEnumMemberValue(ENUM_MEMBER_VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_NAME:
        return ENUM_MEMBER_NAME_EDEFAULT == null ? enumMemberName != null : !ENUM_MEMBER_NAME_EDEFAULT.equals(enumMemberName);
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION__ENUM_MEMBER_VALUE:
        return ENUM_MEMBER_VALUE_EDEFAULT == null ? enumMemberValue != null : !ENUM_MEMBER_VALUE_EDEFAULT.equals(enumMemberValue);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (enumMemberName: ");
    result.append(enumMemberName);
    result.append(", enumMemberValue: ");
    result.append(enumMemberValue);
    result.append(')');
    return result.toString();
  }

} //EnumMemberDeclarationImpl
