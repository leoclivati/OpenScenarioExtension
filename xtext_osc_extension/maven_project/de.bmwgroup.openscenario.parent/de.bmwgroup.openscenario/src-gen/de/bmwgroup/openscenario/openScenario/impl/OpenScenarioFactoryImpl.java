/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.openScenario.impl;

import de.bmwgroup.openscenario.openScenario.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class OpenScenarioFactoryImpl extends EFactoryImpl implements OpenScenarioFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static OpenScenarioFactory init()
  {
    try
    {
      OpenScenarioFactory theOpenScenarioFactory = (OpenScenarioFactory)EPackage.Registry.INSTANCE.getEFactory(OpenScenarioPackage.eNS_URI);
      if (theOpenScenarioFactory != null)
      {
        return theOpenScenarioFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new OpenScenarioFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OpenScenarioFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case OpenScenarioPackage.OSC_FILE: return createOscFile();
      case OpenScenarioPackage.PRELUDE_STATEMENT: return createPreludeStatement();
      case OpenScenarioPackage.IMPORT_STATEMENT: return createImportStatement();
      case OpenScenarioPackage.IMPORT_REFERENCE: return createImportReference();
      case OpenScenarioPackage.STRUCTURED_ID: return createStructuredID();
      case OpenScenarioPackage.OSC_DECLARATION: return createOscDeclaration();
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION: return createPhysicalTypeDeclaration();
      case OpenScenarioPackage.UNIT_DECLARATION: return createUnitDeclaration();
      case OpenScenarioPackage.SI_BASE_UNIT_SPECIFIER: return createSIBaseUnitSpecifier();
      case OpenScenarioPackage.SI_BASE_EXPONENT_LIST: return createSIBaseExponentList();
      case OpenScenarioPackage.SI_BASE_EXPONENT: return createSIBaseExponent();
      case OpenScenarioPackage.SI_UNIT_SPECIFIER: return createSIUnitSpecifier();
      case OpenScenarioPackage.TYPE_EXTENSION: return createTypeExtension();
      case OpenScenarioPackage.ENUM_TYPE_EXTENSION: return createEnumTypeExtension();
      case OpenScenarioPackage.STRUCTURED_TYPE_EXTENSION: return createStructuredTypeExtension();
      case OpenScenarioPackage.EXTENSION_MEMBER_DECLARATION: return createExtensionMemberDeclaration();
      case OpenScenarioPackage.GLOBAL_PARAMETER_DECLARATION: return createGlobalParameterDeclaration();
      case OpenScenarioPackage.PARAMETER_DECLARATION: return createParameterDeclaration();
      case OpenScenarioPackage.ENUM_DECLARATION: return createEnumDeclaration();
      case OpenScenarioPackage.ENUM_MEMBER_DECLARATION: return createEnumMemberDeclaration();
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE: return createEnumValueReference();
      case OpenScenarioPackage.MODIFIER_DECLARATION: return createModifierDeclaration();
      case OpenScenarioPackage.ACTION_DECLARATION: return createActionDeclaration();
      case OpenScenarioPackage.ACTOR_DECLARATION: return createActorDeclaration();
      case OpenScenarioPackage.STRUCT_DECLARATION: return createStructDeclaration();
      case OpenScenarioPackage.SCENARIO_DECLARATION: return createScenarioDeclaration();
      case OpenScenarioPackage.MEMBER_DECLARATION: return createMemberDeclaration();
      case OpenScenarioPackage.COVERAGE_DECLARATION: return createCoverageDeclaration();
      case OpenScenarioPackage.METHOD_DECLARATION: return createMethodDeclaration();
      case OpenScenarioPackage.METHOD_IMPLEMENTATION: return createMethodImplementation();
      case OpenScenarioPackage.EVENT_DECLARATION: return createEventDeclaration();
      case OpenScenarioPackage.EVENT_SPECIFICATION: return createEventSpecification();
      case OpenScenarioPackage.EVENT_REFERENCE: return createEventReference();
      case OpenScenarioPackage.EVENT_PATH: return createEventPath();
      case OpenScenarioPackage.EVENT_CONDITION: return createEventCondition();
      case OpenScenarioPackage.RISE_EXPRESSION: return createRiseExpression();
      case OpenScenarioPackage.FALL_EXPRESSION: return createFallExpression();
      case OpenScenarioPackage.ELAPSED_EXPRESSION: return createElapsedExpression();
      case OpenScenarioPackage.EVERY_EXPRESSION: return createEveryExpression();
      case OpenScenarioPackage.FIELD_DECLARATION: return createFieldDeclaration();
      case OpenScenarioPackage.VARIABLE_DECLARATION: return createVariableDeclaration();
      case OpenScenarioPackage.SAMPLE_EXPRESSION: return createSampleExpression();
      case OpenScenarioPackage.BEHAVIOR_SPECIFICATION: return createBehaviorSpecification();
      case OpenScenarioPackage.ON_DIRECTIVE: return createOnDirective();
      case OpenScenarioPackage.ON_DIRECTIVE_MEMBER: return createOnDirectiveMember();
      case OpenScenarioPackage.CALL_DIRECTIVE: return createCallDirective();
      case OpenScenarioPackage.EMIT_DIRECTIVE: return createEmitDirective();
      case OpenScenarioPackage.WAIT_DIRECTIVE: return createWaitDirective();
      case OpenScenarioPackage.DO_DIRECTIVE: return createDoDirective();
      case OpenScenarioPackage.DO_DIRECTIVE_MEMBER: return createDoDirectiveMember();
      case OpenScenarioPackage.COMPOSITION: return createComposition();
      case OpenScenarioPackage.BEHAVIOR_INVOCATION: return createBehaviorInvocation();
      case OpenScenarioPackage.PARAMETER_WITH_DECLARATION: return createParameterWithDeclaration();
      case OpenScenarioPackage.BEHAVIOR_WITH_DECLARATION: return createBehaviorWithDeclaration();
      case OpenScenarioPackage.BEHAVIOR_WITH_MEMBER: return createBehaviorWithMember();
      case OpenScenarioPackage.CONSTRAINT_DECLARATION: return createConstraintDeclaration();
      case OpenScenarioPackage.KEEP_CONSTRAINT_DECLARATION: return createKeepConstraintDeclaration();
      case OpenScenarioPackage.REMOVE_DEFAULT_DECLARATION: return createRemoveDefaultDeclaration();
      case OpenScenarioPackage.UNTIL_DIRECTIVE: return createUntilDirective();
      case OpenScenarioPackage.ARGUMENT_LIST_SPECIFICATION: return createArgumentListSpecification();
      case OpenScenarioPackage.ARGUMENT_SPECIFICATION: return createArgumentSpecification();
      case OpenScenarioPackage.ARGUMENT_LIST: return createArgumentList();
      case OpenScenarioPackage.NAMED_ARGUMENT: return createNamedArgument();
      case OpenScenarioPackage.POSTFIX_EXP: return createPostfixExp();
      case OpenScenarioPackage.POSTFIX_EXP_TAIL: return createPostfixExpTail();
      case OpenScenarioPackage.CAST_EXP_TAIL: return createCastExpTail();
      case OpenScenarioPackage.TYPE_TEST_TAIL: return createTypeTestTail();
      case OpenScenarioPackage.ELEMENT_ACCESS_TAIL: return createElementAccessTail();
      case OpenScenarioPackage.FIELD_ACCESS_TAIL: return createFieldAccessTail();
      case OpenScenarioPackage.METHOD_INVOCATION: return createMethodInvocation();
      case OpenScenarioPackage.PARAMETER_REFERENCE: return createParameterReference();
      case OpenScenarioPackage.PRIMARY_EXP: return createPrimaryExp();
      case OpenScenarioPackage.VALUE_EXP: return createValueExp();
      case OpenScenarioPackage.PHYSICAL_TYPE: return createPhysicalType();
      case OpenScenarioPackage.LIST_CONSTRUCTOR: return createListConstructor();
      case OpenScenarioPackage.RANGE_CONSTRUCTOR: return createRangeConstructor();
      case OpenScenarioPackage.CONDITION: return createCondition();
      case OpenScenarioPackage.EXPRESSION: return createExpression();
      case OpenScenarioPackage.RELATION: return createRelation();
      case OpenScenarioPackage.SUM: return createSum();
      case OpenScenarioPackage.TERM: return createTerm();
      case OpenScenarioPackage.FACTOR: return createFactor();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OscFile createOscFile()
  {
    OscFileImpl oscFile = new OscFileImpl();
    return oscFile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PreludeStatement createPreludeStatement()
  {
    PreludeStatementImpl preludeStatement = new PreludeStatementImpl();
    return preludeStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImportStatement createImportStatement()
  {
    ImportStatementImpl importStatement = new ImportStatementImpl();
    return importStatement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ImportReference createImportReference()
  {
    ImportReferenceImpl importReference = new ImportReferenceImpl();
    return importReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StructuredID createStructuredID()
  {
    StructuredIDImpl structuredID = new StructuredIDImpl();
    return structuredID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OscDeclaration createOscDeclaration()
  {
    OscDeclarationImpl oscDeclaration = new OscDeclarationImpl();
    return oscDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PhysicalTypeDeclaration createPhysicalTypeDeclaration()
  {
    PhysicalTypeDeclarationImpl physicalTypeDeclaration = new PhysicalTypeDeclarationImpl();
    return physicalTypeDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UnitDeclaration createUnitDeclaration()
  {
    UnitDeclarationImpl unitDeclaration = new UnitDeclarationImpl();
    return unitDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SIBaseUnitSpecifier createSIBaseUnitSpecifier()
  {
    SIBaseUnitSpecifierImpl siBaseUnitSpecifier = new SIBaseUnitSpecifierImpl();
    return siBaseUnitSpecifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SIBaseExponentList createSIBaseExponentList()
  {
    SIBaseExponentListImpl siBaseExponentList = new SIBaseExponentListImpl();
    return siBaseExponentList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SIBaseExponent createSIBaseExponent()
  {
    SIBaseExponentImpl siBaseExponent = new SIBaseExponentImpl();
    return siBaseExponent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SIUnitSpecifier createSIUnitSpecifier()
  {
    SIUnitSpecifierImpl siUnitSpecifier = new SIUnitSpecifierImpl();
    return siUnitSpecifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TypeExtension createTypeExtension()
  {
    TypeExtensionImpl typeExtension = new TypeExtensionImpl();
    return typeExtension;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumTypeExtension createEnumTypeExtension()
  {
    EnumTypeExtensionImpl enumTypeExtension = new EnumTypeExtensionImpl();
    return enumTypeExtension;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StructuredTypeExtension createStructuredTypeExtension()
  {
    StructuredTypeExtensionImpl structuredTypeExtension = new StructuredTypeExtensionImpl();
    return structuredTypeExtension;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExtensionMemberDeclaration createExtensionMemberDeclaration()
  {
    ExtensionMemberDeclarationImpl extensionMemberDeclaration = new ExtensionMemberDeclarationImpl();
    return extensionMemberDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GlobalParameterDeclaration createGlobalParameterDeclaration()
  {
    GlobalParameterDeclarationImpl globalParameterDeclaration = new GlobalParameterDeclarationImpl();
    return globalParameterDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterDeclaration createParameterDeclaration()
  {
    ParameterDeclarationImpl parameterDeclaration = new ParameterDeclarationImpl();
    return parameterDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumDeclaration createEnumDeclaration()
  {
    EnumDeclarationImpl enumDeclaration = new EnumDeclarationImpl();
    return enumDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumMemberDeclaration createEnumMemberDeclaration()
  {
    EnumMemberDeclarationImpl enumMemberDeclaration = new EnumMemberDeclarationImpl();
    return enumMemberDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EnumValueReference createEnumValueReference()
  {
    EnumValueReferenceImpl enumValueReference = new EnumValueReferenceImpl();
    return enumValueReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ModifierDeclaration createModifierDeclaration()
  {
    ModifierDeclarationImpl modifierDeclaration = new ModifierDeclarationImpl();
    return modifierDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActionDeclaration createActionDeclaration()
  {
    ActionDeclarationImpl actionDeclaration = new ActionDeclarationImpl();
    return actionDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ActorDeclaration createActorDeclaration()
  {
    ActorDeclarationImpl actorDeclaration = new ActorDeclarationImpl();
    return actorDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public StructDeclaration createStructDeclaration()
  {
    StructDeclarationImpl structDeclaration = new StructDeclarationImpl();
    return structDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ScenarioDeclaration createScenarioDeclaration()
  {
    ScenarioDeclarationImpl scenarioDeclaration = new ScenarioDeclarationImpl();
    return scenarioDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MemberDeclaration createMemberDeclaration()
  {
    MemberDeclarationImpl memberDeclaration = new MemberDeclarationImpl();
    return memberDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CoverageDeclaration createCoverageDeclaration()
  {
    CoverageDeclarationImpl coverageDeclaration = new CoverageDeclarationImpl();
    return coverageDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodDeclaration createMethodDeclaration()
  {
    MethodDeclarationImpl methodDeclaration = new MethodDeclarationImpl();
    return methodDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodImplementation createMethodImplementation()
  {
    MethodImplementationImpl methodImplementation = new MethodImplementationImpl();
    return methodImplementation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EventDeclaration createEventDeclaration()
  {
    EventDeclarationImpl eventDeclaration = new EventDeclarationImpl();
    return eventDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EventSpecification createEventSpecification()
  {
    EventSpecificationImpl eventSpecification = new EventSpecificationImpl();
    return eventSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EventReference createEventReference()
  {
    EventReferenceImpl eventReference = new EventReferenceImpl();
    return eventReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EventPath createEventPath()
  {
    EventPathImpl eventPath = new EventPathImpl();
    return eventPath;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EventCondition createEventCondition()
  {
    EventConditionImpl eventCondition = new EventConditionImpl();
    return eventCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RiseExpression createRiseExpression()
  {
    RiseExpressionImpl riseExpression = new RiseExpressionImpl();
    return riseExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FallExpression createFallExpression()
  {
    FallExpressionImpl fallExpression = new FallExpressionImpl();
    return fallExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElapsedExpression createElapsedExpression()
  {
    ElapsedExpressionImpl elapsedExpression = new ElapsedExpressionImpl();
    return elapsedExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EveryExpression createEveryExpression()
  {
    EveryExpressionImpl everyExpression = new EveryExpressionImpl();
    return everyExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FieldDeclaration createFieldDeclaration()
  {
    FieldDeclarationImpl fieldDeclaration = new FieldDeclarationImpl();
    return fieldDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VariableDeclaration createVariableDeclaration()
  {
    VariableDeclarationImpl variableDeclaration = new VariableDeclarationImpl();
    return variableDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SampleExpression createSampleExpression()
  {
    SampleExpressionImpl sampleExpression = new SampleExpressionImpl();
    return sampleExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BehaviorSpecification createBehaviorSpecification()
  {
    BehaviorSpecificationImpl behaviorSpecification = new BehaviorSpecificationImpl();
    return behaviorSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OnDirective createOnDirective()
  {
    OnDirectiveImpl onDirective = new OnDirectiveImpl();
    return onDirective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OnDirectiveMember createOnDirectiveMember()
  {
    OnDirectiveMemberImpl onDirectiveMember = new OnDirectiveMemberImpl();
    return onDirectiveMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CallDirective createCallDirective()
  {
    CallDirectiveImpl callDirective = new CallDirectiveImpl();
    return callDirective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EmitDirective createEmitDirective()
  {
    EmitDirectiveImpl emitDirective = new EmitDirectiveImpl();
    return emitDirective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WaitDirective createWaitDirective()
  {
    WaitDirectiveImpl waitDirective = new WaitDirectiveImpl();
    return waitDirective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DoDirective createDoDirective()
  {
    DoDirectiveImpl doDirective = new DoDirectiveImpl();
    return doDirective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DoDirectiveMember createDoDirectiveMember()
  {
    DoDirectiveMemberImpl doDirectiveMember = new DoDirectiveMemberImpl();
    return doDirectiveMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Composition createComposition()
  {
    CompositionImpl composition = new CompositionImpl();
    return composition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BehaviorInvocation createBehaviorInvocation()
  {
    BehaviorInvocationImpl behaviorInvocation = new BehaviorInvocationImpl();
    return behaviorInvocation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterWithDeclaration createParameterWithDeclaration()
  {
    ParameterWithDeclarationImpl parameterWithDeclaration = new ParameterWithDeclarationImpl();
    return parameterWithDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BehaviorWithDeclaration createBehaviorWithDeclaration()
  {
    BehaviorWithDeclarationImpl behaviorWithDeclaration = new BehaviorWithDeclarationImpl();
    return behaviorWithDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BehaviorWithMember createBehaviorWithMember()
  {
    BehaviorWithMemberImpl behaviorWithMember = new BehaviorWithMemberImpl();
    return behaviorWithMember;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConstraintDeclaration createConstraintDeclaration()
  {
    ConstraintDeclarationImpl constraintDeclaration = new ConstraintDeclarationImpl();
    return constraintDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public KeepConstraintDeclaration createKeepConstraintDeclaration()
  {
    KeepConstraintDeclarationImpl keepConstraintDeclaration = new KeepConstraintDeclarationImpl();
    return keepConstraintDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RemoveDefaultDeclaration createRemoveDefaultDeclaration()
  {
    RemoveDefaultDeclarationImpl removeDefaultDeclaration = new RemoveDefaultDeclarationImpl();
    return removeDefaultDeclaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UntilDirective createUntilDirective()
  {
    UntilDirectiveImpl untilDirective = new UntilDirectiveImpl();
    return untilDirective;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArgumentListSpecification createArgumentListSpecification()
  {
    ArgumentListSpecificationImpl argumentListSpecification = new ArgumentListSpecificationImpl();
    return argumentListSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArgumentSpecification createArgumentSpecification()
  {
    ArgumentSpecificationImpl argumentSpecification = new ArgumentSpecificationImpl();
    return argumentSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArgumentList createArgumentList()
  {
    ArgumentListImpl argumentList = new ArgumentListImpl();
    return argumentList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NamedArgument createNamedArgument()
  {
    NamedArgumentImpl namedArgument = new NamedArgumentImpl();
    return namedArgument;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PostfixExp createPostfixExp()
  {
    PostfixExpImpl postfixExp = new PostfixExpImpl();
    return postfixExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PostfixExpTail createPostfixExpTail()
  {
    PostfixExpTailImpl postfixExpTail = new PostfixExpTailImpl();
    return postfixExpTail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CastExpTail createCastExpTail()
  {
    CastExpTailImpl castExpTail = new CastExpTailImpl();
    return castExpTail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TypeTestTail createTypeTestTail()
  {
    TypeTestTailImpl typeTestTail = new TypeTestTailImpl();
    return typeTestTail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ElementAccessTail createElementAccessTail()
  {
    ElementAccessTailImpl elementAccessTail = new ElementAccessTailImpl();
    return elementAccessTail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FieldAccessTail createFieldAccessTail()
  {
    FieldAccessTailImpl fieldAccessTail = new FieldAccessTailImpl();
    return fieldAccessTail;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodInvocation createMethodInvocation()
  {
    MethodInvocationImpl methodInvocation = new MethodInvocationImpl();
    return methodInvocation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParameterReference createParameterReference()
  {
    ParameterReferenceImpl parameterReference = new ParameterReferenceImpl();
    return parameterReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PrimaryExp createPrimaryExp()
  {
    PrimaryExpImpl primaryExp = new PrimaryExpImpl();
    return primaryExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ValueExp createValueExp()
  {
    ValueExpImpl valueExp = new ValueExpImpl();
    return valueExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PhysicalType createPhysicalType()
  {
    PhysicalTypeImpl physicalType = new PhysicalTypeImpl();
    return physicalType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ListConstructor createListConstructor()
  {
    ListConstructorImpl listConstructor = new ListConstructorImpl();
    return listConstructor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RangeConstructor createRangeConstructor()
  {
    RangeConstructorImpl rangeConstructor = new RangeConstructorImpl();
    return rangeConstructor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Condition createCondition()
  {
    ConditionImpl condition = new ConditionImpl();
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression createExpression()
  {
    ExpressionImpl expression = new ExpressionImpl();
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Relation createRelation()
  {
    RelationImpl relation = new RelationImpl();
    return relation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sum createSum()
  {
    SumImpl sum = new SumImpl();
    return sum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Term createTerm()
  {
    TermImpl term = new TermImpl();
    return term;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Factor createFactor()
  {
    FactorImpl factor = new FactorImpl();
    return factor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OpenScenarioPackage getOpenScenarioPackage()
  {
    return (OpenScenarioPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static OpenScenarioPackage getPackage()
  {
    return OpenScenarioPackage.eINSTANCE;
  }

} //OpenScenarioFactoryImpl
