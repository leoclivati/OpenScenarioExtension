/*
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.asam.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.bmwgroup.openscenario.asam.ide.contentassist.antlr.internal.InternalOpenScenarioParser;
import de.bmwgroup.openscenario.asam.services.OpenScenarioGrammarAccess;
import java.util.Map;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.TokenSource;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class OpenScenarioParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(OpenScenarioGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, OpenScenarioGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getImportReferenceAccess().getAlternatives(), "rule__ImportReference__Alternatives");
			builder.put(grammarAccess.getOscDeclarationAccess().getAlternatives(), "rule__OscDeclaration__Alternatives");
			builder.put(grammarAccess.getSIUnitFactorAccess().getAlternatives_2(), "rule__SIUnitFactor__Alternatives_2");
			builder.put(grammarAccess.getSIUnitOffsetAccess().getAlternatives_2(), "rule__SIUnitOffset__Alternatives_2");
			builder.put(grammarAccess.getSIBaseUnitNameAccess().getAlternatives(), "rule__SIBaseUnitName__Alternatives");
			builder.put(grammarAccess.getTypeExtensionAccess().getAlternatives(), "rule__TypeExtension__Alternatives");
			builder.put(grammarAccess.getExtensionMemberDeclarationAccess().getAlternatives(), "rule__ExtensionMemberDeclaration__Alternatives");
			builder.put(grammarAccess.getTypeDeclaratorAccess().getAlternatives(), "rule__TypeDeclarator__Alternatives");
			builder.put(grammarAccess.getNonAggregateTypeDeclaratorAccess().getAlternatives(), "rule__NonAggregateTypeDeclarator__Alternatives");
			builder.put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
			builder.put(grammarAccess.getModifierDeclarationAccess().getAlternatives_6(), "rule__ModifierDeclaration__Alternatives_6");
			builder.put(grammarAccess.getActionDeclarationAccess().getAlternatives_2_2_3(), "rule__ActionDeclaration__Alternatives_2_2_3");
			builder.put(grammarAccess.getActorDeclarationAccess().getAlternatives_2_2_3(), "rule__ActorDeclaration__Alternatives_2_2_3");
			builder.put(grammarAccess.getStructDeclarationAccess().getAlternatives_2_2_3(), "rule__StructDeclaration__Alternatives_2_2_3");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getAlternatives_2_2_3(), "rule__ScenarioDeclaration__Alternatives_2_2_3");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getAlternatives_5(), "rule__ScenarioDeclaration__Alternatives_5");
			builder.put(grammarAccess.getMemberDeclarationAccess().getAlternatives(), "rule__MemberDeclaration__Alternatives");
			builder.put(grammarAccess.getCoverageDeclarationAccess().getAlternatives_0(), "rule__CoverageDeclaration__Alternatives_0");
			builder.put(grammarAccess.getMethodImplementationAccess().getAlternatives_2(), "rule__MethodImplementation__Alternatives_2");
			builder.put(grammarAccess.getEventSpecificationAccess().getAlternatives(), "rule__EventSpecification__Alternatives");
			builder.put(grammarAccess.getEventConditionAccess().getAlternatives(), "rule__EventCondition__Alternatives");
			builder.put(grammarAccess.getFieldDeclarationAccess().getAlternatives(), "rule__FieldDeclaration__Alternatives");
			builder.put(grammarAccess.getVariableDeclarationAccess().getAlternatives_5_1(), "rule__VariableDeclaration__Alternatives_5_1");
			builder.put(grammarAccess.getBehaviorSpecificationAccess().getAlternatives(), "rule__BehaviorSpecification__Alternatives");
			builder.put(grammarAccess.getOnDirectiveMemberAccess().getAlternatives(), "rule__OnDirectiveMember__Alternatives");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getAlternatives_1(), "rule__DoDirectiveMember__Alternatives_1");
			builder.put(grammarAccess.getCompositionOptionsAccess().getAlternatives(), "rule__CompositionOptions__Alternatives");
			builder.put(grammarAccess.getBehaviorWithMemberAccess().getAlternatives(), "rule__BehaviorWithMember__Alternatives");
			builder.put(grammarAccess.getConstraintDeclarationAccess().getAlternatives(), "rule__ConstraintDeclaration__Alternatives");
			builder.put(grammarAccess.getConstraintQualifierAccess().getAlternatives(), "rule__ConstraintQualifier__Alternatives");
			builder.put(grammarAccess.getArgumentListAccess().getAlternatives(), "rule__ArgumentList__Alternatives");
			builder.put(grammarAccess.getNamedArgumentAccess().getAlternatives_0(), "rule__NamedArgument__Alternatives_0");
			builder.put(grammarAccess.getPostfixExpTailAccess().getAlternatives(), "rule__PostfixExpTail__Alternatives");
			builder.put(grammarAccess.getPrimaryExpAccess().getAlternatives(), "rule__PrimaryExp__Alternatives");
			builder.put(grammarAccess.getValueExpAccess().getAlternatives(), "rule__ValueExp__Alternatives");
			builder.put(grammarAccess.getPhysicalTypeAccess().getAlternatives_0(), "rule__PhysicalType__Alternatives_0");
			builder.put(grammarAccess.getPhysicalTypeAccess().getAlternatives_1(), "rule__PhysicalType__Alternatives_1");
			builder.put(grammarAccess.getRangeConstructorAccess().getAlternatives(), "rule__RangeConstructor__Alternatives");
			builder.put(grammarAccess.getRelationalOpAccess().getAlternatives(), "rule__RelationalOp__Alternatives");
			builder.put(grammarAccess.getAdditiveOpAccess().getAlternatives(), "rule__AdditiveOp__Alternatives");
			builder.put(grammarAccess.getMultiplicativeOpAccess().getAlternatives(), "rule__MultiplicativeOp__Alternatives");
			builder.put(grammarAccess.getOscFileAccess().getGroup(), "rule__OscFile__Group__0");
			builder.put(grammarAccess.getImportStatementAccess().getGroup(), "rule__ImportStatement__Group__0");
			builder.put(grammarAccess.getStructuredIDAccess().getGroup(), "rule__StructuredID__Group__0");
			builder.put(grammarAccess.getStructuredIDAccess().getGroup_1(), "rule__StructuredID__Group_1__0");
			builder.put(grammarAccess.getPhysicalTypeDeclarationAccess().getGroup(), "rule__PhysicalTypeDeclaration__Group__0");
			builder.put(grammarAccess.getUnitDeclarationAccess().getGroup(), "rule__UnitDeclaration__Group__0");
			builder.put(grammarAccess.getSIBaseUnitSpecifierAccess().getGroup(), "rule__SIBaseUnitSpecifier__Group__0");
			builder.put(grammarAccess.getSIBaseExponentListAccess().getGroup(), "rule__SIBaseExponentList__Group__0");
			builder.put(grammarAccess.getSIBaseExponentListAccess().getGroup_1(), "rule__SIBaseExponentList__Group_1__0");
			builder.put(grammarAccess.getSIBaseExponentAccess().getGroup(), "rule__SIBaseExponent__Group__0");
			builder.put(grammarAccess.getSIUnitSpecifierAccess().getGroup(), "rule__SIUnitSpecifier__Group__0");
			builder.put(grammarAccess.getSIUnitSpecifierAccess().getGroup_3(), "rule__SIUnitSpecifier__Group_3__0");
			builder.put(grammarAccess.getSIUnitSpecifierAccess().getGroup_4(), "rule__SIUnitSpecifier__Group_4__0");
			builder.put(grammarAccess.getSIUnitFactorAccess().getGroup(), "rule__SIUnitFactor__Group__0");
			builder.put(grammarAccess.getSIUnitOffsetAccess().getGroup(), "rule__SIUnitOffset__Group__0");
			builder.put(grammarAccess.getEnumTypeExtensionAccess().getGroup(), "rule__EnumTypeExtension__Group__0");
			builder.put(grammarAccess.getEnumTypeExtensionAccess().getGroup_5(), "rule__EnumTypeExtension__Group_5__0");
			builder.put(grammarAccess.getStructuredTypeExtensionAccess().getGroup(), "rule__StructuredTypeExtension__Group__0");
			builder.put(grammarAccess.getGlobalParameterDeclarationAccess().getGroup(), "rule__GlobalParameterDeclaration__Group__0");
			builder.put(grammarAccess.getParameterDeclarationAccess().getGroup(), "rule__ParameterDeclaration__Group__0");
			builder.put(grammarAccess.getParameterDeclarationAccess().getGroup_1(), "rule__ParameterDeclaration__Group_1__0");
			builder.put(grammarAccess.getParameterDeclarationAccess().getGroup_4(), "rule__ParameterDeclaration__Group_4__0");
			builder.put(grammarAccess.getListTypeDeclaratorAccess().getGroup(), "rule__ListTypeDeclarator__Group__0");
			builder.put(grammarAccess.getEnumDeclarationAccess().getGroup(), "rule__EnumDeclaration__Group__0");
			builder.put(grammarAccess.getEnumDeclarationAccess().getGroup_5(), "rule__EnumDeclaration__Group_5__0");
			builder.put(grammarAccess.getEnumMemberDeclarationAccess().getGroup(), "rule__EnumMemberDeclaration__Group__0");
			builder.put(grammarAccess.getEnumMemberDeclarationAccess().getGroup_1(), "rule__EnumMemberDeclaration__Group_1__0");
			builder.put(grammarAccess.getEnumValueReferenceAccess().getGroup(), "rule__EnumValueReference__Group__0");
			builder.put(grammarAccess.getEnumValueReferenceAccess().getGroup_0(), "rule__EnumValueReference__Group_0__0");
			builder.put(grammarAccess.getModifierDeclarationAccess().getGroup(), "rule__ModifierDeclaration__Group__0");
			builder.put(grammarAccess.getModifierDeclarationAccess().getGroup_1(), "rule__ModifierDeclaration__Group_1__0");
			builder.put(grammarAccess.getModifierDeclarationAccess().getGroup_3(), "rule__ModifierDeclaration__Group_3__0");
			builder.put(grammarAccess.getActionDeclarationAccess().getGroup(), "rule__ActionDeclaration__Group__0");
			builder.put(grammarAccess.getActionDeclarationAccess().getGroup_2(), "rule__ActionDeclaration__Group_2__0");
			builder.put(grammarAccess.getActionDeclarationAccess().getGroup_2_2(), "rule__ActionDeclaration__Group_2_2__0");
			builder.put(grammarAccess.getActorDeclarationAccess().getGroup(), "rule__ActorDeclaration__Group__0");
			builder.put(grammarAccess.getActorDeclarationAccess().getGroup_2(), "rule__ActorDeclaration__Group_2__0");
			builder.put(grammarAccess.getActorDeclarationAccess().getGroup_2_2(), "rule__ActorDeclaration__Group_2_2__0");
			builder.put(grammarAccess.getActorDeclarationAccess().getGroup_3(), "rule__ActorDeclaration__Group_3__0");
			builder.put(grammarAccess.getStructDeclarationAccess().getGroup(), "rule__StructDeclaration__Group__0");
			builder.put(grammarAccess.getStructDeclarationAccess().getGroup_2(), "rule__StructDeclaration__Group_2__0");
			builder.put(grammarAccess.getStructDeclarationAccess().getGroup_2_2(), "rule__StructDeclaration__Group_2_2__0");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getGroup(), "rule__ScenarioDeclaration__Group__0");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getGroup_2(), "rule__ScenarioDeclaration__Group_2__0");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getGroup_2_2(), "rule__ScenarioDeclaration__Group_2_2__0");
			builder.put(grammarAccess.getCoverageDeclarationAccess().getGroup(), "rule__CoverageDeclaration__Group__0");
			builder.put(grammarAccess.getMethodDeclarationAccess().getGroup(), "rule__MethodDeclaration__Group__0");
			builder.put(grammarAccess.getMethodDeclarationAccess().getGroup_5(), "rule__MethodDeclaration__Group_5__0");
			builder.put(grammarAccess.getMethodImplementationAccess().getGroup(), "rule__MethodImplementation__Group__0");
			builder.put(grammarAccess.getMethodImplementationAccess().getGroup_2_0(), "rule__MethodImplementation__Group_2_0__0");
			builder.put(grammarAccess.getMethodImplementationAccess().getGroup_2_2(), "rule__MethodImplementation__Group_2_2__0");
			builder.put(grammarAccess.getEventDeclarationAccess().getGroup(), "rule__EventDeclaration__Group__0");
			builder.put(grammarAccess.getEventDeclarationAccess().getGroup_2(), "rule__EventDeclaration__Group_2__0");
			builder.put(grammarAccess.getEventDeclarationAccess().getGroup_2_1(), "rule__EventDeclaration__Group_2_1__0");
			builder.put(grammarAccess.getEventDeclarationAccess().getGroup_2_1_1(), "rule__EventDeclaration__Group_2_1_1__0");
			builder.put(grammarAccess.getEventDeclarationAccess().getGroup_3(), "rule__EventDeclaration__Group_3__0");
			builder.put(grammarAccess.getEventSpecificationAccess().getGroup_0(), "rule__EventSpecification__Group_0__0");
			builder.put(grammarAccess.getEventSpecificationAccess().getGroup_0_1(), "rule__EventSpecification__Group_0_1__0");
			builder.put(grammarAccess.getEventSpecificationAccess().getGroup_0_1_0(), "rule__EventSpecification__Group_0_1_0__0");
			builder.put(grammarAccess.getEventReferenceAccess().getGroup(), "rule__EventReference__Group__0");
			builder.put(grammarAccess.getEventPathAccess().getGroup(), "rule__EventPath__Group__0");
			builder.put(grammarAccess.getEventPathAccess().getGroup_0(), "rule__EventPath__Group_0__0");
			builder.put(grammarAccess.getRiseExpressionAccess().getGroup(), "rule__RiseExpression__Group__0");
			builder.put(grammarAccess.getFallExpressionAccess().getGroup(), "rule__FallExpression__Group__0");
			builder.put(grammarAccess.getElapsedExpressionAccess().getGroup(), "rule__ElapsedExpression__Group__0");
			builder.put(grammarAccess.getEveryExpressionAccess().getGroup(), "rule__EveryExpression__Group__0");
			builder.put(grammarAccess.getEveryExpressionAccess().getGroup_3(), "rule__EveryExpression__Group_3__0");
			builder.put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
			builder.put(grammarAccess.getVariableDeclarationAccess().getGroup_2(), "rule__VariableDeclaration__Group_2__0");
			builder.put(grammarAccess.getVariableDeclarationAccess().getGroup_5(), "rule__VariableDeclaration__Group_5__0");
			builder.put(grammarAccess.getSampleExpressionAccess().getGroup(), "rule__SampleExpression__Group__0");
			builder.put(grammarAccess.getSampleExpressionAccess().getGroup_5(), "rule__SampleExpression__Group_5__0");
			builder.put(grammarAccess.getOnDirectiveAccess().getGroup(), "rule__OnDirective__Group__0");
			builder.put(grammarAccess.getCallDirectiveAccess().getGroup(), "rule__CallDirective__Group__0");
			builder.put(grammarAccess.getEmitDirectiveAccess().getGroup(), "rule__EmitDirective__Group__0");
			builder.put(grammarAccess.getWaitDirectiveAccess().getGroup(), "rule__WaitDirective__Group__0");
			builder.put(grammarAccess.getDoDirectiveAccess().getGroup(), "rule__DoDirective__Group__0");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getGroup(), "rule__DoDirectiveMember__Group__0");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getGroup_0(), "rule__DoDirectiveMember__Group_0__0");
			builder.put(grammarAccess.getCompositionAccess().getGroup(), "rule__Composition__Group__0");
			builder.put(grammarAccess.getCompositionAccess().getGroup_1(), "rule__Composition__Group_1__0");
			builder.put(grammarAccess.getCompositionAccess().getGroup_4(), "rule__Composition__Group_4__0");
			builder.put(grammarAccess.getBehaviorInvocationAccess().getGroup(), "rule__BehaviorInvocation__Group__0");
			builder.put(grammarAccess.getParameterWithDeclarationAccess().getGroup(), "rule__ParameterWithDeclaration__Group__0");
			builder.put(grammarAccess.getBehaviorWithDeclarationAccess().getGroup(), "rule__BehaviorWithDeclaration__Group__0");
			builder.put(grammarAccess.getKeepConstraintDeclarationAccess().getGroup(), "rule__KeepConstraintDeclaration__Group__0");
			builder.put(grammarAccess.getRemoveDefaultDeclarationAccess().getGroup(), "rule__RemoveDefaultDeclaration__Group__0");
			builder.put(grammarAccess.getUntilDirectiveAccess().getGroup(), "rule__UntilDirective__Group__0");
			builder.put(grammarAccess.getArgumentListSpecificationAccess().getGroup(), "rule__ArgumentListSpecification__Group__0");
			builder.put(grammarAccess.getArgumentListSpecificationAccess().getGroup_1(), "rule__ArgumentListSpecification__Group_1__0");
			builder.put(grammarAccess.getArgumentSpecificationAccess().getGroup(), "rule__ArgumentSpecification__Group__0");
			builder.put(grammarAccess.getArgumentSpecificationAccess().getGroup_3(), "rule__ArgumentSpecification__Group_3__0");
			builder.put(grammarAccess.getArgumentListAccess().getGroup_0(), "rule__ArgumentList__Group_0__0");
			builder.put(grammarAccess.getArgumentListAccess().getGroup_0_1(), "rule__ArgumentList__Group_0_1__0");
			builder.put(grammarAccess.getArgumentListAccess().getGroup_0_2(), "rule__ArgumentList__Group_0_2__0");
			builder.put(grammarAccess.getArgumentListAccess().getGroup_1(), "rule__ArgumentList__Group_1__0");
			builder.put(grammarAccess.getArgumentListAccess().getGroup_1_1(), "rule__ArgumentList__Group_1_1__0");
			builder.put(grammarAccess.getNamedArgumentAccess().getGroup(), "rule__NamedArgument__Group__0");
			builder.put(grammarAccess.getNamedArgumentAccess().getGroup_3(), "rule__NamedArgument__Group_3__0");
			builder.put(grammarAccess.getPostfixExpAccess().getGroup(), "rule__PostfixExp__Group__0");
			builder.put(grammarAccess.getCastExpTailAccess().getGroup(), "rule__CastExpTail__Group__0");
			builder.put(grammarAccess.getTypeTestTailAccess().getGroup(), "rule__TypeTestTail__Group__0");
			builder.put(grammarAccess.getElementAccessTailAccess().getGroup(), "rule__ElementAccessTail__Group__0");
			builder.put(grammarAccess.getFieldAccessTailAccess().getGroup(), "rule__FieldAccessTail__Group__0");
			builder.put(grammarAccess.getMethodInvocationAccess().getGroup(), "rule__MethodInvocation__Group__0");
			builder.put(grammarAccess.getParameterReferenceAccess().getGroup(), "rule__ParameterReference__Group__0");
			builder.put(grammarAccess.getPhysicalTypeAccess().getGroup(), "rule__PhysicalType__Group__0");
			builder.put(grammarAccess.getListConstructorAccess().getGroup(), "rule__ListConstructor__Group__0");
			builder.put(grammarAccess.getListConstructorAccess().getGroup_2(), "rule__ListConstructor__Group_2__0");
			builder.put(grammarAccess.getRangeConstructorAccess().getGroup_0(), "rule__RangeConstructor__Group_0__0");
			builder.put(grammarAccess.getRangeConstructorAccess().getGroup_1(), "rule__RangeConstructor__Group_1__0");
			builder.put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
			builder.put(grammarAccess.getRelationAccess().getGroup(), "rule__Relation__Group__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_2(), "rule__Relation__Group_2__0");
			builder.put(grammarAccess.getSumAccess().getGroup(), "rule__Sum__Group__0");
			builder.put(grammarAccess.getSumAccess().getGroup_1(), "rule__Sum__Group_1__0");
			builder.put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1(), "rule__Term__Group_1__0");
			builder.put(grammarAccess.getFactorAccess().getGroup(), "rule__Factor__Group__0");
			builder.put(grammarAccess.getOscFileAccess().getPreludeStatementsAssignment_0(), "rule__OscFile__PreludeStatementsAssignment_0");
			builder.put(grammarAccess.getOscFileAccess().getOscDeclarationsAssignment_1(), "rule__OscFile__OscDeclarationsAssignment_1");
			builder.put(grammarAccess.getImportStatementAccess().getImportReferenceAssignment_1(), "rule__ImportStatement__ImportReferenceAssignment_1");
			builder.put(grammarAccess.getStructuredIDAccess().getIdentifierAssignment_0(), "rule__StructuredID__IdentifierAssignment_0");
			builder.put(grammarAccess.getStructuredIDAccess().getIdentifierAssignment_1_1(), "rule__StructuredID__IdentifierAssignment_1_1");
			builder.put(grammarAccess.getPhysicalTypeDeclarationAccess().getPhysicalTypeNameAssignment_1(), "rule__PhysicalTypeDeclaration__PhysicalTypeNameAssignment_1");
			builder.put(grammarAccess.getPhysicalTypeDeclarationAccess().getBaseUnitSpecifierAssignment_3(), "rule__PhysicalTypeDeclaration__BaseUnitSpecifierAssignment_3");
			builder.put(grammarAccess.getUnitDeclarationAccess().getUnitNameAssignment_1(), "rule__UnitDeclaration__UnitNameAssignment_1");
			builder.put(grammarAccess.getUnitDeclarationAccess().getPhysicalTypeNameAssignment_3(), "rule__UnitDeclaration__PhysicalTypeNameAssignment_3");
			builder.put(grammarAccess.getUnitDeclarationAccess().getUnitSpecifierAssignment_5(), "rule__UnitDeclaration__UnitSpecifierAssignment_5");
			builder.put(grammarAccess.getSIBaseUnitSpecifierAccess().getSIBaseExponentListAssignment_2(), "rule__SIBaseUnitSpecifier__SIBaseExponentListAssignment_2");
			builder.put(grammarAccess.getSIBaseExponentListAccess().getSIBaseExponentListAssignment_0(), "rule__SIBaseExponentList__SIBaseExponentListAssignment_0");
			builder.put(grammarAccess.getSIBaseExponentListAccess().getNextSIBaseExponentListAssignment_1_1(), "rule__SIBaseExponentList__NextSIBaseExponentListAssignment_1_1");
			builder.put(grammarAccess.getSIBaseExponentAccess().getUnitAssignment_0(), "rule__SIBaseExponent__UnitAssignment_0");
			builder.put(grammarAccess.getSIBaseExponentAccess().getNumberAssignment_2(), "rule__SIBaseExponent__NumberAssignment_2");
			builder.put(grammarAccess.getSIUnitSpecifierAccess().getSIBaseExponentListAssignment_2(), "rule__SIUnitSpecifier__SIBaseExponentListAssignment_2");
			builder.put(grammarAccess.getSIUnitSpecifierAccess().getSIfactorAssignment_3_1(), "rule__SIUnitSpecifier__SIfactorAssignment_3_1");
			builder.put(grammarAccess.getSIUnitSpecifierAccess().getSIUnitAssignment_4_1(), "rule__SIUnitSpecifier__SIUnitAssignment_4_1");
			builder.put(grammarAccess.getEnumTypeExtensionAccess().getEnumNameAssignment_1(), "rule__EnumTypeExtension__EnumNameAssignment_1");
			builder.put(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsAssignment_4(), "rule__EnumTypeExtension__EnumMemberDeclsAssignment_4");
			builder.put(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsAssignment_5_1(), "rule__EnumTypeExtension__EnumMemberDeclsAssignment_5_1");
			builder.put(grammarAccess.getStructuredTypeExtensionAccess().getExtendableTypeNameAssignment_1(), "rule__StructuredTypeExtension__ExtendableTypeNameAssignment_1");
			builder.put(grammarAccess.getStructuredTypeExtensionAccess().getExtensionMemberDeclsAssignment_4(), "rule__StructuredTypeExtension__ExtensionMemberDeclsAssignment_4");
			builder.put(grammarAccess.getGlobalParameterDeclarationAccess().getParameterDeclarationAssignment_1(), "rule__GlobalParameterDeclaration__ParameterDeclarationAssignment_1");
			builder.put(grammarAccess.getParameterDeclarationAccess().getFieldNameAssignment_0(), "rule__ParameterDeclaration__FieldNameAssignment_0");
			builder.put(grammarAccess.getParameterDeclarationAccess().getNextfieldNameAssignment_1_1(), "rule__ParameterDeclaration__NextfieldNameAssignment_1_1");
			builder.put(grammarAccess.getParameterDeclarationAccess().getTypeDeclaratorAssignment_3(), "rule__ParameterDeclaration__TypeDeclaratorAssignment_3");
			builder.put(grammarAccess.getParameterDeclarationAccess().getDefaultValueAssignment_4_1(), "rule__ParameterDeclaration__DefaultValueAssignment_4_1");
			builder.put(grammarAccess.getParameterDeclarationAccess().getWithDeclarationAssignment_5(), "rule__ParameterDeclaration__WithDeclarationAssignment_5");
			builder.put(grammarAccess.getEnumDeclarationAccess().getEnumNameAssignment_1(), "rule__EnumDeclaration__EnumNameAssignment_1");
			builder.put(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsAssignment_4(), "rule__EnumDeclaration__EnumMemberDeclsAssignment_4");
			builder.put(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsAssignment_5_1(), "rule__EnumDeclaration__EnumMemberDeclsAssignment_5_1");
			builder.put(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberNameAssignment_0(), "rule__EnumMemberDeclaration__EnumMemberNameAssignment_0");
			builder.put(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberValueAssignment_1_1(), "rule__EnumMemberDeclaration__EnumMemberValueAssignment_1_1");
			builder.put(grammarAccess.getEnumValueReferenceAccess().getEnumNameAssignment_0_0(), "rule__EnumValueReference__EnumNameAssignment_0_0");
			builder.put(grammarAccess.getEnumValueReferenceAccess().getEnumMemberNameAssignment_1(), "rule__EnumValueReference__EnumMemberNameAssignment_1");
			builder.put(grammarAccess.getModifierDeclarationAccess().getActorNameAssignment_1_0(), "rule__ModifierDeclaration__ActorNameAssignment_1_0");
			builder.put(grammarAccess.getModifierDeclarationAccess().getModifierNameAssignment_2(), "rule__ModifierDeclaration__ModifierNameAssignment_2");
			builder.put(grammarAccess.getModifierDeclarationAccess().getQualifiedBehaviorNameAssignment_3_1(), "rule__ModifierDeclaration__QualifiedBehaviorNameAssignment_3_1");
			builder.put(grammarAccess.getModifierDeclarationAccess().getScenarioMemberDeclAssignment_6_0(), "rule__ModifierDeclaration__ScenarioMemberDeclAssignment_6_0");
			builder.put(grammarAccess.getModifierDeclarationAccess().getBehaviorSpecificationAssignment_6_1(), "rule__ModifierDeclaration__BehaviorSpecificationAssignment_6_1");
			builder.put(grammarAccess.getActionDeclarationAccess().getNameAssignment_1(), "rule__ActionDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getActionDeclarationAccess().getBaseActionNameAssignment_2_1(), "rule__ActionDeclaration__BaseActionNameAssignment_2_1");
			builder.put(grammarAccess.getActionDeclarationAccess().getFieldNameAssignment_2_2_1(), "rule__ActionDeclaration__FieldNameAssignment_2_2_1");
			builder.put(grammarAccess.getActionDeclarationAccess().getEnumReferenceAssignment_2_2_3_0(), "rule__ActionDeclaration__EnumReferenceAssignment_2_2_3_0");
			builder.put(grammarAccess.getActionDeclarationAccess().getActionMemberDeclAssignment_5(), "rule__ActionDeclaration__ActionMemberDeclAssignment_5");
			builder.put(grammarAccess.getActorDeclarationAccess().getNameAssignment_1(), "rule__ActorDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getActorDeclarationAccess().getBaseActorNameAssignment_2_1(), "rule__ActorDeclaration__BaseActorNameAssignment_2_1");
			builder.put(grammarAccess.getActorDeclarationAccess().getFieldNameAssignment_2_2_1(), "rule__ActorDeclaration__FieldNameAssignment_2_2_1");
			builder.put(grammarAccess.getActorDeclarationAccess().getEnumReferenceAssignment_2_2_3_0(), "rule__ActorDeclaration__EnumReferenceAssignment_2_2_3_0");
			builder.put(grammarAccess.getActorDeclarationAccess().getActorMemberDeclAssignment_3_2(), "rule__ActorDeclaration__ActorMemberDeclAssignment_3_2");
			builder.put(grammarAccess.getStructDeclarationAccess().getNameAssignment_1(), "rule__StructDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getStructDeclarationAccess().getBaseStructNameAssignment_2_1(), "rule__StructDeclaration__BaseStructNameAssignment_2_1");
			builder.put(grammarAccess.getStructDeclarationAccess().getFieldNameAssignment_2_2_1(), "rule__StructDeclaration__FieldNameAssignment_2_2_1");
			builder.put(grammarAccess.getStructDeclarationAccess().getEnumReferenceAssignment_2_2_3_0(), "rule__StructDeclaration__EnumReferenceAssignment_2_2_3_0");
			builder.put(grammarAccess.getStructDeclarationAccess().getStructMemberDeclAssignment_5(), "rule__StructDeclaration__StructMemberDeclAssignment_5");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getNameAssignment_1(), "rule__ScenarioDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getBaseScenarioNameAssignment_2_1(), "rule__ScenarioDeclaration__BaseScenarioNameAssignment_2_1");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getFieldNameAssignment_2_2_1(), "rule__ScenarioDeclaration__FieldNameAssignment_2_2_1");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getEnumReferenceAssignment_2_2_3_0(), "rule__ScenarioDeclaration__EnumReferenceAssignment_2_2_3_0");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getScenarioMemberDeclAssignment_5_0(), "rule__ScenarioDeclaration__ScenarioMemberDeclAssignment_5_0");
			builder.put(grammarAccess.getScenarioDeclarationAccess().getBehaviorSpecificationAssignment_5_1(), "rule__ScenarioDeclaration__BehaviorSpecificationAssignment_5_1");
			builder.put(grammarAccess.getCoverageDeclarationAccess().getArgumentListAssignment_2(), "rule__CoverageDeclaration__ArgumentListAssignment_2");
			builder.put(grammarAccess.getMethodDeclarationAccess().getMethodNameAssignment_1(), "rule__MethodDeclaration__MethodNameAssignment_1");
			builder.put(grammarAccess.getMethodDeclarationAccess().getArgumentListSpecificationAssignment_3(), "rule__MethodDeclaration__ArgumentListSpecificationAssignment_3");
			builder.put(grammarAccess.getMethodDeclarationAccess().getReturnTypeAssignment_5_1(), "rule__MethodDeclaration__ReturnTypeAssignment_5_1");
			builder.put(grammarAccess.getMethodDeclarationAccess().getMethodImplementationAssignment_6(), "rule__MethodDeclaration__MethodImplementationAssignment_6");
			builder.put(grammarAccess.getMethodImplementationAccess().getExpressionAssignment_2_0_1(), "rule__MethodImplementation__ExpressionAssignment_2_0_1");
			builder.put(grammarAccess.getMethodImplementationAccess().getStructuredIDAssignment_2_2_1(), "rule__MethodImplementation__StructuredIDAssignment_2_2_1");
			builder.put(grammarAccess.getMethodImplementationAccess().getArgumentListAssignment_2_2_3(), "rule__MethodImplementation__ArgumentListAssignment_2_2_3");
			builder.put(grammarAccess.getEventDeclarationAccess().getEventNameAssignment_1(), "rule__EventDeclaration__EventNameAssignment_1");
			builder.put(grammarAccess.getEventDeclarationAccess().getParamsAssignment_2_1_0(), "rule__EventDeclaration__ParamsAssignment_2_1_0");
			builder.put(grammarAccess.getEventDeclarationAccess().getParamsAssignment_2_1_1_1(), "rule__EventDeclaration__ParamsAssignment_2_1_1_1");
			builder.put(grammarAccess.getEventDeclarationAccess().getEventSpecificationAssignment_3_1(), "rule__EventDeclaration__EventSpecificationAssignment_3_1");
			builder.put(grammarAccess.getEventSpecificationAccess().getEventReferenceAssignment_0_0(), "rule__EventSpecification__EventReferenceAssignment_0_0");
			builder.put(grammarAccess.getEventSpecificationAccess().getEventFieldNameAssignment_0_1_0_1(), "rule__EventSpecification__EventFieldNameAssignment_0_1_0_1");
			builder.put(grammarAccess.getEventSpecificationAccess().getEventConditionAssignment_0_1_2(), "rule__EventSpecification__EventConditionAssignment_0_1_2");
			builder.put(grammarAccess.getEventSpecificationAccess().getEventConditionAssignment_1(), "rule__EventSpecification__EventConditionAssignment_1");
			builder.put(grammarAccess.getEventReferenceAccess().getEventPathAssignment_1(), "rule__EventReference__EventPathAssignment_1");
			builder.put(grammarAccess.getEventPathAccess().getExpressionAssignment_0_0(), "rule__EventPath__ExpressionAssignment_0_0");
			builder.put(grammarAccess.getEventPathAccess().getEventNameAssignment_1(), "rule__EventPath__EventNameAssignment_1");
			builder.put(grammarAccess.getRiseExpressionAccess().getBoolExpressionAssignment_2(), "rule__RiseExpression__BoolExpressionAssignment_2");
			builder.put(grammarAccess.getFallExpressionAccess().getBoolExpressionAssignment_2(), "rule__FallExpression__BoolExpressionAssignment_2");
			builder.put(grammarAccess.getElapsedExpressionAccess().getDurationExpressionAssignment_2(), "rule__ElapsedExpression__DurationExpressionAssignment_2");
			builder.put(grammarAccess.getEveryExpressionAccess().getDurationExpressionAssignment_2(), "rule__EveryExpression__DurationExpressionAssignment_2");
			builder.put(grammarAccess.getEveryExpressionAccess().getNextdurationExpressionAssignment_3_3(), "rule__EveryExpression__NextdurationExpressionAssignment_3_3");
			builder.put(grammarAccess.getVariableDeclarationAccess().getFieldNameAssignment_1(), "rule__VariableDeclaration__FieldNameAssignment_1");
			builder.put(grammarAccess.getVariableDeclarationAccess().getNextfieldNameAssignment_2_1(), "rule__VariableDeclaration__NextfieldNameAssignment_2_1");
			builder.put(grammarAccess.getVariableDeclarationAccess().getTypeDeclaratorAssignment_4(), "rule__VariableDeclaration__TypeDeclaratorAssignment_4");
			builder.put(grammarAccess.getVariableDeclarationAccess().getDefaultValueAssignment_5_1_0(), "rule__VariableDeclaration__DefaultValueAssignment_5_1_0");
			builder.put(grammarAccess.getVariableDeclarationAccess().getSampleExpressionAssignment_5_1_1(), "rule__VariableDeclaration__SampleExpressionAssignment_5_1_1");
			builder.put(grammarAccess.getSampleExpressionAccess().getExpressionAssignment_2(), "rule__SampleExpression__ExpressionAssignment_2");
			builder.put(grammarAccess.getSampleExpressionAccess().getEventSpecificationAssignment_4(), "rule__SampleExpression__EventSpecificationAssignment_4");
			builder.put(grammarAccess.getSampleExpressionAccess().getDefaultValueAssignment_5_1(), "rule__SampleExpression__DefaultValueAssignment_5_1");
			builder.put(grammarAccess.getOnDirectiveAccess().getEventSpecificationAssignment_1(), "rule__OnDirective__EventSpecificationAssignment_1");
			builder.put(grammarAccess.getOnDirectiveAccess().getOnMemberAssignment_4(), "rule__OnDirective__OnMemberAssignment_4");
			builder.put(grammarAccess.getCallDirectiveAccess().getMethodInvocationAssignment_1(), "rule__CallDirective__MethodInvocationAssignment_1");
			builder.put(grammarAccess.getEmitDirectiveAccess().getEventNameAssignment_1(), "rule__EmitDirective__EventNameAssignment_1");
			builder.put(grammarAccess.getEmitDirectiveAccess().getArgumentListAssignment_3(), "rule__EmitDirective__ArgumentListAssignment_3");
			builder.put(grammarAccess.getWaitDirectiveAccess().getEventSpecificationAssignment_1(), "rule__WaitDirective__EventSpecificationAssignment_1");
			builder.put(grammarAccess.getDoDirectiveAccess().getDoMembersAssignment_1(), "rule__DoDirective__DoMembersAssignment_1");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getLabelNameAssignment_0_0(), "rule__DoDirectiveMember__LabelNameAssignment_0_0");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getCompositionAssignment_1_0(), "rule__DoDirectiveMember__CompositionAssignment_1_0");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getEmitDirectiveAssignment_1_1(), "rule__DoDirectiveMember__EmitDirectiveAssignment_1_1");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getCallDirectiveAssignment_1_2(), "rule__DoDirectiveMember__CallDirectiveAssignment_1_2");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getWaitDirectiveAssignment_1_3(), "rule__DoDirectiveMember__WaitDirectiveAssignment_1_3");
			builder.put(grammarAccess.getDoDirectiveMemberAccess().getBehaviorInvocationAssignment_1_4(), "rule__DoDirectiveMember__BehaviorInvocationAssignment_1_4");
			builder.put(grammarAccess.getCompositionAccess().getCompositionOpAssignment_0(), "rule__Composition__CompositionOpAssignment_0");
			builder.put(grammarAccess.getCompositionAccess().getArgumentListAssignment_1_1(), "rule__Composition__ArgumentListAssignment_1_1");
			builder.put(grammarAccess.getCompositionAccess().getDoMembersAssignment_4_0(), "rule__Composition__DoMembersAssignment_4_0");
			builder.put(grammarAccess.getCompositionAccess().getWithDeclarationAssignment_4_1(), "rule__Composition__WithDeclarationAssignment_4_1");
			builder.put(grammarAccess.getBehaviorInvocationAccess().getActorExpressionAssignment_0(), "rule__BehaviorInvocation__ActorExpressionAssignment_0");
			builder.put(grammarAccess.getBehaviorInvocationAccess().getArgumentListAssignment_2(), "rule__BehaviorInvocation__ArgumentListAssignment_2");
			builder.put(grammarAccess.getParameterWithDeclarationAccess().getParameterWithMembersAssignment_3(), "rule__ParameterWithDeclaration__ParameterWithMembersAssignment_3");
			builder.put(grammarAccess.getBehaviorWithDeclarationAccess().getBehaviorWithMembersAssignment_3(), "rule__BehaviorWithDeclaration__BehaviorWithMembersAssignment_3");
			builder.put(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintQualifierAssignment_2(), "rule__KeepConstraintDeclaration__ConstraintQualifierAssignment_2");
			builder.put(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintExpressionAssignment_3(), "rule__KeepConstraintDeclaration__ConstraintExpressionAssignment_3");
			builder.put(grammarAccess.getRemoveDefaultDeclarationAccess().getParameterReferenceAssignment_2(), "rule__RemoveDefaultDeclaration__ParameterReferenceAssignment_2");
			builder.put(grammarAccess.getUntilDirectiveAccess().getEventSpecificationAssignment_1(), "rule__UntilDirective__EventSpecificationAssignment_1");
			builder.put(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationAssignment_0(), "rule__ArgumentListSpecification__ArgumentSpecificationAssignment_0");
			builder.put(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationAssignment_1_1(), "rule__ArgumentListSpecification__ArgumentSpecificationAssignment_1_1");
			builder.put(grammarAccess.getArgumentSpecificationAccess().getArgumentNameAssignment_0(), "rule__ArgumentSpecification__ArgumentNameAssignment_0");
			builder.put(grammarAccess.getArgumentSpecificationAccess().getTypeDeclaratorAssignment_2(), "rule__ArgumentSpecification__TypeDeclaratorAssignment_2");
			builder.put(grammarAccess.getArgumentSpecificationAccess().getDefaultValueAssignment_3_1(), "rule__ArgumentSpecification__DefaultValueAssignment_3_1");
			builder.put(grammarAccess.getArgumentListAccess().getPositionalArgumentsAssignment_0_0(), "rule__ArgumentList__PositionalArgumentsAssignment_0_0");
			builder.put(grammarAccess.getArgumentListAccess().getPositionalArgumentsAssignment_0_1_1(), "rule__ArgumentList__PositionalArgumentsAssignment_0_1_1");
			builder.put(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_0_2_1(), "rule__ArgumentList__NamedArgumentsAssignment_0_2_1");
			builder.put(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_1_0(), "rule__ArgumentList__NamedArgumentsAssignment_1_0");
			builder.put(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_1_1_1(), "rule__ArgumentList__NamedArgumentsAssignment_1_1_1");
			builder.put(grammarAccess.getNamedArgumentAccess().getArgumentNameAssignment_0_0(), "rule__NamedArgument__ArgumentNameAssignment_0_0");
			builder.put(grammarAccess.getNamedArgumentAccess().getExpressionAssignment_2(), "rule__NamedArgument__ExpressionAssignment_2");
			builder.put(grammarAccess.getNamedArgumentAccess().getArgumentListAssignment_3_1(), "rule__NamedArgument__ArgumentListAssignment_3_1");
			builder.put(grammarAccess.getPostfixExpAccess().getPrimaryExpAssignment_0(), "rule__PostfixExp__PrimaryExpAssignment_0");
			builder.put(grammarAccess.getPostfixExpAccess().getTailAssignment_1(), "rule__PostfixExp__TailAssignment_1");
			builder.put(grammarAccess.getCastExpTailAccess().getTypeDeclaratorAssignment_3(), "rule__CastExpTail__TypeDeclaratorAssignment_3");
			builder.put(grammarAccess.getTypeTestTailAccess().getTypeDeclaratorAssignment_3(), "rule__TypeTestTail__TypeDeclaratorAssignment_3");
			builder.put(grammarAccess.getElementAccessTailAccess().getExpressionAssignment_1(), "rule__ElementAccessTail__ExpressionAssignment_1");
			builder.put(grammarAccess.getFieldAccessTailAccess().getFieldNameAssignment_1(), "rule__FieldAccessTail__FieldNameAssignment_1");
			builder.put(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2(), "rule__MethodInvocation__ArgumentListAssignment_2");
			builder.put(grammarAccess.getParameterReferenceAccess().getFieldNameAssignment_2(), "rule__ParameterReference__FieldNameAssignment_2");
			builder.put(grammarAccess.getPhysicalTypeAccess().getNumberIntegerAssignment_0_0(), "rule__PhysicalType__NumberIntegerAssignment_0_0");
			builder.put(grammarAccess.getPhysicalTypeAccess().getNumberFloatAssignment_0_1(), "rule__PhysicalType__NumberFloatAssignment_0_1");
			builder.put(grammarAccess.getPhysicalTypeAccess().getUnitBaseNameAssignment_1_0(), "rule__PhysicalType__UnitBaseNameAssignment_1_0");
			builder.put(grammarAccess.getPhysicalTypeAccess().getUnitNameAssignment_1_1(), "rule__PhysicalType__UnitNameAssignment_1_1");
			builder.put(grammarAccess.getListConstructorAccess().getElementsAssignment_1(), "rule__ListConstructor__ElementsAssignment_1");
			builder.put(grammarAccess.getListConstructorAccess().getElementsAssignment_2_1(), "rule__ListConstructor__ElementsAssignment_2_1");
			builder.put(grammarAccess.getRangeConstructorAccess().getStartAssignment_0_2(), "rule__RangeConstructor__StartAssignment_0_2");
			builder.put(grammarAccess.getRangeConstructorAccess().getEndAssignment_0_4(), "rule__RangeConstructor__EndAssignment_0_4");
			builder.put(grammarAccess.getRangeConstructorAccess().getStartAssignment_1_1(), "rule__RangeConstructor__StartAssignment_1_1");
			builder.put(grammarAccess.getRangeConstructorAccess().getEndAssignment_1_3(), "rule__RangeConstructor__EndAssignment_1_3");
			builder.put(grammarAccess.getConditionAccess().getConditionAssignment_0(), "rule__Condition__ConditionAssignment_0");
			builder.put(grammarAccess.getConditionAccess().getTrueResultAssignment_2(), "rule__Condition__TrueResultAssignment_2");
			builder.put(grammarAccess.getConditionAccess().getFalseResultAssignment_4(), "rule__Condition__FalseResultAssignment_4");
			builder.put(grammarAccess.getRelationAccess().getRelationalOpAssignment_2_0(), "rule__Relation__RelationalOpAssignment_2_0");
			builder.put(grammarAccess.getRelationAccess().getNextSumAssignment_2_1(), "rule__Relation__NextSumAssignment_2_1");
			builder.put(grammarAccess.getSumAccess().getAdditiveOpAssignment_1_0(), "rule__Sum__AdditiveOpAssignment_1_0");
			builder.put(grammarAccess.getSumAccess().getNextTermAssignment_1_1(), "rule__Sum__NextTermAssignment_1_1");
			builder.put(grammarAccess.getTermAccess().getMultiplicativeOpAssignment_1_0(), "rule__Term__MultiplicativeOpAssignment_1_0");
			builder.put(grammarAccess.getTermAccess().getNextFactorAssignment_1_1(), "rule__Term__NextFactorAssignment_1_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private OpenScenarioGrammarAccess grammarAccess;

	@Override
	protected InternalOpenScenarioParser createParser() {
		InternalOpenScenarioParser result = new InternalOpenScenarioParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected TokenSource createLexer(CharStream stream) {
		return new OpenScenarioTokenSource(super.createLexer(stream));
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public OpenScenarioGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(OpenScenarioGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
