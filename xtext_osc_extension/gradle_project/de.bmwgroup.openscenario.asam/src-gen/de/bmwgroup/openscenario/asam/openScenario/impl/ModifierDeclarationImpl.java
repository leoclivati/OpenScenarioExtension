/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.asam.openScenario.impl;

import de.bmwgroup.openscenario.asam.openScenario.MemberDeclaration;
import de.bmwgroup.openscenario.asam.openScenario.ModifierDeclaration;
import de.bmwgroup.openscenario.asam.openScenario.OnDirective;
import de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Modifier Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.ModifierDeclarationImpl#getActorName <em>Actor Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.ModifierDeclarationImpl#getModifierName <em>Modifier Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.ModifierDeclarationImpl#getQualifiedBehaviorName <em>Qualified Behavior Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.ModifierDeclarationImpl#getScenarioMemberDecl <em>Scenario Member Decl</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.ModifierDeclarationImpl#getBehaviorSpecification <em>Behavior Specification</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModifierDeclarationImpl extends OscDeclarationImpl implements ModifierDeclaration
{
  /**
   * The default value of the '{@link #getActorName() <em>Actor Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActorName()
   * @generated
   * @ordered
   */
  protected static final String ACTOR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getActorName() <em>Actor Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActorName()
   * @generated
   * @ordered
   */
  protected String actorName = ACTOR_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getModifierName() <em>Modifier Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModifierName()
   * @generated
   * @ordered
   */
  protected static final String MODIFIER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getModifierName() <em>Modifier Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModifierName()
   * @generated
   * @ordered
   */
  protected String modifierName = MODIFIER_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getQualifiedBehaviorName() <em>Qualified Behavior Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQualifiedBehaviorName()
   * @generated
   * @ordered
   */
  protected static final String QUALIFIED_BEHAVIOR_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getQualifiedBehaviorName() <em>Qualified Behavior Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQualifiedBehaviorName()
   * @generated
   * @ordered
   */
  protected String qualifiedBehaviorName = QUALIFIED_BEHAVIOR_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getScenarioMemberDecl() <em>Scenario Member Decl</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getScenarioMemberDecl()
   * @generated
   * @ordered
   */
  protected EList<MemberDeclaration> scenarioMemberDecl;

  /**
   * The cached value of the '{@link #getBehaviorSpecification() <em>Behavior Specification</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBehaviorSpecification()
   * @generated
   * @ordered
   */
  protected EList<OnDirective> behaviorSpecification;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModifierDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.MODIFIER_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getActorName()
  {
    return actorName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActorName(String newActorName)
  {
    String oldActorName = actorName;
    actorName = newActorName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.MODIFIER_DECLARATION__ACTOR_NAME, oldActorName, actorName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getModifierName()
  {
    return modifierName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setModifierName(String newModifierName)
  {
    String oldModifierName = modifierName;
    modifierName = newModifierName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.MODIFIER_DECLARATION__MODIFIER_NAME, oldModifierName, modifierName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getQualifiedBehaviorName()
  {
    return qualifiedBehaviorName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQualifiedBehaviorName(String newQualifiedBehaviorName)
  {
    String oldQualifiedBehaviorName = qualifiedBehaviorName;
    qualifiedBehaviorName = newQualifiedBehaviorName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.MODIFIER_DECLARATION__QUALIFIED_BEHAVIOR_NAME, oldQualifiedBehaviorName, qualifiedBehaviorName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MemberDeclaration> getScenarioMemberDecl()
  {
    if (scenarioMemberDecl == null)
    {
      scenarioMemberDecl = new EObjectContainmentEList<MemberDeclaration>(MemberDeclaration.class, this, OpenScenarioPackage.MODIFIER_DECLARATION__SCENARIO_MEMBER_DECL);
    }
    return scenarioMemberDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OnDirective> getBehaviorSpecification()
  {
    if (behaviorSpecification == null)
    {
      behaviorSpecification = new EObjectContainmentEList<OnDirective>(OnDirective.class, this, OpenScenarioPackage.MODIFIER_DECLARATION__BEHAVIOR_SPECIFICATION);
    }
    return behaviorSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.MODIFIER_DECLARATION__SCENARIO_MEMBER_DECL:
        return ((InternalEList<?>)getScenarioMemberDecl()).basicRemove(otherEnd, msgs);
      case OpenScenarioPackage.MODIFIER_DECLARATION__BEHAVIOR_SPECIFICATION:
        return ((InternalEList<?>)getBehaviorSpecification()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.MODIFIER_DECLARATION__ACTOR_NAME:
        return getActorName();
      case OpenScenarioPackage.MODIFIER_DECLARATION__MODIFIER_NAME:
        return getModifierName();
      case OpenScenarioPackage.MODIFIER_DECLARATION__QUALIFIED_BEHAVIOR_NAME:
        return getQualifiedBehaviorName();
      case OpenScenarioPackage.MODIFIER_DECLARATION__SCENARIO_MEMBER_DECL:
        return getScenarioMemberDecl();
      case OpenScenarioPackage.MODIFIER_DECLARATION__BEHAVIOR_SPECIFICATION:
        return getBehaviorSpecification();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.MODIFIER_DECLARATION__ACTOR_NAME:
        setActorName((String)newValue);
        return;
      case OpenScenarioPackage.MODIFIER_DECLARATION__MODIFIER_NAME:
        setModifierName((String)newValue);
        return;
      case OpenScenarioPackage.MODIFIER_DECLARATION__QUALIFIED_BEHAVIOR_NAME:
        setQualifiedBehaviorName((String)newValue);
        return;
      case OpenScenarioPackage.MODIFIER_DECLARATION__SCENARIO_MEMBER_DECL:
        getScenarioMemberDecl().clear();
        getScenarioMemberDecl().addAll((Collection<? extends MemberDeclaration>)newValue);
        return;
      case OpenScenarioPackage.MODIFIER_DECLARATION__BEHAVIOR_SPECIFICATION:
        getBehaviorSpecification().clear();
        getBehaviorSpecification().addAll((Collection<? extends OnDirective>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.MODIFIER_DECLARATION__ACTOR_NAME:
        setActorName(ACTOR_NAME_EDEFAULT);
        return;
      case OpenScenarioPackage.MODIFIER_DECLARATION__MODIFIER_NAME:
        setModifierName(MODIFIER_NAME_EDEFAULT);
        return;
      case OpenScenarioPackage.MODIFIER_DECLARATION__QUALIFIED_BEHAVIOR_NAME:
        setQualifiedBehaviorName(QUALIFIED_BEHAVIOR_NAME_EDEFAULT);
        return;
      case OpenScenarioPackage.MODIFIER_DECLARATION__SCENARIO_MEMBER_DECL:
        getScenarioMemberDecl().clear();
        return;
      case OpenScenarioPackage.MODIFIER_DECLARATION__BEHAVIOR_SPECIFICATION:
        getBehaviorSpecification().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.MODIFIER_DECLARATION__ACTOR_NAME:
        return ACTOR_NAME_EDEFAULT == null ? actorName != null : !ACTOR_NAME_EDEFAULT.equals(actorName);
      case OpenScenarioPackage.MODIFIER_DECLARATION__MODIFIER_NAME:
        return MODIFIER_NAME_EDEFAULT == null ? modifierName != null : !MODIFIER_NAME_EDEFAULT.equals(modifierName);
      case OpenScenarioPackage.MODIFIER_DECLARATION__QUALIFIED_BEHAVIOR_NAME:
        return QUALIFIED_BEHAVIOR_NAME_EDEFAULT == null ? qualifiedBehaviorName != null : !QUALIFIED_BEHAVIOR_NAME_EDEFAULT.equals(qualifiedBehaviorName);
      case OpenScenarioPackage.MODIFIER_DECLARATION__SCENARIO_MEMBER_DECL:
        return scenarioMemberDecl != null && !scenarioMemberDecl.isEmpty();
      case OpenScenarioPackage.MODIFIER_DECLARATION__BEHAVIOR_SPECIFICATION:
        return behaviorSpecification != null && !behaviorSpecification.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (actorName: ");
    result.append(actorName);
    result.append(", modifierName: ");
    result.append(modifierName);
    result.append(", qualifiedBehaviorName: ");
    result.append(qualifiedBehaviorName);
    result.append(')');
    return result.toString();
  }

} //ModifierDeclarationImpl
