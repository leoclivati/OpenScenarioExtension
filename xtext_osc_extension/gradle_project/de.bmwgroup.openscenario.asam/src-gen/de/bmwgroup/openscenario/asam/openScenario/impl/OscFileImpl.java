/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.asam.openScenario.impl;

import de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage;
import de.bmwgroup.openscenario.asam.openScenario.OscDeclaration;
import de.bmwgroup.openscenario.asam.openScenario.OscFile;
import de.bmwgroup.openscenario.asam.openScenario.PreludeStatement;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Osc File</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.OscFileImpl#getPreludeStatements <em>Prelude Statements</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.OscFileImpl#getOscDeclarations <em>Osc Declarations</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OscFileImpl extends MinimalEObjectImpl.Container implements OscFile
{
  /**
   * The cached value of the '{@link #getPreludeStatements() <em>Prelude Statements</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPreludeStatements()
   * @generated
   * @ordered
   */
  protected EList<PreludeStatement> preludeStatements;

  /**
   * The cached value of the '{@link #getOscDeclarations() <em>Osc Declarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOscDeclarations()
   * @generated
   * @ordered
   */
  protected EList<OscDeclaration> oscDeclarations;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OscFileImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.OSC_FILE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<PreludeStatement> getPreludeStatements()
  {
    if (preludeStatements == null)
    {
      preludeStatements = new EObjectContainmentEList<PreludeStatement>(PreludeStatement.class, this, OpenScenarioPackage.OSC_FILE__PRELUDE_STATEMENTS);
    }
    return preludeStatements;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OscDeclaration> getOscDeclarations()
  {
    if (oscDeclarations == null)
    {
      oscDeclarations = new EObjectContainmentEList<OscDeclaration>(OscDeclaration.class, this, OpenScenarioPackage.OSC_FILE__OSC_DECLARATIONS);
    }
    return oscDeclarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.OSC_FILE__PRELUDE_STATEMENTS:
        return ((InternalEList<?>)getPreludeStatements()).basicRemove(otherEnd, msgs);
      case OpenScenarioPackage.OSC_FILE__OSC_DECLARATIONS:
        return ((InternalEList<?>)getOscDeclarations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.OSC_FILE__PRELUDE_STATEMENTS:
        return getPreludeStatements();
      case OpenScenarioPackage.OSC_FILE__OSC_DECLARATIONS:
        return getOscDeclarations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.OSC_FILE__PRELUDE_STATEMENTS:
        getPreludeStatements().clear();
        getPreludeStatements().addAll((Collection<? extends PreludeStatement>)newValue);
        return;
      case OpenScenarioPackage.OSC_FILE__OSC_DECLARATIONS:
        getOscDeclarations().clear();
        getOscDeclarations().addAll((Collection<? extends OscDeclaration>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.OSC_FILE__PRELUDE_STATEMENTS:
        getPreludeStatements().clear();
        return;
      case OpenScenarioPackage.OSC_FILE__OSC_DECLARATIONS:
        getOscDeclarations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.OSC_FILE__PRELUDE_STATEMENTS:
        return preludeStatements != null && !preludeStatements.isEmpty();
      case OpenScenarioPackage.OSC_FILE__OSC_DECLARATIONS:
        return oscDeclarations != null && !oscDeclarations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //OscFileImpl
