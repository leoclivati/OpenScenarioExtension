/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.openScenario;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Field Declaration</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.FieldDeclaration#getFieldName <em>Field Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.FieldDeclaration#getNextfieldName <em>Nextfield Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.FieldDeclaration#getTypeDeclarator <em>Type Declarator</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.FieldDeclaration#getDefaultValue <em>Default Value</em>}</li>
 * </ul>
 *
 * @see de.bmwgroup.openscenario.openScenario.OpenScenarioPackage#getFieldDeclaration()
 * @model
 * @generated
 */
public interface FieldDeclaration extends MemberDeclaration
{
  /**
   * Returns the value of the '<em><b>Field Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Field Name</em>' attribute.
   * @see #setFieldName(String)
   * @see de.bmwgroup.openscenario.openScenario.OpenScenarioPackage#getFieldDeclaration_FieldName()
   * @model
   * @generated
   */
  String getFieldName();

  /**
   * Sets the value of the '{@link de.bmwgroup.openscenario.openScenario.FieldDeclaration#getFieldName <em>Field Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Field Name</em>' attribute.
   * @see #getFieldName()
   * @generated
   */
  void setFieldName(String value);

  /**
   * Returns the value of the '<em><b>Nextfield Name</b></em>' attribute list.
   * The list contents are of type {@link java.lang.String}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Nextfield Name</em>' attribute list.
   * @see de.bmwgroup.openscenario.openScenario.OpenScenarioPackage#getFieldDeclaration_NextfieldName()
   * @model unique="false"
   * @generated
   */
  EList<String> getNextfieldName();

  /**
   * Returns the value of the '<em><b>Type Declarator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type Declarator</em>' attribute.
   * @see #setTypeDeclarator(String)
   * @see de.bmwgroup.openscenario.openScenario.OpenScenarioPackage#getFieldDeclaration_TypeDeclarator()
   * @model
   * @generated
   */
  String getTypeDeclarator();

  /**
   * Sets the value of the '{@link de.bmwgroup.openscenario.openScenario.FieldDeclaration#getTypeDeclarator <em>Type Declarator</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type Declarator</em>' attribute.
   * @see #getTypeDeclarator()
   * @generated
   */
  void setTypeDeclarator(String value);

  /**
   * Returns the value of the '<em><b>Default Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Default Value</em>' containment reference.
   * @see #setDefaultValue(Expression)
   * @see de.bmwgroup.openscenario.openScenario.OpenScenarioPackage#getFieldDeclaration_DefaultValue()
   * @model containment="true"
   * @generated
   */
  Expression getDefaultValue();

  /**
   * Sets the value of the '{@link de.bmwgroup.openscenario.openScenario.FieldDeclaration#getDefaultValue <em>Default Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Default Value</em>' containment reference.
   * @see #getDefaultValue()
   * @generated
   */
  void setDefaultValue(Expression value);

} // FieldDeclaration
