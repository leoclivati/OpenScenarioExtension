/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.openScenario.impl;

import de.bmwgroup.openscenario.openScenario.ActionDeclaration;
import de.bmwgroup.openscenario.openScenario.ActorDeclaration;
import de.bmwgroup.openscenario.openScenario.ArgumentList;
import de.bmwgroup.openscenario.openScenario.ArgumentListSpecification;
import de.bmwgroup.openscenario.openScenario.ArgumentSpecification;
import de.bmwgroup.openscenario.openScenario.BehaviorInvocation;
import de.bmwgroup.openscenario.openScenario.BehaviorSpecification;
import de.bmwgroup.openscenario.openScenario.BehaviorWithDeclaration;
import de.bmwgroup.openscenario.openScenario.BehaviorWithMember;
import de.bmwgroup.openscenario.openScenario.CallDirective;
import de.bmwgroup.openscenario.openScenario.CastExpTail;
import de.bmwgroup.openscenario.openScenario.Composition;
import de.bmwgroup.openscenario.openScenario.Condition;
import de.bmwgroup.openscenario.openScenario.ConstraintDeclaration;
import de.bmwgroup.openscenario.openScenario.CoverageDeclaration;
import de.bmwgroup.openscenario.openScenario.DoDirective;
import de.bmwgroup.openscenario.openScenario.DoDirectiveMember;
import de.bmwgroup.openscenario.openScenario.ElapsedExpression;
import de.bmwgroup.openscenario.openScenario.ElementAccessTail;
import de.bmwgroup.openscenario.openScenario.EmitDirective;
import de.bmwgroup.openscenario.openScenario.EnumDeclaration;
import de.bmwgroup.openscenario.openScenario.EnumMemberDeclaration;
import de.bmwgroup.openscenario.openScenario.EnumTypeExtension;
import de.bmwgroup.openscenario.openScenario.EnumValueReference;
import de.bmwgroup.openscenario.openScenario.EventCondition;
import de.bmwgroup.openscenario.openScenario.EventDeclaration;
import de.bmwgroup.openscenario.openScenario.EventPath;
import de.bmwgroup.openscenario.openScenario.EventReference;
import de.bmwgroup.openscenario.openScenario.EventSpecification;
import de.bmwgroup.openscenario.openScenario.EveryExpression;
import de.bmwgroup.openscenario.openScenario.Expression;
import de.bmwgroup.openscenario.openScenario.ExtensionMemberDeclaration;
import de.bmwgroup.openscenario.openScenario.Factor;
import de.bmwgroup.openscenario.openScenario.FallExpression;
import de.bmwgroup.openscenario.openScenario.FieldAccessTail;
import de.bmwgroup.openscenario.openScenario.FieldDeclaration;
import de.bmwgroup.openscenario.openScenario.GlobalParameterDeclaration;
import de.bmwgroup.openscenario.openScenario.ImportReference;
import de.bmwgroup.openscenario.openScenario.ImportStatement;
import de.bmwgroup.openscenario.openScenario.KeepConstraintDeclaration;
import de.bmwgroup.openscenario.openScenario.ListConstructor;
import de.bmwgroup.openscenario.openScenario.MemberDeclaration;
import de.bmwgroup.openscenario.openScenario.MethodDeclaration;
import de.bmwgroup.openscenario.openScenario.MethodImplementation;
import de.bmwgroup.openscenario.openScenario.MethodInvocation;
import de.bmwgroup.openscenario.openScenario.ModifierDeclaration;
import de.bmwgroup.openscenario.openScenario.NamedArgument;
import de.bmwgroup.openscenario.openScenario.OnDirective;
import de.bmwgroup.openscenario.openScenario.OnDirectiveMember;
import de.bmwgroup.openscenario.openScenario.OpenScenarioFactory;
import de.bmwgroup.openscenario.openScenario.OpenScenarioPackage;
import de.bmwgroup.openscenario.openScenario.OscDeclaration;
import de.bmwgroup.openscenario.openScenario.OscFile;
import de.bmwgroup.openscenario.openScenario.ParameterDeclaration;
import de.bmwgroup.openscenario.openScenario.ParameterReference;
import de.bmwgroup.openscenario.openScenario.ParameterWithDeclaration;
import de.bmwgroup.openscenario.openScenario.PhysicalType;
import de.bmwgroup.openscenario.openScenario.PhysicalTypeDeclaration;
import de.bmwgroup.openscenario.openScenario.PostfixExp;
import de.bmwgroup.openscenario.openScenario.PostfixExpTail;
import de.bmwgroup.openscenario.openScenario.PreludeStatement;
import de.bmwgroup.openscenario.openScenario.PrimaryExp;
import de.bmwgroup.openscenario.openScenario.RangeConstructor;
import de.bmwgroup.openscenario.openScenario.Relation;
import de.bmwgroup.openscenario.openScenario.RemoveDefaultDeclaration;
import de.bmwgroup.openscenario.openScenario.RiseExpression;
import de.bmwgroup.openscenario.openScenario.SIBaseExponent;
import de.bmwgroup.openscenario.openScenario.SIBaseExponentList;
import de.bmwgroup.openscenario.openScenario.SIBaseUnitSpecifier;
import de.bmwgroup.openscenario.openScenario.SIUnitSpecifier;
import de.bmwgroup.openscenario.openScenario.SampleExpression;
import de.bmwgroup.openscenario.openScenario.ScenarioDeclaration;
import de.bmwgroup.openscenario.openScenario.StructDeclaration;
import de.bmwgroup.openscenario.openScenario.StructuredID;
import de.bmwgroup.openscenario.openScenario.StructuredTypeExtension;
import de.bmwgroup.openscenario.openScenario.Sum;
import de.bmwgroup.openscenario.openScenario.Term;
import de.bmwgroup.openscenario.openScenario.TypeExtension;
import de.bmwgroup.openscenario.openScenario.TypeTestTail;
import de.bmwgroup.openscenario.openScenario.UnitDeclaration;
import de.bmwgroup.openscenario.openScenario.UntilDirective;
import de.bmwgroup.openscenario.openScenario.ValueExp;
import de.bmwgroup.openscenario.openScenario.VariableDeclaration;
import de.bmwgroup.openscenario.openScenario.WaitDirective;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class OpenScenarioPackageImpl extends EPackageImpl implements OpenScenarioPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass oscFileEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass preludeStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass importReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass structuredIDEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass oscDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass physicalTypeDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass unitDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass siBaseUnitSpecifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass siBaseExponentListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass siBaseExponentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass siUnitSpecifierEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeExtensionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumTypeExtensionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass structuredTypeExtensionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass extensionMemberDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass globalParameterDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumMemberDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass enumValueReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modifierDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actionDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass actorDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass structDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass scenarioDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass memberDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass coverageDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodImplementationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventSpecificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventPathEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eventConditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass riseExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fallExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elapsedExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass everyExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass variableDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sampleExpressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorSpecificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass onDirectiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass onDirectiveMemberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass callDirectiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass emitDirectiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass waitDirectiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass doDirectiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass doDirectiveMemberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass compositionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorInvocationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterWithDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorWithDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass behaviorWithMemberEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass constraintDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass keepConstraintDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass removeDefaultDeclarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass untilDirectiveEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentListSpecificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentSpecificationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass argumentListEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass namedArgumentEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass postfixExpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass postfixExpTailEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass castExpTailEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass typeTestTailEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass elementAccessTailEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass fieldAccessTailEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodInvocationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass parameterReferenceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass primaryExpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass valueExpEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass physicalTypeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass listConstructorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rangeConstructorEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass conditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass expressionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass relationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sumEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass termEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass factorEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see de.bmwgroup.openscenario.openScenario.OpenScenarioPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private OpenScenarioPackageImpl()
  {
    super(eNS_URI, OpenScenarioFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link OpenScenarioPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static OpenScenarioPackage init()
  {
    if (isInited) return (OpenScenarioPackage)EPackage.Registry.INSTANCE.getEPackage(OpenScenarioPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredOpenScenarioPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    OpenScenarioPackageImpl theOpenScenarioPackage = registeredOpenScenarioPackage instanceof OpenScenarioPackageImpl ? (OpenScenarioPackageImpl)registeredOpenScenarioPackage : new OpenScenarioPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theOpenScenarioPackage.createPackageContents();

    // Initialize created meta-data
    theOpenScenarioPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theOpenScenarioPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(OpenScenarioPackage.eNS_URI, theOpenScenarioPackage);
    return theOpenScenarioPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOscFile()
  {
    return oscFileEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOscFile_PreludeStatements()
  {
    return (EReference)oscFileEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOscFile_OscDeclarations()
  {
    return (EReference)oscFileEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPreludeStatement()
  {
    return preludeStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImportStatement()
  {
    return importStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getImportStatement_ImportReference()
  {
    return (EReference)importStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getImportReference()
  {
    return importReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStructuredID()
  {
    return structuredIDEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStructuredID_Identifier()
  {
    return (EAttribute)structuredIDEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOscDeclaration()
  {
    return oscDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPhysicalTypeDeclaration()
  {
    return physicalTypeDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPhysicalTypeDeclaration_PhysicalTypeName()
  {
    return (EAttribute)physicalTypeDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPhysicalTypeDeclaration_BaseUnitSpecifier()
  {
    return (EReference)physicalTypeDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUnitDeclaration()
  {
    return unitDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUnitDeclaration_UnitName()
  {
    return (EAttribute)unitDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUnitDeclaration_PhysicalTypeName()
  {
    return (EAttribute)unitDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUnitDeclaration_UnitSpecifier()
  {
    return (EReference)unitDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSIBaseUnitSpecifier()
  {
    return siBaseUnitSpecifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSIBaseUnitSpecifier_SIBaseExponentList()
  {
    return (EReference)siBaseUnitSpecifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSIBaseExponentList()
  {
    return siBaseExponentListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSIBaseExponentList_SIBaseExponentList()
  {
    return (EReference)siBaseExponentListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSIBaseExponentList_NextSIBaseExponentList()
  {
    return (EReference)siBaseExponentListEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSIBaseExponent()
  {
    return siBaseExponentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSIBaseExponent_Unit()
  {
    return (EAttribute)siBaseExponentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSIBaseExponent_Number()
  {
    return (EAttribute)siBaseExponentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSIUnitSpecifier()
  {
    return siUnitSpecifierEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSIUnitSpecifier_SIBaseExponentList()
  {
    return (EReference)siUnitSpecifierEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSIUnitSpecifier_SIfactor()
  {
    return (EAttribute)siUnitSpecifierEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSIUnitSpecifier_SIUnit()
  {
    return (EAttribute)siUnitSpecifierEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypeExtension()
  {
    return typeExtensionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumTypeExtension()
  {
    return enumTypeExtensionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumTypeExtension_EnumName()
  {
    return (EAttribute)enumTypeExtensionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumTypeExtension_EnumMemberDecls()
  {
    return (EReference)enumTypeExtensionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStructuredTypeExtension()
  {
    return structuredTypeExtensionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStructuredTypeExtension_ExtendableTypeName()
  {
    return (EAttribute)structuredTypeExtensionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStructuredTypeExtension_ExtensionMemberDecls()
  {
    return (EReference)structuredTypeExtensionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExtensionMemberDeclaration()
  {
    return extensionMemberDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGlobalParameterDeclaration()
  {
    return globalParameterDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGlobalParameterDeclaration_ParameterDeclaration()
  {
    return (EReference)globalParameterDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParameterDeclaration()
  {
    return parameterDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParameterDeclaration_WithDeclaration()
  {
    return (EReference)parameterDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumDeclaration()
  {
    return enumDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumDeclaration_EnumName()
  {
    return (EAttribute)enumDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEnumDeclaration_EnumMemberDecls()
  {
    return (EReference)enumDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumMemberDeclaration()
  {
    return enumMemberDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumMemberDeclaration_EnumMemberName()
  {
    return (EAttribute)enumMemberDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumMemberDeclaration_EnumMemberValue()
  {
    return (EAttribute)enumMemberDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEnumValueReference()
  {
    return enumValueReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumValueReference_EnumName()
  {
    return (EAttribute)enumValueReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEnumValueReference_EnumMemberName()
  {
    return (EAttribute)enumValueReferenceEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModifierDeclaration()
  {
    return modifierDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModifierDeclaration_ActorName()
  {
    return (EAttribute)modifierDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModifierDeclaration_ModifierName()
  {
    return (EAttribute)modifierDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getModifierDeclaration_QualifiedBehaviorName()
  {
    return (EAttribute)modifierDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModifierDeclaration_ScenarioMemberDecl()
  {
    return (EReference)modifierDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModifierDeclaration_BehaviorSpecification()
  {
    return (EReference)modifierDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getActionDeclaration()
  {
    return actionDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getActionDeclaration_Name()
  {
    return (EAttribute)actionDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getActionDeclaration_BaseActionName()
  {
    return (EAttribute)actionDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getActionDeclaration_FieldName()
  {
    return (EAttribute)actionDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getActionDeclaration_EnumReference()
  {
    return (EReference)actionDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getActionDeclaration_ActionMemberDecl()
  {
    return (EReference)actionDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getActorDeclaration()
  {
    return actorDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getActorDeclaration_Name()
  {
    return (EAttribute)actorDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getActorDeclaration_BaseActorName()
  {
    return (EAttribute)actorDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getActorDeclaration_FieldName()
  {
    return (EAttribute)actorDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getActorDeclaration_EnumReference()
  {
    return (EReference)actorDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getActorDeclaration_ActorMemberDecl()
  {
    return (EReference)actorDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStructDeclaration()
  {
    return structDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStructDeclaration_Name()
  {
    return (EAttribute)structDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStructDeclaration_BaseStructName()
  {
    return (EAttribute)structDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getStructDeclaration_FieldName()
  {
    return (EAttribute)structDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStructDeclaration_EnumReference()
  {
    return (EReference)structDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getStructDeclaration_StructMemberDecl()
  {
    return (EReference)structDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getScenarioDeclaration()
  {
    return scenarioDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getScenarioDeclaration_Name()
  {
    return (EAttribute)scenarioDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getScenarioDeclaration_BaseScenarioName()
  {
    return (EAttribute)scenarioDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getScenarioDeclaration_FieldName()
  {
    return (EAttribute)scenarioDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getScenarioDeclaration_EnumReference()
  {
    return (EReference)scenarioDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getScenarioDeclaration_ScenarioMemberDecl()
  {
    return (EReference)scenarioDeclarationEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getScenarioDeclaration_BehaviorSpecification()
  {
    return (EReference)scenarioDeclarationEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMemberDeclaration()
  {
    return memberDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCoverageDeclaration()
  {
    return coverageDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCoverageDeclaration_ArgumentList()
  {
    return (EReference)coverageDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethodDeclaration()
  {
    return methodDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodDeclaration_MethodName()
  {
    return (EAttribute)methodDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMethodDeclaration_ArgumentListSpecification()
  {
    return (EReference)methodDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethodDeclaration_ReturnType()
  {
    return (EAttribute)methodDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMethodDeclaration_MethodImplementation()
  {
    return (EReference)methodDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethodImplementation()
  {
    return methodImplementationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMethodImplementation_Expression()
  {
    return (EReference)methodImplementationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMethodImplementation_StructuredID()
  {
    return (EReference)methodImplementationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMethodImplementation_ArgumentList()
  {
    return (EReference)methodImplementationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventDeclaration()
  {
    return eventDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventDeclaration_EventName()
  {
    return (EAttribute)eventDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventDeclaration_Params()
  {
    return (EReference)eventDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventDeclaration_EventSpecification()
  {
    return (EReference)eventDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventSpecification()
  {
    return eventSpecificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventSpecification_EventReference()
  {
    return (EReference)eventSpecificationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventSpecification_EventFieldName()
  {
    return (EAttribute)eventSpecificationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventSpecification_EventCondition()
  {
    return (EReference)eventSpecificationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventReference()
  {
    return eventReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventReference_EventPath()
  {
    return (EReference)eventReferenceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventPath()
  {
    return eventPathEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEventPath_Expression()
  {
    return (EReference)eventPathEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEventPath_EventName()
  {
    return (EAttribute)eventPathEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEventCondition()
  {
    return eventConditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRiseExpression()
  {
    return riseExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRiseExpression_BoolExpression()
  {
    return (EReference)riseExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFallExpression()
  {
    return fallExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFallExpression_BoolExpression()
  {
    return (EReference)fallExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElapsedExpression()
  {
    return elapsedExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getElapsedExpression_DurationExpression()
  {
    return (EReference)elapsedExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEveryExpression()
  {
    return everyExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEveryExpression_DurationExpression()
  {
    return (EReference)everyExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEveryExpression_NextdurationExpression()
  {
    return (EReference)everyExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFieldDeclaration()
  {
    return fieldDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldDeclaration_FieldName()
  {
    return (EAttribute)fieldDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldDeclaration_NextfieldName()
  {
    return (EAttribute)fieldDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldDeclaration_TypeDeclarator()
  {
    return (EAttribute)fieldDeclarationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFieldDeclaration_DefaultValue()
  {
    return (EReference)fieldDeclarationEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariableDeclaration()
  {
    return variableDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariableDeclaration_SampleExpression()
  {
    return (EReference)variableDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSampleExpression()
  {
    return sampleExpressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSampleExpression_Expression()
  {
    return (EReference)sampleExpressionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSampleExpression_EventSpecification()
  {
    return (EReference)sampleExpressionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSampleExpression_DefaultValue()
  {
    return (EReference)sampleExpressionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBehaviorSpecification()
  {
    return behaviorSpecificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOnDirective()
  {
    return onDirectiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getOnDirective_EventSpecification()
  {
    return (EAttribute)onDirectiveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getOnDirective_OnMember()
  {
    return (EReference)onDirectiveEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getOnDirectiveMember()
  {
    return onDirectiveMemberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCallDirective()
  {
    return callDirectiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCallDirective_MethodInvocation()
  {
    return (EReference)callDirectiveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEmitDirective()
  {
    return emitDirectiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEmitDirective_EventName()
  {
    return (EAttribute)emitDirectiveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEmitDirective_ArgumentList()
  {
    return (EReference)emitDirectiveEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWaitDirective()
  {
    return waitDirectiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWaitDirective_EventSpecification()
  {
    return (EReference)waitDirectiveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDoDirective()
  {
    return doDirectiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDoDirective_DoMembers()
  {
    return (EReference)doDirectiveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDoDirectiveMember()
  {
    return doDirectiveMemberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDoDirectiveMember_LabelName()
  {
    return (EAttribute)doDirectiveMemberEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDoDirectiveMember_Composition()
  {
    return (EReference)doDirectiveMemberEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDoDirectiveMember_EmitDirective()
  {
    return (EReference)doDirectiveMemberEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDoDirectiveMember_CallDirective()
  {
    return (EReference)doDirectiveMemberEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDoDirectiveMember_WaitDirective()
  {
    return (EReference)doDirectiveMemberEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDoDirectiveMember_BehaviorInvocation()
  {
    return (EReference)doDirectiveMemberEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getComposition()
  {
    return compositionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getComposition_CompositionOp()
  {
    return (EAttribute)compositionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComposition_ArgumentList()
  {
    return (EReference)compositionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComposition_DoMembers()
  {
    return (EReference)compositionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getComposition_WithDeclaration()
  {
    return (EReference)compositionEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBehaviorInvocation()
  {
    return behaviorInvocationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorInvocation_ActorExpression()
  {
    return (EReference)behaviorInvocationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorInvocation_ArgumentList()
  {
    return (EReference)behaviorInvocationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParameterWithDeclaration()
  {
    return parameterWithDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getParameterWithDeclaration_ParameterWithMembers()
  {
    return (EReference)parameterWithDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBehaviorWithDeclaration()
  {
    return behaviorWithDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBehaviorWithDeclaration_BehaviorWithMembers()
  {
    return (EReference)behaviorWithDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBehaviorWithMember()
  {
    return behaviorWithMemberEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getConstraintDeclaration()
  {
    return constraintDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getKeepConstraintDeclaration()
  {
    return keepConstraintDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getKeepConstraintDeclaration_ConstraintQualifier()
  {
    return (EAttribute)keepConstraintDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getKeepConstraintDeclaration_ConstraintExpression()
  {
    return (EReference)keepConstraintDeclarationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRemoveDefaultDeclaration()
  {
    return removeDefaultDeclarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRemoveDefaultDeclaration_ParameterReference()
  {
    return (EReference)removeDefaultDeclarationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUntilDirective()
  {
    return untilDirectiveEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUntilDirective_EventSpecification()
  {
    return (EReference)untilDirectiveEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArgumentListSpecification()
  {
    return argumentListSpecificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArgumentListSpecification_ArgumentSpecification()
  {
    return (EReference)argumentListSpecificationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArgumentSpecification()
  {
    return argumentSpecificationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArgumentSpecification_ArgumentName()
  {
    return (EAttribute)argumentSpecificationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArgumentSpecification_TypeDeclarator()
  {
    return (EAttribute)argumentSpecificationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArgumentSpecification_DefaultValue()
  {
    return (EReference)argumentSpecificationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArgumentList()
  {
    return argumentListEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArgumentList_PositionalArguments()
  {
    return (EReference)argumentListEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArgumentList_NamedArguments()
  {
    return (EReference)argumentListEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNamedArgument()
  {
    return namedArgumentEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getNamedArgument_ArgumentName()
  {
    return (EAttribute)namedArgumentEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNamedArgument_Expression()
  {
    return (EReference)namedArgumentEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNamedArgument_ArgumentList()
  {
    return (EReference)namedArgumentEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPostfixExp()
  {
    return postfixExpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPostfixExp_PrimaryExp()
  {
    return (EReference)postfixExpEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPostfixExp_Tail()
  {
    return (EReference)postfixExpEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getPostfixExp_ArgumentList()
  {
    return (EReference)postfixExpEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPostfixExp_FieldName()
  {
    return (EAttribute)postfixExpEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPostfixExpTail()
  {
    return postfixExpTailEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCastExpTail()
  {
    return castExpTailEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getCastExpTail_TypeDeclarator()
  {
    return (EAttribute)castExpTailEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTypeTestTail()
  {
    return typeTestTailEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTypeTestTail_TypeDeclarator()
  {
    return (EAttribute)typeTestTailEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getElementAccessTail()
  {
    return elementAccessTailEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getElementAccessTail_Expression()
  {
    return (EReference)elementAccessTailEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFieldAccessTail()
  {
    return fieldAccessTailEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFieldAccessTail_FieldName()
  {
    return (EAttribute)fieldAccessTailEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethodInvocation()
  {
    return methodInvocationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getParameterReference()
  {
    return parameterReferenceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPrimaryExp()
  {
    return primaryExpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getValueExp()
  {
    return valueExpEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getPhysicalType()
  {
    return physicalTypeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPhysicalType_NumberInteger()
  {
    return (EAttribute)physicalTypeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPhysicalType_NumberFloat()
  {
    return (EAttribute)physicalTypeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPhysicalType_UnitBaseName()
  {
    return (EAttribute)physicalTypeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getPhysicalType_UnitName()
  {
    return (EAttribute)physicalTypeEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getListConstructor()
  {
    return listConstructorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getListConstructor_Elements()
  {
    return (EReference)listConstructorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRangeConstructor()
  {
    return rangeConstructorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRangeConstructor_Start()
  {
    return (EReference)rangeConstructorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRangeConstructor_End()
  {
    return (EReference)rangeConstructorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getCondition()
  {
    return conditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCondition_Condition()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCondition_TrueResult()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getCondition_FalseResult()
  {
    return (EReference)conditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getExpression()
  {
    return expressionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRelation()
  {
    return relationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSum()
  {
    return sumEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSum_RelationalOp()
  {
    return (EAttribute)sumEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getSum_NextSum()
  {
    return (EReference)sumEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTerm()
  {
    return termEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTerm_AdditiveOp()
  {
    return (EAttribute)termEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getTerm_NextTerm()
  {
    return (EReference)termEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFactor()
  {
    return factorEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getFactor_MultiplicativeOp()
  {
    return (EAttribute)factorEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFactor_NextFactor()
  {
    return (EReference)factorEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OpenScenarioFactory getOpenScenarioFactory()
  {
    return (OpenScenarioFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    oscFileEClass = createEClass(OSC_FILE);
    createEReference(oscFileEClass, OSC_FILE__PRELUDE_STATEMENTS);
    createEReference(oscFileEClass, OSC_FILE__OSC_DECLARATIONS);

    preludeStatementEClass = createEClass(PRELUDE_STATEMENT);

    importStatementEClass = createEClass(IMPORT_STATEMENT);
    createEReference(importStatementEClass, IMPORT_STATEMENT__IMPORT_REFERENCE);

    importReferenceEClass = createEClass(IMPORT_REFERENCE);

    structuredIDEClass = createEClass(STRUCTURED_ID);
    createEAttribute(structuredIDEClass, STRUCTURED_ID__IDENTIFIER);

    oscDeclarationEClass = createEClass(OSC_DECLARATION);

    physicalTypeDeclarationEClass = createEClass(PHYSICAL_TYPE_DECLARATION);
    createEAttribute(physicalTypeDeclarationEClass, PHYSICAL_TYPE_DECLARATION__PHYSICAL_TYPE_NAME);
    createEReference(physicalTypeDeclarationEClass, PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER);

    unitDeclarationEClass = createEClass(UNIT_DECLARATION);
    createEAttribute(unitDeclarationEClass, UNIT_DECLARATION__UNIT_NAME);
    createEAttribute(unitDeclarationEClass, UNIT_DECLARATION__PHYSICAL_TYPE_NAME);
    createEReference(unitDeclarationEClass, UNIT_DECLARATION__UNIT_SPECIFIER);

    siBaseUnitSpecifierEClass = createEClass(SI_BASE_UNIT_SPECIFIER);
    createEReference(siBaseUnitSpecifierEClass, SI_BASE_UNIT_SPECIFIER__SI_BASE_EXPONENT_LIST);

    siBaseExponentListEClass = createEClass(SI_BASE_EXPONENT_LIST);
    createEReference(siBaseExponentListEClass, SI_BASE_EXPONENT_LIST__SI_BASE_EXPONENT_LIST);
    createEReference(siBaseExponentListEClass, SI_BASE_EXPONENT_LIST__NEXT_SI_BASE_EXPONENT_LIST);

    siBaseExponentEClass = createEClass(SI_BASE_EXPONENT);
    createEAttribute(siBaseExponentEClass, SI_BASE_EXPONENT__UNIT);
    createEAttribute(siBaseExponentEClass, SI_BASE_EXPONENT__NUMBER);

    siUnitSpecifierEClass = createEClass(SI_UNIT_SPECIFIER);
    createEReference(siUnitSpecifierEClass, SI_UNIT_SPECIFIER__SI_BASE_EXPONENT_LIST);
    createEAttribute(siUnitSpecifierEClass, SI_UNIT_SPECIFIER__SIFACTOR);
    createEAttribute(siUnitSpecifierEClass, SI_UNIT_SPECIFIER__SI_UNIT);

    typeExtensionEClass = createEClass(TYPE_EXTENSION);

    enumTypeExtensionEClass = createEClass(ENUM_TYPE_EXTENSION);
    createEAttribute(enumTypeExtensionEClass, ENUM_TYPE_EXTENSION__ENUM_NAME);
    createEReference(enumTypeExtensionEClass, ENUM_TYPE_EXTENSION__ENUM_MEMBER_DECLS);

    structuredTypeExtensionEClass = createEClass(STRUCTURED_TYPE_EXTENSION);
    createEAttribute(structuredTypeExtensionEClass, STRUCTURED_TYPE_EXTENSION__EXTENDABLE_TYPE_NAME);
    createEReference(structuredTypeExtensionEClass, STRUCTURED_TYPE_EXTENSION__EXTENSION_MEMBER_DECLS);

    extensionMemberDeclarationEClass = createEClass(EXTENSION_MEMBER_DECLARATION);

    globalParameterDeclarationEClass = createEClass(GLOBAL_PARAMETER_DECLARATION);
    createEReference(globalParameterDeclarationEClass, GLOBAL_PARAMETER_DECLARATION__PARAMETER_DECLARATION);

    parameterDeclarationEClass = createEClass(PARAMETER_DECLARATION);
    createEReference(parameterDeclarationEClass, PARAMETER_DECLARATION__WITH_DECLARATION);

    enumDeclarationEClass = createEClass(ENUM_DECLARATION);
    createEAttribute(enumDeclarationEClass, ENUM_DECLARATION__ENUM_NAME);
    createEReference(enumDeclarationEClass, ENUM_DECLARATION__ENUM_MEMBER_DECLS);

    enumMemberDeclarationEClass = createEClass(ENUM_MEMBER_DECLARATION);
    createEAttribute(enumMemberDeclarationEClass, ENUM_MEMBER_DECLARATION__ENUM_MEMBER_NAME);
    createEAttribute(enumMemberDeclarationEClass, ENUM_MEMBER_DECLARATION__ENUM_MEMBER_VALUE);

    enumValueReferenceEClass = createEClass(ENUM_VALUE_REFERENCE);
    createEAttribute(enumValueReferenceEClass, ENUM_VALUE_REFERENCE__ENUM_NAME);
    createEAttribute(enumValueReferenceEClass, ENUM_VALUE_REFERENCE__ENUM_MEMBER_NAME);

    modifierDeclarationEClass = createEClass(MODIFIER_DECLARATION);
    createEAttribute(modifierDeclarationEClass, MODIFIER_DECLARATION__ACTOR_NAME);
    createEAttribute(modifierDeclarationEClass, MODIFIER_DECLARATION__MODIFIER_NAME);
    createEAttribute(modifierDeclarationEClass, MODIFIER_DECLARATION__QUALIFIED_BEHAVIOR_NAME);
    createEReference(modifierDeclarationEClass, MODIFIER_DECLARATION__SCENARIO_MEMBER_DECL);
    createEReference(modifierDeclarationEClass, MODIFIER_DECLARATION__BEHAVIOR_SPECIFICATION);

    actionDeclarationEClass = createEClass(ACTION_DECLARATION);
    createEAttribute(actionDeclarationEClass, ACTION_DECLARATION__NAME);
    createEAttribute(actionDeclarationEClass, ACTION_DECLARATION__BASE_ACTION_NAME);
    createEAttribute(actionDeclarationEClass, ACTION_DECLARATION__FIELD_NAME);
    createEReference(actionDeclarationEClass, ACTION_DECLARATION__ENUM_REFERENCE);
    createEReference(actionDeclarationEClass, ACTION_DECLARATION__ACTION_MEMBER_DECL);

    actorDeclarationEClass = createEClass(ACTOR_DECLARATION);
    createEAttribute(actorDeclarationEClass, ACTOR_DECLARATION__NAME);
    createEAttribute(actorDeclarationEClass, ACTOR_DECLARATION__BASE_ACTOR_NAME);
    createEAttribute(actorDeclarationEClass, ACTOR_DECLARATION__FIELD_NAME);
    createEReference(actorDeclarationEClass, ACTOR_DECLARATION__ENUM_REFERENCE);
    createEReference(actorDeclarationEClass, ACTOR_DECLARATION__ACTOR_MEMBER_DECL);

    structDeclarationEClass = createEClass(STRUCT_DECLARATION);
    createEAttribute(structDeclarationEClass, STRUCT_DECLARATION__NAME);
    createEAttribute(structDeclarationEClass, STRUCT_DECLARATION__BASE_STRUCT_NAME);
    createEAttribute(structDeclarationEClass, STRUCT_DECLARATION__FIELD_NAME);
    createEReference(structDeclarationEClass, STRUCT_DECLARATION__ENUM_REFERENCE);
    createEReference(structDeclarationEClass, STRUCT_DECLARATION__STRUCT_MEMBER_DECL);

    scenarioDeclarationEClass = createEClass(SCENARIO_DECLARATION);
    createEAttribute(scenarioDeclarationEClass, SCENARIO_DECLARATION__NAME);
    createEAttribute(scenarioDeclarationEClass, SCENARIO_DECLARATION__BASE_SCENARIO_NAME);
    createEAttribute(scenarioDeclarationEClass, SCENARIO_DECLARATION__FIELD_NAME);
    createEReference(scenarioDeclarationEClass, SCENARIO_DECLARATION__ENUM_REFERENCE);
    createEReference(scenarioDeclarationEClass, SCENARIO_DECLARATION__SCENARIO_MEMBER_DECL);
    createEReference(scenarioDeclarationEClass, SCENARIO_DECLARATION__BEHAVIOR_SPECIFICATION);

    memberDeclarationEClass = createEClass(MEMBER_DECLARATION);

    coverageDeclarationEClass = createEClass(COVERAGE_DECLARATION);
    createEReference(coverageDeclarationEClass, COVERAGE_DECLARATION__ARGUMENT_LIST);

    methodDeclarationEClass = createEClass(METHOD_DECLARATION);
    createEAttribute(methodDeclarationEClass, METHOD_DECLARATION__METHOD_NAME);
    createEReference(methodDeclarationEClass, METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION);
    createEAttribute(methodDeclarationEClass, METHOD_DECLARATION__RETURN_TYPE);
    createEReference(methodDeclarationEClass, METHOD_DECLARATION__METHOD_IMPLEMENTATION);

    methodImplementationEClass = createEClass(METHOD_IMPLEMENTATION);
    createEReference(methodImplementationEClass, METHOD_IMPLEMENTATION__EXPRESSION);
    createEReference(methodImplementationEClass, METHOD_IMPLEMENTATION__STRUCTURED_ID);
    createEReference(methodImplementationEClass, METHOD_IMPLEMENTATION__ARGUMENT_LIST);

    eventDeclarationEClass = createEClass(EVENT_DECLARATION);
    createEAttribute(eventDeclarationEClass, EVENT_DECLARATION__EVENT_NAME);
    createEReference(eventDeclarationEClass, EVENT_DECLARATION__PARAMS);
    createEReference(eventDeclarationEClass, EVENT_DECLARATION__EVENT_SPECIFICATION);

    eventSpecificationEClass = createEClass(EVENT_SPECIFICATION);
    createEReference(eventSpecificationEClass, EVENT_SPECIFICATION__EVENT_REFERENCE);
    createEAttribute(eventSpecificationEClass, EVENT_SPECIFICATION__EVENT_FIELD_NAME);
    createEReference(eventSpecificationEClass, EVENT_SPECIFICATION__EVENT_CONDITION);

    eventReferenceEClass = createEClass(EVENT_REFERENCE);
    createEReference(eventReferenceEClass, EVENT_REFERENCE__EVENT_PATH);

    eventPathEClass = createEClass(EVENT_PATH);
    createEReference(eventPathEClass, EVENT_PATH__EXPRESSION);
    createEAttribute(eventPathEClass, EVENT_PATH__EVENT_NAME);

    eventConditionEClass = createEClass(EVENT_CONDITION);

    riseExpressionEClass = createEClass(RISE_EXPRESSION);
    createEReference(riseExpressionEClass, RISE_EXPRESSION__BOOL_EXPRESSION);

    fallExpressionEClass = createEClass(FALL_EXPRESSION);
    createEReference(fallExpressionEClass, FALL_EXPRESSION__BOOL_EXPRESSION);

    elapsedExpressionEClass = createEClass(ELAPSED_EXPRESSION);
    createEReference(elapsedExpressionEClass, ELAPSED_EXPRESSION__DURATION_EXPRESSION);

    everyExpressionEClass = createEClass(EVERY_EXPRESSION);
    createEReference(everyExpressionEClass, EVERY_EXPRESSION__DURATION_EXPRESSION);
    createEReference(everyExpressionEClass, EVERY_EXPRESSION__NEXTDURATION_EXPRESSION);

    fieldDeclarationEClass = createEClass(FIELD_DECLARATION);
    createEAttribute(fieldDeclarationEClass, FIELD_DECLARATION__FIELD_NAME);
    createEAttribute(fieldDeclarationEClass, FIELD_DECLARATION__NEXTFIELD_NAME);
    createEAttribute(fieldDeclarationEClass, FIELD_DECLARATION__TYPE_DECLARATOR);
    createEReference(fieldDeclarationEClass, FIELD_DECLARATION__DEFAULT_VALUE);

    variableDeclarationEClass = createEClass(VARIABLE_DECLARATION);
    createEReference(variableDeclarationEClass, VARIABLE_DECLARATION__SAMPLE_EXPRESSION);

    sampleExpressionEClass = createEClass(SAMPLE_EXPRESSION);
    createEReference(sampleExpressionEClass, SAMPLE_EXPRESSION__EXPRESSION);
    createEReference(sampleExpressionEClass, SAMPLE_EXPRESSION__EVENT_SPECIFICATION);
    createEReference(sampleExpressionEClass, SAMPLE_EXPRESSION__DEFAULT_VALUE);

    behaviorSpecificationEClass = createEClass(BEHAVIOR_SPECIFICATION);

    onDirectiveEClass = createEClass(ON_DIRECTIVE);
    createEAttribute(onDirectiveEClass, ON_DIRECTIVE__EVENT_SPECIFICATION);
    createEReference(onDirectiveEClass, ON_DIRECTIVE__ON_MEMBER);

    onDirectiveMemberEClass = createEClass(ON_DIRECTIVE_MEMBER);

    callDirectiveEClass = createEClass(CALL_DIRECTIVE);
    createEReference(callDirectiveEClass, CALL_DIRECTIVE__METHOD_INVOCATION);

    emitDirectiveEClass = createEClass(EMIT_DIRECTIVE);
    createEAttribute(emitDirectiveEClass, EMIT_DIRECTIVE__EVENT_NAME);
    createEReference(emitDirectiveEClass, EMIT_DIRECTIVE__ARGUMENT_LIST);

    waitDirectiveEClass = createEClass(WAIT_DIRECTIVE);
    createEReference(waitDirectiveEClass, WAIT_DIRECTIVE__EVENT_SPECIFICATION);

    doDirectiveEClass = createEClass(DO_DIRECTIVE);
    createEReference(doDirectiveEClass, DO_DIRECTIVE__DO_MEMBERS);

    doDirectiveMemberEClass = createEClass(DO_DIRECTIVE_MEMBER);
    createEAttribute(doDirectiveMemberEClass, DO_DIRECTIVE_MEMBER__LABEL_NAME);
    createEReference(doDirectiveMemberEClass, DO_DIRECTIVE_MEMBER__COMPOSITION);
    createEReference(doDirectiveMemberEClass, DO_DIRECTIVE_MEMBER__EMIT_DIRECTIVE);
    createEReference(doDirectiveMemberEClass, DO_DIRECTIVE_MEMBER__CALL_DIRECTIVE);
    createEReference(doDirectiveMemberEClass, DO_DIRECTIVE_MEMBER__WAIT_DIRECTIVE);
    createEReference(doDirectiveMemberEClass, DO_DIRECTIVE_MEMBER__BEHAVIOR_INVOCATION);

    compositionEClass = createEClass(COMPOSITION);
    createEAttribute(compositionEClass, COMPOSITION__COMPOSITION_OP);
    createEReference(compositionEClass, COMPOSITION__ARGUMENT_LIST);
    createEReference(compositionEClass, COMPOSITION__DO_MEMBERS);
    createEReference(compositionEClass, COMPOSITION__WITH_DECLARATION);

    behaviorInvocationEClass = createEClass(BEHAVIOR_INVOCATION);
    createEReference(behaviorInvocationEClass, BEHAVIOR_INVOCATION__ACTOR_EXPRESSION);
    createEReference(behaviorInvocationEClass, BEHAVIOR_INVOCATION__ARGUMENT_LIST);

    parameterWithDeclarationEClass = createEClass(PARAMETER_WITH_DECLARATION);
    createEReference(parameterWithDeclarationEClass, PARAMETER_WITH_DECLARATION__PARAMETER_WITH_MEMBERS);

    behaviorWithDeclarationEClass = createEClass(BEHAVIOR_WITH_DECLARATION);
    createEReference(behaviorWithDeclarationEClass, BEHAVIOR_WITH_DECLARATION__BEHAVIOR_WITH_MEMBERS);

    behaviorWithMemberEClass = createEClass(BEHAVIOR_WITH_MEMBER);

    constraintDeclarationEClass = createEClass(CONSTRAINT_DECLARATION);

    keepConstraintDeclarationEClass = createEClass(KEEP_CONSTRAINT_DECLARATION);
    createEAttribute(keepConstraintDeclarationEClass, KEEP_CONSTRAINT_DECLARATION__CONSTRAINT_QUALIFIER);
    createEReference(keepConstraintDeclarationEClass, KEEP_CONSTRAINT_DECLARATION__CONSTRAINT_EXPRESSION);

    removeDefaultDeclarationEClass = createEClass(REMOVE_DEFAULT_DECLARATION);
    createEReference(removeDefaultDeclarationEClass, REMOVE_DEFAULT_DECLARATION__PARAMETER_REFERENCE);

    untilDirectiveEClass = createEClass(UNTIL_DIRECTIVE);
    createEReference(untilDirectiveEClass, UNTIL_DIRECTIVE__EVENT_SPECIFICATION);

    argumentListSpecificationEClass = createEClass(ARGUMENT_LIST_SPECIFICATION);
    createEReference(argumentListSpecificationEClass, ARGUMENT_LIST_SPECIFICATION__ARGUMENT_SPECIFICATION);

    argumentSpecificationEClass = createEClass(ARGUMENT_SPECIFICATION);
    createEAttribute(argumentSpecificationEClass, ARGUMENT_SPECIFICATION__ARGUMENT_NAME);
    createEAttribute(argumentSpecificationEClass, ARGUMENT_SPECIFICATION__TYPE_DECLARATOR);
    createEReference(argumentSpecificationEClass, ARGUMENT_SPECIFICATION__DEFAULT_VALUE);

    argumentListEClass = createEClass(ARGUMENT_LIST);
    createEReference(argumentListEClass, ARGUMENT_LIST__POSITIONAL_ARGUMENTS);
    createEReference(argumentListEClass, ARGUMENT_LIST__NAMED_ARGUMENTS);

    namedArgumentEClass = createEClass(NAMED_ARGUMENT);
    createEAttribute(namedArgumentEClass, NAMED_ARGUMENT__ARGUMENT_NAME);
    createEReference(namedArgumentEClass, NAMED_ARGUMENT__EXPRESSION);
    createEReference(namedArgumentEClass, NAMED_ARGUMENT__ARGUMENT_LIST);

    postfixExpEClass = createEClass(POSTFIX_EXP);
    createEReference(postfixExpEClass, POSTFIX_EXP__PRIMARY_EXP);
    createEReference(postfixExpEClass, POSTFIX_EXP__TAIL);
    createEReference(postfixExpEClass, POSTFIX_EXP__ARGUMENT_LIST);
    createEAttribute(postfixExpEClass, POSTFIX_EXP__FIELD_NAME);

    postfixExpTailEClass = createEClass(POSTFIX_EXP_TAIL);

    castExpTailEClass = createEClass(CAST_EXP_TAIL);
    createEAttribute(castExpTailEClass, CAST_EXP_TAIL__TYPE_DECLARATOR);

    typeTestTailEClass = createEClass(TYPE_TEST_TAIL);
    createEAttribute(typeTestTailEClass, TYPE_TEST_TAIL__TYPE_DECLARATOR);

    elementAccessTailEClass = createEClass(ELEMENT_ACCESS_TAIL);
    createEReference(elementAccessTailEClass, ELEMENT_ACCESS_TAIL__EXPRESSION);

    fieldAccessTailEClass = createEClass(FIELD_ACCESS_TAIL);
    createEAttribute(fieldAccessTailEClass, FIELD_ACCESS_TAIL__FIELD_NAME);

    methodInvocationEClass = createEClass(METHOD_INVOCATION);

    parameterReferenceEClass = createEClass(PARAMETER_REFERENCE);

    primaryExpEClass = createEClass(PRIMARY_EXP);

    valueExpEClass = createEClass(VALUE_EXP);

    physicalTypeEClass = createEClass(PHYSICAL_TYPE);
    createEAttribute(physicalTypeEClass, PHYSICAL_TYPE__NUMBER_INTEGER);
    createEAttribute(physicalTypeEClass, PHYSICAL_TYPE__NUMBER_FLOAT);
    createEAttribute(physicalTypeEClass, PHYSICAL_TYPE__UNIT_BASE_NAME);
    createEAttribute(physicalTypeEClass, PHYSICAL_TYPE__UNIT_NAME);

    listConstructorEClass = createEClass(LIST_CONSTRUCTOR);
    createEReference(listConstructorEClass, LIST_CONSTRUCTOR__ELEMENTS);

    rangeConstructorEClass = createEClass(RANGE_CONSTRUCTOR);
    createEReference(rangeConstructorEClass, RANGE_CONSTRUCTOR__START);
    createEReference(rangeConstructorEClass, RANGE_CONSTRUCTOR__END);

    conditionEClass = createEClass(CONDITION);
    createEReference(conditionEClass, CONDITION__CONDITION);
    createEReference(conditionEClass, CONDITION__TRUE_RESULT);
    createEReference(conditionEClass, CONDITION__FALSE_RESULT);

    expressionEClass = createEClass(EXPRESSION);

    relationEClass = createEClass(RELATION);

    sumEClass = createEClass(SUM);
    createEAttribute(sumEClass, SUM__RELATIONAL_OP);
    createEReference(sumEClass, SUM__NEXT_SUM);

    termEClass = createEClass(TERM);
    createEAttribute(termEClass, TERM__ADDITIVE_OP);
    createEReference(termEClass, TERM__NEXT_TERM);

    factorEClass = createEClass(FACTOR);
    createEAttribute(factorEClass, FACTOR__MULTIPLICATIVE_OP);
    createEReference(factorEClass, FACTOR__NEXT_FACTOR);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    importStatementEClass.getESuperTypes().add(this.getPreludeStatement());
    structuredIDEClass.getESuperTypes().add(this.getImportReference());
    physicalTypeDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    unitDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    typeExtensionEClass.getESuperTypes().add(this.getOscDeclaration());
    enumTypeExtensionEClass.getESuperTypes().add(this.getTypeExtension());
    structuredTypeExtensionEClass.getESuperTypes().add(this.getTypeExtension());
    globalParameterDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    parameterDeclarationEClass.getESuperTypes().add(this.getFieldDeclaration());
    enumDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    enumValueReferenceEClass.getESuperTypes().add(this.getValueExp());
    modifierDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    actionDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    actorDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    structDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    scenarioDeclarationEClass.getESuperTypes().add(this.getOscDeclaration());
    memberDeclarationEClass.getESuperTypes().add(this.getExtensionMemberDeclaration());
    coverageDeclarationEClass.getESuperTypes().add(this.getMemberDeclaration());
    methodDeclarationEClass.getESuperTypes().add(this.getMemberDeclaration());
    eventDeclarationEClass.getESuperTypes().add(this.getMemberDeclaration());
    riseExpressionEClass.getESuperTypes().add(this.getEventCondition());
    fallExpressionEClass.getESuperTypes().add(this.getEventCondition());
    elapsedExpressionEClass.getESuperTypes().add(this.getEventCondition());
    everyExpressionEClass.getESuperTypes().add(this.getEventCondition());
    fieldDeclarationEClass.getESuperTypes().add(this.getMemberDeclaration());
    variableDeclarationEClass.getESuperTypes().add(this.getFieldDeclaration());
    behaviorSpecificationEClass.getESuperTypes().add(this.getExtensionMemberDeclaration());
    onDirectiveEClass.getESuperTypes().add(this.getBehaviorSpecification());
    callDirectiveEClass.getESuperTypes().add(this.getOnDirectiveMember());
    emitDirectiveEClass.getESuperTypes().add(this.getOnDirectiveMember());
    doDirectiveEClass.getESuperTypes().add(this.getBehaviorSpecification());
    behaviorInvocationEClass.getESuperTypes().add(this.getBehaviorWithMember());
    constraintDeclarationEClass.getESuperTypes().add(this.getMemberDeclaration());
    constraintDeclarationEClass.getESuperTypes().add(this.getBehaviorWithMember());
    keepConstraintDeclarationEClass.getESuperTypes().add(this.getConstraintDeclaration());
    removeDefaultDeclarationEClass.getESuperTypes().add(this.getConstraintDeclaration());
    untilDirectiveEClass.getESuperTypes().add(this.getBehaviorWithMember());
    postfixExpEClass.getESuperTypes().add(this.getMethodInvocation());
    postfixExpEClass.getESuperTypes().add(this.getParameterReference());
    postfixExpEClass.getESuperTypes().add(this.getFactor());
    castExpTailEClass.getESuperTypes().add(this.getPostfixExpTail());
    typeTestTailEClass.getESuperTypes().add(this.getPostfixExpTail());
    fieldAccessTailEClass.getESuperTypes().add(this.getPostfixExpTail());
    valueExpEClass.getESuperTypes().add(this.getPrimaryExp());
    physicalTypeEClass.getESuperTypes().add(this.getValueExp());
    listConstructorEClass.getESuperTypes().add(this.getPrimaryExp());
    rangeConstructorEClass.getESuperTypes().add(this.getPrimaryExp());
    conditionEClass.getESuperTypes().add(this.getEventCondition());
    expressionEClass.getESuperTypes().add(this.getEventCondition());
    relationEClass.getESuperTypes().add(this.getExpression());
    sumEClass.getESuperTypes().add(this.getRelation());
    termEClass.getESuperTypes().add(this.getSum());
    factorEClass.getESuperTypes().add(this.getTerm());

    // Initialize classes and features; add operations and parameters
    initEClass(oscFileEClass, OscFile.class, "OscFile", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getOscFile_PreludeStatements(), this.getPreludeStatement(), null, "preludeStatements", null, 0, -1, OscFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOscFile_OscDeclarations(), this.getOscDeclaration(), null, "oscDeclarations", null, 0, -1, OscFile.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(preludeStatementEClass, PreludeStatement.class, "PreludeStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(importStatementEClass, ImportStatement.class, "ImportStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getImportStatement_ImportReference(), this.getImportReference(), null, "importReference", null, 0, 1, ImportStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(importReferenceEClass, ImportReference.class, "ImportReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(structuredIDEClass, StructuredID.class, "StructuredID", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStructuredID_Identifier(), ecorePackage.getEString(), "identifier", null, 0, -1, StructuredID.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(oscDeclarationEClass, OscDeclaration.class, "OscDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(physicalTypeDeclarationEClass, PhysicalTypeDeclaration.class, "PhysicalTypeDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPhysicalTypeDeclaration_PhysicalTypeName(), ecorePackage.getEString(), "physicalTypeName", null, 0, 1, PhysicalTypeDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPhysicalTypeDeclaration_BaseUnitSpecifier(), this.getSIBaseUnitSpecifier(), null, "baseUnitSpecifier", null, 0, 1, PhysicalTypeDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(unitDeclarationEClass, UnitDeclaration.class, "UnitDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUnitDeclaration_UnitName(), ecorePackage.getEString(), "unitName", null, 0, 1, UnitDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getUnitDeclaration_PhysicalTypeName(), ecorePackage.getEString(), "physicalTypeName", null, 0, 1, UnitDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUnitDeclaration_UnitSpecifier(), this.getSIUnitSpecifier(), null, "unitSpecifier", null, 0, 1, UnitDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(siBaseUnitSpecifierEClass, SIBaseUnitSpecifier.class, "SIBaseUnitSpecifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSIBaseUnitSpecifier_SIBaseExponentList(), this.getSIBaseExponentList(), null, "SIBaseExponentList", null, 0, 1, SIBaseUnitSpecifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(siBaseExponentListEClass, SIBaseExponentList.class, "SIBaseExponentList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSIBaseExponentList_SIBaseExponentList(), this.getSIBaseExponent(), null, "SIBaseExponentList", null, 0, 1, SIBaseExponentList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSIBaseExponentList_NextSIBaseExponentList(), this.getSIBaseExponent(), null, "NextSIBaseExponentList", null, 0, -1, SIBaseExponentList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(siBaseExponentEClass, SIBaseExponent.class, "SIBaseExponent", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSIBaseExponent_Unit(), ecorePackage.getEString(), "unit", null, 0, 1, SIBaseExponent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSIBaseExponent_Number(), ecorePackage.getEString(), "number", null, 0, 1, SIBaseExponent.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(siUnitSpecifierEClass, SIUnitSpecifier.class, "SIUnitSpecifier", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSIUnitSpecifier_SIBaseExponentList(), this.getSIBaseExponentList(), null, "SIBaseExponentList", null, 0, 1, SIUnitSpecifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSIUnitSpecifier_SIfactor(), ecorePackage.getEString(), "SIfactor", null, 0, 1, SIUnitSpecifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getSIUnitSpecifier_SIUnit(), ecorePackage.getEString(), "SIUnit", null, 0, 1, SIUnitSpecifier.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeExtensionEClass, TypeExtension.class, "TypeExtension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(enumTypeExtensionEClass, EnumTypeExtension.class, "EnumTypeExtension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumTypeExtension_EnumName(), ecorePackage.getEString(), "enumName", null, 0, 1, EnumTypeExtension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnumTypeExtension_EnumMemberDecls(), this.getEnumMemberDeclaration(), null, "enumMemberDecls", null, 0, -1, EnumTypeExtension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(structuredTypeExtensionEClass, StructuredTypeExtension.class, "StructuredTypeExtension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStructuredTypeExtension_ExtendableTypeName(), ecorePackage.getEString(), "extendableTypeName", null, 0, 1, StructuredTypeExtension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStructuredTypeExtension_ExtensionMemberDecls(), this.getExtensionMemberDeclaration(), null, "extensionMemberDecls", null, 0, -1, StructuredTypeExtension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(extensionMemberDeclarationEClass, ExtensionMemberDeclaration.class, "ExtensionMemberDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(globalParameterDeclarationEClass, GlobalParameterDeclaration.class, "GlobalParameterDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGlobalParameterDeclaration_ParameterDeclaration(), this.getParameterDeclaration(), null, "parameterDeclaration", null, 0, 1, GlobalParameterDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterDeclarationEClass, ParameterDeclaration.class, "ParameterDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParameterDeclaration_WithDeclaration(), this.getParameterWithDeclaration(), null, "withDeclaration", null, 0, 1, ParameterDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumDeclarationEClass, EnumDeclaration.class, "EnumDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumDeclaration_EnumName(), ecorePackage.getEString(), "enumName", null, 0, 1, EnumDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEnumDeclaration_EnumMemberDecls(), this.getEnumMemberDeclaration(), null, "enumMemberDecls", null, 0, -1, EnumDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumMemberDeclarationEClass, EnumMemberDeclaration.class, "EnumMemberDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumMemberDeclaration_EnumMemberName(), ecorePackage.getEString(), "enumMemberName", null, 0, 1, EnumMemberDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnumMemberDeclaration_EnumMemberValue(), ecorePackage.getEString(), "enumMemberValue", null, 0, 1, EnumMemberDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(enumValueReferenceEClass, EnumValueReference.class, "EnumValueReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEnumValueReference_EnumName(), ecorePackage.getEString(), "enumName", null, 0, 1, EnumValueReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEnumValueReference_EnumMemberName(), ecorePackage.getEString(), "enumMemberName", null, 0, 1, EnumValueReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(modifierDeclarationEClass, ModifierDeclaration.class, "ModifierDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getModifierDeclaration_ActorName(), ecorePackage.getEString(), "actorName", null, 0, 1, ModifierDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModifierDeclaration_ModifierName(), ecorePackage.getEString(), "modifierName", null, 0, 1, ModifierDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getModifierDeclaration_QualifiedBehaviorName(), ecorePackage.getEString(), "qualifiedBehaviorName", null, 0, 1, ModifierDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModifierDeclaration_ScenarioMemberDecl(), this.getMemberDeclaration(), null, "ScenarioMemberDecl", null, 0, -1, ModifierDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModifierDeclaration_BehaviorSpecification(), this.getOnDirective(), null, "BehaviorSpecification", null, 0, -1, ModifierDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(actionDeclarationEClass, ActionDeclaration.class, "ActionDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getActionDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, ActionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getActionDeclaration_BaseActionName(), ecorePackage.getEString(), "baseActionName", null, 0, 1, ActionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getActionDeclaration_FieldName(), ecorePackage.getEString(), "fieldName", null, 0, 1, ActionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActionDeclaration_EnumReference(), this.getEnumValueReference(), null, "enumReference", null, 0, 1, ActionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActionDeclaration_ActionMemberDecl(), this.getMemberDeclaration(), null, "ActionMemberDecl", null, 0, -1, ActionDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(actorDeclarationEClass, ActorDeclaration.class, "ActorDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getActorDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, ActorDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getActorDeclaration_BaseActorName(), ecorePackage.getEString(), "baseActorName", null, 0, 1, ActorDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getActorDeclaration_FieldName(), ecorePackage.getEString(), "fieldName", null, 0, 1, ActorDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActorDeclaration_EnumReference(), this.getEnumValueReference(), null, "enumReference", null, 0, 1, ActorDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getActorDeclaration_ActorMemberDecl(), this.getMemberDeclaration(), null, "ActorMemberDecl", null, 0, -1, ActorDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(structDeclarationEClass, StructDeclaration.class, "StructDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getStructDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStructDeclaration_BaseStructName(), ecorePackage.getEString(), "baseStructName", null, 0, 1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getStructDeclaration_FieldName(), ecorePackage.getEString(), "fieldName", null, 0, 1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStructDeclaration_EnumReference(), this.getEnumValueReference(), null, "enumReference", null, 0, 1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getStructDeclaration_StructMemberDecl(), this.getMemberDeclaration(), null, "StructMemberDecl", null, 0, -1, StructDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(scenarioDeclarationEClass, ScenarioDeclaration.class, "ScenarioDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getScenarioDeclaration_Name(), ecorePackage.getEString(), "name", null, 0, 1, ScenarioDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getScenarioDeclaration_BaseScenarioName(), ecorePackage.getEString(), "baseScenarioName", null, 0, 1, ScenarioDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getScenarioDeclaration_FieldName(), ecorePackage.getEString(), "fieldName", null, 0, 1, ScenarioDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getScenarioDeclaration_EnumReference(), this.getEnumValueReference(), null, "enumReference", null, 0, 1, ScenarioDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getScenarioDeclaration_ScenarioMemberDecl(), this.getMemberDeclaration(), null, "ScenarioMemberDecl", null, 0, -1, ScenarioDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getScenarioDeclaration_BehaviorSpecification(), this.getBehaviorSpecification(), null, "BehaviorSpecification", null, 0, -1, ScenarioDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(memberDeclarationEClass, MemberDeclaration.class, "MemberDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(coverageDeclarationEClass, CoverageDeclaration.class, "CoverageDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCoverageDeclaration_ArgumentList(), this.getArgumentList(), null, "argumentList", null, 0, 1, CoverageDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodDeclarationEClass, MethodDeclaration.class, "MethodDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMethodDeclaration_MethodName(), ecorePackage.getEString(), "methodName", null, 0, 1, MethodDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMethodDeclaration_ArgumentListSpecification(), this.getArgumentListSpecification(), null, "argumentListSpecification", null, 0, 1, MethodDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethodDeclaration_ReturnType(), ecorePackage.getEString(), "returnType", null, 0, 1, MethodDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMethodDeclaration_MethodImplementation(), this.getMethodImplementation(), null, "methodImplementation", null, 0, 1, MethodDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodImplementationEClass, MethodImplementation.class, "MethodImplementation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getMethodImplementation_Expression(), this.getExpression(), null, "expression", null, 0, 1, MethodImplementation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMethodImplementation_StructuredID(), this.getStructuredID(), null, "structuredID", null, 0, 1, MethodImplementation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMethodImplementation_ArgumentList(), this.getArgumentList(), null, "argumentList", null, 0, 1, MethodImplementation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventDeclarationEClass, EventDeclaration.class, "EventDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEventDeclaration_EventName(), ecorePackage.getEString(), "eventName", null, 0, 1, EventDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventDeclaration_Params(), this.getArgumentListSpecification(), null, "params", null, 0, -1, EventDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventDeclaration_EventSpecification(), this.getEventSpecification(), null, "eventSpecification", null, 0, 1, EventDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventSpecificationEClass, EventSpecification.class, "EventSpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEventSpecification_EventReference(), this.getEventReference(), null, "eventReference", null, 0, 1, EventSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEventSpecification_EventFieldName(), ecorePackage.getEString(), "eventFieldName", null, 0, 1, EventSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEventSpecification_EventCondition(), this.getEventCondition(), null, "eventCondition", null, 0, 1, EventSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventReferenceEClass, EventReference.class, "EventReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEventReference_EventPath(), this.getEventPath(), null, "eventPath", null, 0, 1, EventReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventPathEClass, EventPath.class, "EventPath", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEventPath_Expression(), this.getExpression(), null, "expression", null, 0, 1, EventPath.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEventPath_EventName(), ecorePackage.getEString(), "eventName", null, 0, 1, EventPath.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eventConditionEClass, EventCondition.class, "EventCondition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(riseExpressionEClass, RiseExpression.class, "RiseExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRiseExpression_BoolExpression(), this.getExpression(), null, "boolExpression", null, 0, 1, RiseExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fallExpressionEClass, FallExpression.class, "FallExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFallExpression_BoolExpression(), this.getExpression(), null, "boolExpression", null, 0, 1, FallExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elapsedExpressionEClass, ElapsedExpression.class, "ElapsedExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getElapsedExpression_DurationExpression(), this.getExpression(), null, "durationExpression", null, 0, 1, ElapsedExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(everyExpressionEClass, EveryExpression.class, "EveryExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEveryExpression_DurationExpression(), this.getExpression(), null, "durationExpression", null, 0, 1, EveryExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEveryExpression_NextdurationExpression(), this.getExpression(), null, "NextdurationExpression", null, 0, -1, EveryExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldDeclarationEClass, FieldDeclaration.class, "FieldDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFieldDeclaration_FieldName(), ecorePackage.getEString(), "fieldName", null, 0, 1, FieldDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFieldDeclaration_NextfieldName(), ecorePackage.getEString(), "NextfieldName", null, 0, -1, FieldDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFieldDeclaration_TypeDeclarator(), ecorePackage.getEString(), "typeDeclarator", null, 0, 1, FieldDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFieldDeclaration_DefaultValue(), this.getExpression(), null, "defaultValue", null, 0, 1, FieldDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(variableDeclarationEClass, VariableDeclaration.class, "VariableDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getVariableDeclaration_SampleExpression(), this.getSampleExpression(), null, "sampleExpression", null, 0, 1, VariableDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sampleExpressionEClass, SampleExpression.class, "SampleExpression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getSampleExpression_Expression(), this.getExpression(), null, "expression", null, 0, 1, SampleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSampleExpression_EventSpecification(), this.getEventSpecification(), null, "eventSpecification", null, 0, 1, SampleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSampleExpression_DefaultValue(), this.getExpression(), null, "defaultValue", null, 0, 1, SampleExpression.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(behaviorSpecificationEClass, BehaviorSpecification.class, "BehaviorSpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(onDirectiveEClass, OnDirective.class, "OnDirective", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getOnDirective_EventSpecification(), ecorePackage.getEString(), "eventSpecification", null, 0, 1, OnDirective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getOnDirective_OnMember(), this.getOnDirectiveMember(), null, "onMember", null, 0, -1, OnDirective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(onDirectiveMemberEClass, OnDirectiveMember.class, "OnDirectiveMember", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(callDirectiveEClass, CallDirective.class, "CallDirective", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCallDirective_MethodInvocation(), this.getMethodInvocation(), null, "methodInvocation", null, 0, 1, CallDirective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(emitDirectiveEClass, EmitDirective.class, "EmitDirective", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEmitDirective_EventName(), ecorePackage.getEString(), "eventName", null, 0, 1, EmitDirective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEmitDirective_ArgumentList(), this.getArgumentList(), null, "argumentList", null, 0, 1, EmitDirective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(waitDirectiveEClass, WaitDirective.class, "WaitDirective", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getWaitDirective_EventSpecification(), this.getEventSpecification(), null, "eventSpecification", null, 0, 1, WaitDirective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(doDirectiveEClass, DoDirective.class, "DoDirective", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDoDirective_DoMembers(), this.getDoDirectiveMember(), null, "doMembers", null, 0, 1, DoDirective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(doDirectiveMemberEClass, DoDirectiveMember.class, "DoDirectiveMember", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDoDirectiveMember_LabelName(), ecorePackage.getEString(), "labelName", null, 0, 1, DoDirectiveMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDoDirectiveMember_Composition(), this.getComposition(), null, "composition", null, 0, 1, DoDirectiveMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDoDirectiveMember_EmitDirective(), this.getEmitDirective(), null, "emitDirective", null, 0, 1, DoDirectiveMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDoDirectiveMember_CallDirective(), this.getCallDirective(), null, "callDirective", null, 0, 1, DoDirectiveMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDoDirectiveMember_WaitDirective(), this.getWaitDirective(), null, "waitDirective", null, 0, 1, DoDirectiveMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDoDirectiveMember_BehaviorInvocation(), this.getBehaviorInvocation(), null, "behaviorInvocation", null, 0, 1, DoDirectiveMember.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(compositionEClass, Composition.class, "Composition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getComposition_CompositionOp(), ecorePackage.getEString(), "compositionOp", null, 0, 1, Composition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComposition_ArgumentList(), this.getArgumentList(), null, "argumentList", null, 0, 1, Composition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComposition_DoMembers(), this.getDoDirectiveMember(), null, "doMembers", null, 0, -1, Composition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getComposition_WithDeclaration(), this.getBehaviorWithDeclaration(), null, "withDeclaration", null, 0, -1, Composition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(behaviorInvocationEClass, BehaviorInvocation.class, "BehaviorInvocation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBehaviorInvocation_ActorExpression(), this.getExpression(), null, "actorExpression", null, 0, 1, BehaviorInvocation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBehaviorInvocation_ArgumentList(), this.getArgumentList(), null, "argumentList", null, 0, 1, BehaviorInvocation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(parameterWithDeclarationEClass, ParameterWithDeclaration.class, "ParameterWithDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getParameterWithDeclaration_ParameterWithMembers(), this.getConstraintDeclaration(), null, "parameterWithMembers", null, 0, -1, ParameterWithDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(behaviorWithDeclarationEClass, BehaviorWithDeclaration.class, "BehaviorWithDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBehaviorWithDeclaration_BehaviorWithMembers(), this.getBehaviorWithMember(), null, "behaviorWithMembers", null, 0, -1, BehaviorWithDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(behaviorWithMemberEClass, BehaviorWithMember.class, "BehaviorWithMember", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(constraintDeclarationEClass, ConstraintDeclaration.class, "ConstraintDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(keepConstraintDeclarationEClass, KeepConstraintDeclaration.class, "KeepConstraintDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getKeepConstraintDeclaration_ConstraintQualifier(), ecorePackage.getEString(), "constraintQualifier", null, 0, 1, KeepConstraintDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getKeepConstraintDeclaration_ConstraintExpression(), this.getExpression(), null, "constraintExpression", null, 0, 1, KeepConstraintDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(removeDefaultDeclarationEClass, RemoveDefaultDeclaration.class, "RemoveDefaultDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRemoveDefaultDeclaration_ParameterReference(), this.getParameterReference(), null, "parameterReference", null, 0, 1, RemoveDefaultDeclaration.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(untilDirectiveEClass, UntilDirective.class, "UntilDirective", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getUntilDirective_EventSpecification(), this.getEventSpecification(), null, "eventSpecification", null, 0, 1, UntilDirective.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argumentListSpecificationEClass, ArgumentListSpecification.class, "ArgumentListSpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArgumentListSpecification_ArgumentSpecification(), this.getArgumentSpecification(), null, "argumentSpecification", null, 0, -1, ArgumentListSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argumentSpecificationEClass, ArgumentSpecification.class, "ArgumentSpecification", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getArgumentSpecification_ArgumentName(), ecorePackage.getEString(), "argumentName", null, 0, 1, ArgumentSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getArgumentSpecification_TypeDeclarator(), ecorePackage.getEString(), "typeDeclarator", null, 0, 1, ArgumentSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArgumentSpecification_DefaultValue(), this.getExpression(), null, "defaultValue", null, 0, 1, ArgumentSpecification.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(argumentListEClass, ArgumentList.class, "ArgumentList", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getArgumentList_PositionalArguments(), this.getExpression(), null, "positionalArguments", null, 0, -1, ArgumentList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArgumentList_NamedArguments(), this.getNamedArgument(), null, "namedArguments", null, 0, -1, ArgumentList.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(namedArgumentEClass, NamedArgument.class, "NamedArgument", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getNamedArgument_ArgumentName(), ecorePackage.getEString(), "argumentName", null, 0, 1, NamedArgument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNamedArgument_Expression(), this.getExpression(), null, "expression", null, 0, 1, NamedArgument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getNamedArgument_ArgumentList(), this.getArgumentList(), null, "argumentList", null, 0, 1, NamedArgument.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(postfixExpEClass, PostfixExp.class, "PostfixExp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getPostfixExp_PrimaryExp(), this.getPrimaryExp(), null, "primaryExp", null, 0, 1, PostfixExp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPostfixExp_Tail(), this.getPostfixExpTail(), null, "tail", null, 0, -1, PostfixExp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getPostfixExp_ArgumentList(), this.getArgumentList(), null, "argumentList", null, 0, -1, PostfixExp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPostfixExp_FieldName(), ecorePackage.getEString(), "fieldName", null, 0, -1, PostfixExp.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(postfixExpTailEClass, PostfixExpTail.class, "PostfixExpTail", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(castExpTailEClass, CastExpTail.class, "CastExpTail", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getCastExpTail_TypeDeclarator(), ecorePackage.getEString(), "typeDeclarator", null, 0, -1, CastExpTail.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(typeTestTailEClass, TypeTestTail.class, "TypeTestTail", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTypeTestTail_TypeDeclarator(), ecorePackage.getEString(), "typeDeclarator", null, 0, -1, TypeTestTail.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(elementAccessTailEClass, ElementAccessTail.class, "ElementAccessTail", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getElementAccessTail_Expression(), this.getExpression(), null, "expression", null, 0, -1, ElementAccessTail.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(fieldAccessTailEClass, FieldAccessTail.class, "FieldAccessTail", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFieldAccessTail_FieldName(), ecorePackage.getEString(), "fieldName", null, 0, -1, FieldAccessTail.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodInvocationEClass, MethodInvocation.class, "MethodInvocation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(parameterReferenceEClass, ParameterReference.class, "ParameterReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(primaryExpEClass, PrimaryExp.class, "PrimaryExp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(valueExpEClass, ValueExp.class, "ValueExp", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(physicalTypeEClass, PhysicalType.class, "PhysicalType", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getPhysicalType_NumberInteger(), ecorePackage.getEString(), "numberInteger", null, 0, 1, PhysicalType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPhysicalType_NumberFloat(), ecorePackage.getEString(), "numberFloat", null, 0, 1, PhysicalType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPhysicalType_UnitBaseName(), ecorePackage.getEString(), "unitBaseName", null, 0, 1, PhysicalType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getPhysicalType_UnitName(), ecorePackage.getEString(), "unitName", null, 0, 1, PhysicalType.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(listConstructorEClass, ListConstructor.class, "ListConstructor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getListConstructor_Elements(), this.getValueExp(), null, "elements", null, 0, -1, ListConstructor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rangeConstructorEClass, RangeConstructor.class, "RangeConstructor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRangeConstructor_Start(), this.getValueExp(), null, "start", null, 0, 1, RangeConstructor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRangeConstructor_End(), this.getValueExp(), null, "end", null, 0, 1, RangeConstructor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(conditionEClass, Condition.class, "Condition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getCondition_Condition(), this.getExpression(), null, "condition", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCondition_TrueResult(), this.getExpression(), null, "trueResult", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getCondition_FalseResult(), this.getExpression(), null, "falseResult", null, 0, 1, Condition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(expressionEClass, Expression.class, "Expression", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(relationEClass, Relation.class, "Relation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(sumEClass, Sum.class, "Sum", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSum_RelationalOp(), ecorePackage.getEString(), "relationalOp", null, 0, -1, Sum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getSum_NextSum(), this.getSum(), null, "nextSum", null, 0, -1, Sum.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(termEClass, Term.class, "Term", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTerm_AdditiveOp(), ecorePackage.getEString(), "additiveOp", null, 0, -1, Term.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getTerm_NextTerm(), this.getTerm(), null, "nextTerm", null, 0, -1, Term.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(factorEClass, Factor.class, "Factor", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFactor_MultiplicativeOp(), ecorePackage.getEString(), "multiplicativeOp", null, 0, -1, Factor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFactor_NextFactor(), this.getFactor(), null, "nextFactor", null, 0, -1, Factor.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //OpenScenarioPackageImpl
