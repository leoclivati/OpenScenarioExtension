/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.openScenario.impl;

import de.bmwgroup.openscenario.openScenario.ArgumentListSpecification;
import de.bmwgroup.openscenario.openScenario.MethodDeclaration;
import de.bmwgroup.openscenario.openScenario.MethodImplementation;
import de.bmwgroup.openscenario.openScenario.OpenScenarioPackage;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Method Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.MethodDeclarationImpl#getMethodName <em>Method Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.MethodDeclarationImpl#getArgumentListSpecification <em>Argument List Specification</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.MethodDeclarationImpl#getReturnType <em>Return Type</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.openScenario.impl.MethodDeclarationImpl#getMethodImplementation <em>Method Implementation</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MethodDeclarationImpl extends MemberDeclarationImpl implements MethodDeclaration
{
  /**
   * The default value of the '{@link #getMethodName() <em>Method Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethodName()
   * @generated
   * @ordered
   */
  protected static final String METHOD_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMethodName() <em>Method Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethodName()
   * @generated
   * @ordered
   */
  protected String methodName = METHOD_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getArgumentListSpecification() <em>Argument List Specification</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgumentListSpecification()
   * @generated
   * @ordered
   */
  protected ArgumentListSpecification argumentListSpecification;

  /**
   * The default value of the '{@link #getReturnType() <em>Return Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnType()
   * @generated
   * @ordered
   */
  protected static final String RETURN_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReturnType() <em>Return Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnType()
   * @generated
   * @ordered
   */
  protected String returnType = RETURN_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getMethodImplementation() <em>Method Implementation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMethodImplementation()
   * @generated
   * @ordered
   */
  protected MethodImplementation methodImplementation;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MethodDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.METHOD_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getMethodName()
  {
    return methodName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMethodName(String newMethodName)
  {
    String oldMethodName = methodName;
    methodName = newMethodName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.METHOD_DECLARATION__METHOD_NAME, oldMethodName, methodName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ArgumentListSpecification getArgumentListSpecification()
  {
    return argumentListSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArgumentListSpecification(ArgumentListSpecification newArgumentListSpecification, NotificationChain msgs)
  {
    ArgumentListSpecification oldArgumentListSpecification = argumentListSpecification;
    argumentListSpecification = newArgumentListSpecification;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION, oldArgumentListSpecification, newArgumentListSpecification);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArgumentListSpecification(ArgumentListSpecification newArgumentListSpecification)
  {
    if (newArgumentListSpecification != argumentListSpecification)
    {
      NotificationChain msgs = null;
      if (argumentListSpecification != null)
        msgs = ((InternalEObject)argumentListSpecification).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION, null, msgs);
      if (newArgumentListSpecification != null)
        msgs = ((InternalEObject)newArgumentListSpecification).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION, null, msgs);
      msgs = basicSetArgumentListSpecification(newArgumentListSpecification, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION, newArgumentListSpecification, newArgumentListSpecification));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReturnType()
  {
    return returnType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReturnType(String newReturnType)
  {
    String oldReturnType = returnType;
    returnType = newReturnType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.METHOD_DECLARATION__RETURN_TYPE, oldReturnType, returnType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethodImplementation getMethodImplementation()
  {
    return methodImplementation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMethodImplementation(MethodImplementation newMethodImplementation, NotificationChain msgs)
  {
    MethodImplementation oldMethodImplementation = methodImplementation;
    methodImplementation = newMethodImplementation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION, oldMethodImplementation, newMethodImplementation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMethodImplementation(MethodImplementation newMethodImplementation)
  {
    if (newMethodImplementation != methodImplementation)
    {
      NotificationChain msgs = null;
      if (methodImplementation != null)
        msgs = ((InternalEObject)methodImplementation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION, null, msgs);
      if (newMethodImplementation != null)
        msgs = ((InternalEObject)newMethodImplementation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION, null, msgs);
      msgs = basicSetMethodImplementation(newMethodImplementation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION, newMethodImplementation, newMethodImplementation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION:
        return basicSetArgumentListSpecification(null, msgs);
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION:
        return basicSetMethodImplementation(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_NAME:
        return getMethodName();
      case OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION:
        return getArgumentListSpecification();
      case OpenScenarioPackage.METHOD_DECLARATION__RETURN_TYPE:
        return getReturnType();
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION:
        return getMethodImplementation();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_NAME:
        setMethodName((String)newValue);
        return;
      case OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION:
        setArgumentListSpecification((ArgumentListSpecification)newValue);
        return;
      case OpenScenarioPackage.METHOD_DECLARATION__RETURN_TYPE:
        setReturnType((String)newValue);
        return;
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION:
        setMethodImplementation((MethodImplementation)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_NAME:
        setMethodName(METHOD_NAME_EDEFAULT);
        return;
      case OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION:
        setArgumentListSpecification((ArgumentListSpecification)null);
        return;
      case OpenScenarioPackage.METHOD_DECLARATION__RETURN_TYPE:
        setReturnType(RETURN_TYPE_EDEFAULT);
        return;
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION:
        setMethodImplementation((MethodImplementation)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_NAME:
        return METHOD_NAME_EDEFAULT == null ? methodName != null : !METHOD_NAME_EDEFAULT.equals(methodName);
      case OpenScenarioPackage.METHOD_DECLARATION__ARGUMENT_LIST_SPECIFICATION:
        return argumentListSpecification != null;
      case OpenScenarioPackage.METHOD_DECLARATION__RETURN_TYPE:
        return RETURN_TYPE_EDEFAULT == null ? returnType != null : !RETURN_TYPE_EDEFAULT.equals(returnType);
      case OpenScenarioPackage.METHOD_DECLARATION__METHOD_IMPLEMENTATION:
        return methodImplementation != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (methodName: ");
    result.append(methodName);
    result.append(", returnType: ");
    result.append(returnType);
    result.append(')');
    return result.toString();
  }

} //MethodDeclarationImpl
