/*
 * generated by Xtext 2.35.0
 */
parser grammar InternalOpenScenarioParser;

options {
	tokenVocab=InternalOpenScenarioLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package de.bmwgroup.openscenario.asam.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.bmwgroup.openscenario.asam.services.OpenScenarioGrammarAccess;

}
@members {
	private OpenScenarioGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("ExclamationMark", "'!'");
		tokenNameToValue.put("PercentSign", "'\%'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("HyphenMinus", "'-'");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("QuestionMark", "'?'");
		tokenNameToValue.put("CommercialAt", "'@'");
		tokenNameToValue.put("A", "'A'");
		tokenNameToValue.put("K", "'K'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("M", "'m'");
		tokenNameToValue.put("S", "'s'");
		tokenNameToValue.put("ExclamationMarkEqualsSign", "'!='");
		tokenNameToValue.put("HyphenMinusGreaterThanSign", "'->'");
		tokenNameToValue.put("FullStopFullStop", "'..'");
		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
		tokenNameToValue.put("EqualsSignEqualsSign", "'=='");
		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
		tokenNameToValue.put("SI", "'SI'");
		tokenNameToValue.put("As", "'as'");
		tokenNameToValue.put("Cd", "'cd'");
		tokenNameToValue.put("Do", "'do'");
		tokenNameToValue.put("If", "'if'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("Is", "'is'");
		tokenNameToValue.put("It", "'it'");
		tokenNameToValue.put("Kg", "'kg'");
		tokenNameToValue.put("Of", "'of'");
		tokenNameToValue.put("On", "'on'");
		tokenNameToValue.put("Or", "'or'");
		tokenNameToValue.put("And", "'and'");
		tokenNameToValue.put("Def", "'def'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("Kph", "'kph'");
		tokenNameToValue.put("Mol", "'mol'");
		tokenNameToValue.put("Not", "'not'");
		tokenNameToValue.put("Rad", "'rad'");
		tokenNameToValue.put("Var", "'var'");
		tokenNameToValue.put("Bool", "'bool'");
		tokenNameToValue.put("Call", "'call'");
		tokenNameToValue.put("Emit", "'emit'");
		tokenNameToValue.put("Enum", "'enum'");
		tokenNameToValue.put("Fall", "'fall'");
		tokenNameToValue.put("Hard", "'hard'");
		tokenNameToValue.put("Keep", "'keep'");
		tokenNameToValue.put("List", "'list'");
		tokenNameToValue.put("Only", "'only'");
		tokenNameToValue.put("Rise", "'rise'");
		tokenNameToValue.put("Type", "'type'");
		tokenNameToValue.put("Uint", "'uint'");
		tokenNameToValue.put("Unit", "'unit'");
		tokenNameToValue.put("Wait", "'wait'");
		tokenNameToValue.put("With", "'with'");
		tokenNameToValue.put("Actor", "'actor'");
		tokenNameToValue.put("Cover", "'cover'");
		tokenNameToValue.put("Event", "'event'");
		tokenNameToValue.put("Every", "'every'");
		tokenNameToValue.put("Float", "'float'");
		tokenNameToValue.put("Range", "'range'");
		tokenNameToValue.put("Until", "'until'");
		tokenNameToValue.put("Action", "'action'");
		tokenNameToValue.put("Extend", "'extend'");
		tokenNameToValue.put("Factor", "'factor'");
		tokenNameToValue.put("Global", "'global'");
		tokenNameToValue.put("Import", "'import'");
		tokenNameToValue.put("Offset", "'offset'");
		tokenNameToValue.put("One_of", "'one_of'");
		tokenNameToValue.put("Record", "'record'");
		tokenNameToValue.put("Sample", "'sample'");
		tokenNameToValue.put("Serial", "'serial'");
		tokenNameToValue.put("String", "'string'");
		tokenNameToValue.put("Struct", "'struct'");
		tokenNameToValue.put("Default", "'default'");
		tokenNameToValue.put("Elapsed", "'elapsed'");
		tokenNameToValue.put("External", "'external'");
		tokenNameToValue.put("Inherits", "'inherits'");
		tokenNameToValue.put("Modifier", "'modifier'");
		tokenNameToValue.put("Parallel", "'parallel'");
		tokenNameToValue.put("Scenario", "'scenario'");
		tokenNameToValue.put("Undefined", "'undefined'");
		tokenNameToValue.put("Expression", "'expression'");
		tokenNameToValue.put("Remove_default", "'remove_default'");
	}

	public void setGrammarAccess(OpenScenarioGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleOscFile
entryRuleOscFile
:
{ before(grammarAccess.getOscFileRule()); }
	 ruleOscFile
{ after(grammarAccess.getOscFileRule()); } 
	 EOF 
;

// Rule OscFile
ruleOscFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOscFileAccess().getGroup()); }
		(rule__OscFile__Group__0)
		{ after(grammarAccess.getOscFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreludeStatement
entryRulePreludeStatement
:
{ before(grammarAccess.getPreludeStatementRule()); }
	 rulePreludeStatement
{ after(grammarAccess.getPreludeStatementRule()); } 
	 EOF 
;

// Rule PreludeStatement
rulePreludeStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreludeStatementAccess().getImportStatementParserRuleCall()); }
		ruleImportStatement
		{ after(grammarAccess.getPreludeStatementAccess().getImportStatementParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportStatement
entryRuleImportStatement
:
{ before(grammarAccess.getImportStatementRule()); }
	 ruleImportStatement
{ after(grammarAccess.getImportStatementRule()); } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportStatementAccess().getGroup()); }
		(rule__ImportStatement__Group__0)
		{ after(grammarAccess.getImportStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportReference
entryRuleImportReference
:
{ before(grammarAccess.getImportReferenceRule()); }
	 ruleImportReference
{ after(grammarAccess.getImportReferenceRule()); } 
	 EOF 
;

// Rule ImportReference
ruleImportReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportReferenceAccess().getAlternatives()); }
		(rule__ImportReference__Alternatives)
		{ after(grammarAccess.getImportReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructuredID
entryRuleStructuredID
:
{ before(grammarAccess.getStructuredIDRule()); }
	 ruleStructuredID
{ after(grammarAccess.getStructuredIDRule()); } 
	 EOF 
;

// Rule StructuredID
ruleStructuredID 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructuredIDAccess().getGroup()); }
		(rule__StructuredID__Group__0)
		{ after(grammarAccess.getStructuredIDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOscDeclaration
entryRuleOscDeclaration
:
{ before(grammarAccess.getOscDeclarationRule()); }
	 ruleOscDeclaration
{ after(grammarAccess.getOscDeclarationRule()); } 
	 EOF 
;

// Rule OscDeclaration
ruleOscDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOscDeclarationAccess().getAlternatives()); }
		(rule__OscDeclaration__Alternatives)
		{ after(grammarAccess.getOscDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePhysicalTypeDeclaration
entryRulePhysicalTypeDeclaration
:
{ before(grammarAccess.getPhysicalTypeDeclarationRule()); }
	 rulePhysicalTypeDeclaration
{ after(grammarAccess.getPhysicalTypeDeclarationRule()); } 
	 EOF 
;

// Rule PhysicalTypeDeclaration
rulePhysicalTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPhysicalTypeDeclarationAccess().getGroup()); }
		(rule__PhysicalTypeDeclaration__Group__0)
		{ after(grammarAccess.getPhysicalTypeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnitDeclaration
entryRuleUnitDeclaration
:
{ before(grammarAccess.getUnitDeclarationRule()); }
	 ruleUnitDeclaration
{ after(grammarAccess.getUnitDeclarationRule()); } 
	 EOF 
;

// Rule UnitDeclaration
ruleUnitDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnitDeclarationAccess().getGroup()); }
		(rule__UnitDeclaration__Group__0)
		{ after(grammarAccess.getUnitDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIBaseUnitSpecifier
entryRuleSIBaseUnitSpecifier
:
{ before(grammarAccess.getSIBaseUnitSpecifierRule()); }
	 ruleSIBaseUnitSpecifier
{ after(grammarAccess.getSIBaseUnitSpecifierRule()); } 
	 EOF 
;

// Rule SIBaseUnitSpecifier
ruleSIBaseUnitSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIBaseUnitSpecifierAccess().getGroup()); }
		(rule__SIBaseUnitSpecifier__Group__0)
		{ after(grammarAccess.getSIBaseUnitSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIBaseExponentList
entryRuleSIBaseExponentList
:
{ before(grammarAccess.getSIBaseExponentListRule()); }
	 ruleSIBaseExponentList
{ after(grammarAccess.getSIBaseExponentListRule()); } 
	 EOF 
;

// Rule SIBaseExponentList
ruleSIBaseExponentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIBaseExponentListAccess().getGroup()); }
		(rule__SIBaseExponentList__Group__0)
		{ after(grammarAccess.getSIBaseExponentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIBaseExponent
entryRuleSIBaseExponent
:
{ before(grammarAccess.getSIBaseExponentRule()); }
	 ruleSIBaseExponent
{ after(grammarAccess.getSIBaseExponentRule()); } 
	 EOF 
;

// Rule SIBaseExponent
ruleSIBaseExponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIBaseExponentAccess().getGroup()); }
		(rule__SIBaseExponent__Group__0)
		{ after(grammarAccess.getSIBaseExponentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIUnitSpecifier
entryRuleSIUnitSpecifier
:
{ before(grammarAccess.getSIUnitSpecifierRule()); }
	 ruleSIUnitSpecifier
{ after(grammarAccess.getSIUnitSpecifierRule()); } 
	 EOF 
;

// Rule SIUnitSpecifier
ruleSIUnitSpecifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIUnitSpecifierAccess().getGroup()); }
		(rule__SIUnitSpecifier__Group__0)
		{ after(grammarAccess.getSIUnitSpecifierAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIUnitFactor
entryRuleSIUnitFactor
:
{ before(grammarAccess.getSIUnitFactorRule()); }
	 ruleSIUnitFactor
{ after(grammarAccess.getSIUnitFactorRule()); } 
	 EOF 
;

// Rule SIUnitFactor
ruleSIUnitFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIUnitFactorAccess().getGroup()); }
		(rule__SIUnitFactor__Group__0)
		{ after(grammarAccess.getSIUnitFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIUnitOffset
entryRuleSIUnitOffset
:
{ before(grammarAccess.getSIUnitOffsetRule()); }
	 ruleSIUnitOffset
{ after(grammarAccess.getSIUnitOffsetRule()); } 
	 EOF 
;

// Rule SIUnitOffset
ruleSIUnitOffset 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIUnitOffsetAccess().getGroup()); }
		(rule__SIUnitOffset__Group__0)
		{ after(grammarAccess.getSIUnitOffsetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSIBaseUnitName
entryRuleSIBaseUnitName
:
{ before(grammarAccess.getSIBaseUnitNameRule()); }
	 ruleSIBaseUnitName
{ after(grammarAccess.getSIBaseUnitNameRule()); } 
	 EOF 
;

// Rule SIBaseUnitName
ruleSIBaseUnitName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getAlternatives()); }
		(rule__SIBaseUnitName__Alternatives)
		{ after(grammarAccess.getSIBaseUnitNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeExtension
entryRuleTypeExtension
:
{ before(grammarAccess.getTypeExtensionRule()); }
	 ruleTypeExtension
{ after(grammarAccess.getTypeExtensionRule()); } 
	 EOF 
;

// Rule TypeExtension
ruleTypeExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeExtensionAccess().getAlternatives()); }
		(rule__TypeExtension__Alternatives)
		{ after(grammarAccess.getTypeExtensionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumTypeExtension
entryRuleEnumTypeExtension
:
{ before(grammarAccess.getEnumTypeExtensionRule()); }
	 ruleEnumTypeExtension
{ after(grammarAccess.getEnumTypeExtensionRule()); } 
	 EOF 
;

// Rule EnumTypeExtension
ruleEnumTypeExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumTypeExtensionAccess().getGroup()); }
		(rule__EnumTypeExtension__Group__0)
		{ after(grammarAccess.getEnumTypeExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructuredTypeExtension
entryRuleStructuredTypeExtension
:
{ before(grammarAccess.getStructuredTypeExtensionRule()); }
	 ruleStructuredTypeExtension
{ after(grammarAccess.getStructuredTypeExtensionRule()); } 
	 EOF 
;

// Rule StructuredTypeExtension
ruleStructuredTypeExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructuredTypeExtensionAccess().getGroup()); }
		(rule__StructuredTypeExtension__Group__0)
		{ after(grammarAccess.getStructuredTypeExtensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtensionMemberDeclaration
entryRuleExtensionMemberDeclaration
:
{ before(grammarAccess.getExtensionMemberDeclarationRule()); }
	 ruleExtensionMemberDeclaration
{ after(grammarAccess.getExtensionMemberDeclarationRule()); } 
	 EOF 
;

// Rule ExtensionMemberDeclaration
ruleExtensionMemberDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtensionMemberDeclarationAccess().getAlternatives()); }
		(rule__ExtensionMemberDeclaration__Alternatives)
		{ after(grammarAccess.getExtensionMemberDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalParameterDeclaration
entryRuleGlobalParameterDeclaration
:
{ before(grammarAccess.getGlobalParameterDeclarationRule()); }
	 ruleGlobalParameterDeclaration
{ after(grammarAccess.getGlobalParameterDeclarationRule()); } 
	 EOF 
;

// Rule GlobalParameterDeclaration
ruleGlobalParameterDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalParameterDeclarationAccess().getGroup()); }
		(rule__GlobalParameterDeclaration__Group__0)
		{ after(grammarAccess.getGlobalParameterDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDeclaration
entryRuleParameterDeclaration
:
{ before(grammarAccess.getParameterDeclarationRule()); }
	 ruleParameterDeclaration
{ after(grammarAccess.getParameterDeclarationRule()); } 
	 EOF 
;

// Rule ParameterDeclaration
ruleParameterDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getGroup()); }
		(rule__ParameterDeclaration__Group__0)
		{ after(grammarAccess.getParameterDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDeclarator
entryRuleTypeDeclarator
:
{ before(grammarAccess.getTypeDeclaratorRule()); }
	 ruleTypeDeclarator
{ after(grammarAccess.getTypeDeclaratorRule()); } 
	 EOF 
;

// Rule TypeDeclarator
ruleTypeDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclaratorAccess().getAlternatives()); }
		(rule__TypeDeclarator__Alternatives)
		{ after(grammarAccess.getTypeDeclaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNonAggregateTypeDeclarator
entryRuleNonAggregateTypeDeclarator
:
{ before(grammarAccess.getNonAggregateTypeDeclaratorRule()); }
	 ruleNonAggregateTypeDeclarator
{ after(grammarAccess.getNonAggregateTypeDeclaratorRule()); } 
	 EOF 
;

// Rule NonAggregateTypeDeclarator
ruleNonAggregateTypeDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNonAggregateTypeDeclaratorAccess().getAlternatives()); }
		(rule__NonAggregateTypeDeclarator__Alternatives)
		{ after(grammarAccess.getNonAggregateTypeDeclaratorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListTypeDeclarator
entryRuleListTypeDeclarator
:
{ before(grammarAccess.getListTypeDeclaratorRule()); }
	 ruleListTypeDeclarator
{ after(grammarAccess.getListTypeDeclaratorRule()); } 
	 EOF 
;

// Rule ListTypeDeclarator
ruleListTypeDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListTypeDeclaratorAccess().getGroup()); }
		(rule__ListTypeDeclarator__Group__0)
		{ after(grammarAccess.getListTypeDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
		(rule__PrimitiveType__Alternatives)
		{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumDeclaration
entryRuleEnumDeclaration
:
{ before(grammarAccess.getEnumDeclarationRule()); }
	 ruleEnumDeclaration
{ after(grammarAccess.getEnumDeclarationRule()); } 
	 EOF 
;

// Rule EnumDeclaration
ruleEnumDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumDeclarationAccess().getGroup()); }
		(rule__EnumDeclaration__Group__0)
		{ after(grammarAccess.getEnumDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumMemberDeclaration
entryRuleEnumMemberDeclaration
:
{ before(grammarAccess.getEnumMemberDeclarationRule()); }
	 ruleEnumMemberDeclaration
{ after(grammarAccess.getEnumMemberDeclarationRule()); } 
	 EOF 
;

// Rule EnumMemberDeclaration
ruleEnumMemberDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumMemberDeclarationAccess().getGroup()); }
		(rule__EnumMemberDeclaration__Group__0)
		{ after(grammarAccess.getEnumMemberDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumValueReference
entryRuleEnumValueReference
:
{ before(grammarAccess.getEnumValueReferenceRule()); }
	 ruleEnumValueReference
{ after(grammarAccess.getEnumValueReferenceRule()); } 
	 EOF 
;

// Rule EnumValueReference
ruleEnumValueReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumValueReferenceAccess().getGroup()); }
		(rule__EnumValueReference__Group__0)
		{ after(grammarAccess.getEnumValueReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModifierDeclaration
entryRuleModifierDeclaration
:
{ before(grammarAccess.getModifierDeclarationRule()); }
	 ruleModifierDeclaration
{ after(grammarAccess.getModifierDeclarationRule()); } 
	 EOF 
;

// Rule ModifierDeclaration
ruleModifierDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifierDeclarationAccess().getGroup()); }
		(rule__ModifierDeclaration__Group__0)
		{ after(grammarAccess.getModifierDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionDeclaration
entryRuleActionDeclaration
:
{ before(grammarAccess.getActionDeclarationRule()); }
	 ruleActionDeclaration
{ after(grammarAccess.getActionDeclarationRule()); } 
	 EOF 
;

// Rule ActionDeclaration
ruleActionDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionDeclarationAccess().getGroup()); }
		(rule__ActionDeclaration__Group__0)
		{ after(grammarAccess.getActionDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActorDeclaration
entryRuleActorDeclaration
:
{ before(grammarAccess.getActorDeclarationRule()); }
	 ruleActorDeclaration
{ after(grammarAccess.getActorDeclarationRule()); } 
	 EOF 
;

// Rule ActorDeclaration
ruleActorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActorDeclarationAccess().getGroup()); }
		(rule__ActorDeclaration__Group__0)
		{ after(grammarAccess.getActorDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStructDeclaration
entryRuleStructDeclaration
:
{ before(grammarAccess.getStructDeclarationRule()); }
	 ruleStructDeclaration
{ after(grammarAccess.getStructDeclarationRule()); } 
	 EOF 
;

// Rule StructDeclaration
ruleStructDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getGroup()); }
		(rule__StructDeclaration__Group__0)
		{ after(grammarAccess.getStructDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenarioDeclaration
entryRuleScenarioDeclaration
:
{ before(grammarAccess.getScenarioDeclarationRule()); }
	 ruleScenarioDeclaration
{ after(grammarAccess.getScenarioDeclarationRule()); } 
	 EOF 
;

// Rule ScenarioDeclaration
ruleScenarioDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getGroup()); }
		(rule__ScenarioDeclaration__Group__0)
		{ after(grammarAccess.getScenarioDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMemberDeclaration
entryRuleMemberDeclaration
:
{ before(grammarAccess.getMemberDeclarationRule()); }
	 ruleMemberDeclaration
{ after(grammarAccess.getMemberDeclarationRule()); } 
	 EOF 
;

// Rule MemberDeclaration
ruleMemberDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberDeclarationAccess().getAlternatives()); }
		(rule__MemberDeclaration__Alternatives)
		{ after(grammarAccess.getMemberDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCoverageDeclaration
entryRuleCoverageDeclaration
:
{ before(grammarAccess.getCoverageDeclarationRule()); }
	 ruleCoverageDeclaration
{ after(grammarAccess.getCoverageDeclarationRule()); } 
	 EOF 
;

// Rule CoverageDeclaration
ruleCoverageDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCoverageDeclarationAccess().getGroup()); }
		(rule__CoverageDeclaration__Group__0)
		{ after(grammarAccess.getCoverageDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration
:
{ before(grammarAccess.getMethodDeclarationRule()); }
	 ruleMethodDeclaration
{ after(grammarAccess.getMethodDeclarationRule()); } 
	 EOF 
;

// Rule MethodDeclaration
ruleMethodDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getGroup()); }
		(rule__MethodDeclaration__Group__0)
		{ after(grammarAccess.getMethodDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodImplementation
entryRuleMethodImplementation
:
{ before(grammarAccess.getMethodImplementationRule()); }
	 ruleMethodImplementation
{ after(grammarAccess.getMethodImplementationRule()); } 
	 EOF 
;

// Rule MethodImplementation
ruleMethodImplementation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodImplementationAccess().getGroup()); }
		(rule__MethodImplementation__Group__0)
		{ after(grammarAccess.getMethodImplementationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventDeclaration
entryRuleEventDeclaration
:
{ before(grammarAccess.getEventDeclarationRule()); }
	 ruleEventDeclaration
{ after(grammarAccess.getEventDeclarationRule()); } 
	 EOF 
;

// Rule EventDeclaration
ruleEventDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getGroup()); }
		(rule__EventDeclaration__Group__0)
		{ after(grammarAccess.getEventDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventSpecification
entryRuleEventSpecification
:
{ before(grammarAccess.getEventSpecificationRule()); }
	 ruleEventSpecification
{ after(grammarAccess.getEventSpecificationRule()); } 
	 EOF 
;

// Rule EventSpecification
ruleEventSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventSpecificationAccess().getAlternatives()); }
		(rule__EventSpecification__Alternatives)
		{ after(grammarAccess.getEventSpecificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventReference
entryRuleEventReference
:
{ before(grammarAccess.getEventReferenceRule()); }
	 ruleEventReference
{ after(grammarAccess.getEventReferenceRule()); } 
	 EOF 
;

// Rule EventReference
ruleEventReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventReferenceAccess().getGroup()); }
		(rule__EventReference__Group__0)
		{ after(grammarAccess.getEventReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventPath
entryRuleEventPath
:
{ before(grammarAccess.getEventPathRule()); }
	 ruleEventPath
{ after(grammarAccess.getEventPathRule()); } 
	 EOF 
;

// Rule EventPath
ruleEventPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventPathAccess().getGroup()); }
		(rule__EventPath__Group__0)
		{ after(grammarAccess.getEventPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEventCondition
entryRuleEventCondition
:
{ before(grammarAccess.getEventConditionRule()); }
	 ruleEventCondition
{ after(grammarAccess.getEventConditionRule()); } 
	 EOF 
;

// Rule EventCondition
ruleEventCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEventConditionAccess().getAlternatives()); }
		(rule__EventCondition__Alternatives)
		{ after(grammarAccess.getEventConditionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRiseExpression
entryRuleRiseExpression
:
{ before(grammarAccess.getRiseExpressionRule()); }
	 ruleRiseExpression
{ after(grammarAccess.getRiseExpressionRule()); } 
	 EOF 
;

// Rule RiseExpression
ruleRiseExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRiseExpressionAccess().getGroup()); }
		(rule__RiseExpression__Group__0)
		{ after(grammarAccess.getRiseExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFallExpression
entryRuleFallExpression
:
{ before(grammarAccess.getFallExpressionRule()); }
	 ruleFallExpression
{ after(grammarAccess.getFallExpressionRule()); } 
	 EOF 
;

// Rule FallExpression
ruleFallExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFallExpressionAccess().getGroup()); }
		(rule__FallExpression__Group__0)
		{ after(grammarAccess.getFallExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElapsedExpression
entryRuleElapsedExpression
:
{ before(grammarAccess.getElapsedExpressionRule()); }
	 ruleElapsedExpression
{ after(grammarAccess.getElapsedExpressionRule()); } 
	 EOF 
;

// Rule ElapsedExpression
ruleElapsedExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElapsedExpressionAccess().getGroup()); }
		(rule__ElapsedExpression__Group__0)
		{ after(grammarAccess.getElapsedExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEveryExpression
entryRuleEveryExpression
:
{ before(grammarAccess.getEveryExpressionRule()); }
	 ruleEveryExpression
{ after(grammarAccess.getEveryExpressionRule()); } 
	 EOF 
;

// Rule EveryExpression
ruleEveryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEveryExpressionAccess().getGroup()); }
		(rule__EveryExpression__Group__0)
		{ after(grammarAccess.getEveryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration
:
{ before(grammarAccess.getFieldDeclarationRule()); }
	 ruleFieldDeclaration
{ after(grammarAccess.getFieldDeclarationRule()); } 
	 EOF 
;

// Rule FieldDeclaration
ruleFieldDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getAlternatives()); }
		(rule__FieldDeclaration__Alternatives)
		{ after(grammarAccess.getFieldDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
		(rule__VariableDeclaration__Group__0)
		{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSampleExpression
entryRuleSampleExpression
:
{ before(grammarAccess.getSampleExpressionRule()); }
	 ruleSampleExpression
{ after(grammarAccess.getSampleExpressionRule()); } 
	 EOF 
;

// Rule SampleExpression
ruleSampleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSampleExpressionAccess().getGroup()); }
		(rule__SampleExpression__Group__0)
		{ after(grammarAccess.getSampleExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorSpecification
entryRuleBehaviorSpecification
:
{ before(grammarAccess.getBehaviorSpecificationRule()); }
	 ruleBehaviorSpecification
{ after(grammarAccess.getBehaviorSpecificationRule()); } 
	 EOF 
;

// Rule BehaviorSpecification
ruleBehaviorSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorSpecificationAccess().getAlternatives()); }
		(rule__BehaviorSpecification__Alternatives)
		{ after(grammarAccess.getBehaviorSpecificationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnDirective
entryRuleOnDirective
:
{ before(grammarAccess.getOnDirectiveRule()); }
	 ruleOnDirective
{ after(grammarAccess.getOnDirectiveRule()); } 
	 EOF 
;

// Rule OnDirective
ruleOnDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnDirectiveAccess().getGroup()); }
		(rule__OnDirective__Group__0)
		{ after(grammarAccess.getOnDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOnDirectiveMember
entryRuleOnDirectiveMember
:
{ before(grammarAccess.getOnDirectiveMemberRule()); }
	 ruleOnDirectiveMember
{ after(grammarAccess.getOnDirectiveMemberRule()); } 
	 EOF 
;

// Rule OnDirectiveMember
ruleOnDirectiveMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOnDirectiveMemberAccess().getAlternatives()); }
		(rule__OnDirectiveMember__Alternatives)
		{ after(grammarAccess.getOnDirectiveMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCallDirective
entryRuleCallDirective
:
{ before(grammarAccess.getCallDirectiveRule()); }
	 ruleCallDirective
{ after(grammarAccess.getCallDirectiveRule()); } 
	 EOF 
;

// Rule CallDirective
ruleCallDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCallDirectiveAccess().getGroup()); }
		(rule__CallDirective__Group__0)
		{ after(grammarAccess.getCallDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmitDirective
entryRuleEmitDirective
:
{ before(grammarAccess.getEmitDirectiveRule()); }
	 ruleEmitDirective
{ after(grammarAccess.getEmitDirectiveRule()); } 
	 EOF 
;

// Rule EmitDirective
ruleEmitDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmitDirectiveAccess().getGroup()); }
		(rule__EmitDirective__Group__0)
		{ after(grammarAccess.getEmitDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWaitDirective
entryRuleWaitDirective
:
{ before(grammarAccess.getWaitDirectiveRule()); }
	 ruleWaitDirective
{ after(grammarAccess.getWaitDirectiveRule()); } 
	 EOF 
;

// Rule WaitDirective
ruleWaitDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWaitDirectiveAccess().getGroup()); }
		(rule__WaitDirective__Group__0)
		{ after(grammarAccess.getWaitDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoDirective
entryRuleDoDirective
:
{ before(grammarAccess.getDoDirectiveRule()); }
	 ruleDoDirective
{ after(grammarAccess.getDoDirectiveRule()); } 
	 EOF 
;

// Rule DoDirective
ruleDoDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoDirectiveAccess().getGroup()); }
		(rule__DoDirective__Group__0)
		{ after(grammarAccess.getDoDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoDirectiveMember
entryRuleDoDirectiveMember
:
{ before(grammarAccess.getDoDirectiveMemberRule()); }
	 ruleDoDirectiveMember
{ after(grammarAccess.getDoDirectiveMemberRule()); } 
	 EOF 
;

// Rule DoDirectiveMember
ruleDoDirectiveMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getGroup()); }
		(rule__DoDirectiveMember__Group__0)
		{ after(grammarAccess.getDoDirectiveMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComposition
entryRuleComposition
:
{ before(grammarAccess.getCompositionRule()); }
	 ruleComposition
{ after(grammarAccess.getCompositionRule()); } 
	 EOF 
;

// Rule Composition
ruleComposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionAccess().getGroup()); }
		(rule__Composition__Group__0)
		{ after(grammarAccess.getCompositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompositionOptions
entryRuleCompositionOptions
:
{ before(grammarAccess.getCompositionOptionsRule()); }
	 ruleCompositionOptions
{ after(grammarAccess.getCompositionOptionsRule()); } 
	 EOF 
;

// Rule CompositionOptions
ruleCompositionOptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompositionOptionsAccess().getAlternatives()); }
		(rule__CompositionOptions__Alternatives)
		{ after(grammarAccess.getCompositionOptionsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorInvocation
entryRuleBehaviorInvocation
:
{ before(grammarAccess.getBehaviorInvocationRule()); }
	 ruleBehaviorInvocation
{ after(grammarAccess.getBehaviorInvocationRule()); } 
	 EOF 
;

// Rule BehaviorInvocation
ruleBehaviorInvocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorInvocationAccess().getGroup()); }
		(rule__BehaviorInvocation__Group__0)
		{ after(grammarAccess.getBehaviorInvocationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterWithDeclaration
entryRuleParameterWithDeclaration
:
{ before(grammarAccess.getParameterWithDeclarationRule()); }
	 ruleParameterWithDeclaration
{ after(grammarAccess.getParameterWithDeclarationRule()); } 
	 EOF 
;

// Rule ParameterWithDeclaration
ruleParameterWithDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterWithDeclarationAccess().getGroup()); }
		(rule__ParameterWithDeclaration__Group__0)
		{ after(grammarAccess.getParameterWithDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorWithDeclaration
entryRuleBehaviorWithDeclaration
:
{ before(grammarAccess.getBehaviorWithDeclarationRule()); }
	 ruleBehaviorWithDeclaration
{ after(grammarAccess.getBehaviorWithDeclarationRule()); } 
	 EOF 
;

// Rule BehaviorWithDeclaration
ruleBehaviorWithDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorWithDeclarationAccess().getGroup()); }
		(rule__BehaviorWithDeclaration__Group__0)
		{ after(grammarAccess.getBehaviorWithDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBehaviorWithMember
entryRuleBehaviorWithMember
:
{ before(grammarAccess.getBehaviorWithMemberRule()); }
	 ruleBehaviorWithMember
{ after(grammarAccess.getBehaviorWithMemberRule()); } 
	 EOF 
;

// Rule BehaviorWithMember
ruleBehaviorWithMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBehaviorWithMemberAccess().getAlternatives()); }
		(rule__BehaviorWithMember__Alternatives)
		{ after(grammarAccess.getBehaviorWithMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintDeclaration
entryRuleConstraintDeclaration
:
{ before(grammarAccess.getConstraintDeclarationRule()); }
	 ruleConstraintDeclaration
{ after(grammarAccess.getConstraintDeclarationRule()); } 
	 EOF 
;

// Rule ConstraintDeclaration
ruleConstraintDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintDeclarationAccess().getAlternatives()); }
		(rule__ConstraintDeclaration__Alternatives)
		{ after(grammarAccess.getConstraintDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeepConstraintDeclaration
entryRuleKeepConstraintDeclaration
:
{ before(grammarAccess.getKeepConstraintDeclarationRule()); }
	 ruleKeepConstraintDeclaration
{ after(grammarAccess.getKeepConstraintDeclarationRule()); } 
	 EOF 
;

// Rule KeepConstraintDeclaration
ruleKeepConstraintDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeepConstraintDeclarationAccess().getGroup()); }
		(rule__KeepConstraintDeclaration__Group__0)
		{ after(grammarAccess.getKeepConstraintDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstraintQualifier
entryRuleConstraintQualifier
:
{ before(grammarAccess.getConstraintQualifierRule()); }
	 ruleConstraintQualifier
{ after(grammarAccess.getConstraintQualifierRule()); } 
	 EOF 
;

// Rule ConstraintQualifier
ruleConstraintQualifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstraintQualifierAccess().getAlternatives()); }
		(rule__ConstraintQualifier__Alternatives)
		{ after(grammarAccess.getConstraintQualifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemoveDefaultDeclaration
entryRuleRemoveDefaultDeclaration
:
{ before(grammarAccess.getRemoveDefaultDeclarationRule()); }
	 ruleRemoveDefaultDeclaration
{ after(grammarAccess.getRemoveDefaultDeclarationRule()); } 
	 EOF 
;

// Rule RemoveDefaultDeclaration
ruleRemoveDefaultDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveDefaultDeclarationAccess().getGroup()); }
		(rule__RemoveDefaultDeclaration__Group__0)
		{ after(grammarAccess.getRemoveDefaultDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUntilDirective
entryRuleUntilDirective
:
{ before(grammarAccess.getUntilDirectiveRule()); }
	 ruleUntilDirective
{ after(grammarAccess.getUntilDirectiveRule()); } 
	 EOF 
;

// Rule UntilDirective
ruleUntilDirective 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUntilDirectiveAccess().getGroup()); }
		(rule__UntilDirective__Group__0)
		{ after(grammarAccess.getUntilDirectiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentListSpecification
entryRuleArgumentListSpecification
:
{ before(grammarAccess.getArgumentListSpecificationRule()); }
	 ruleArgumentListSpecification
{ after(grammarAccess.getArgumentListSpecificationRule()); } 
	 EOF 
;

// Rule ArgumentListSpecification
ruleArgumentListSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentListSpecificationAccess().getGroup()); }
		(rule__ArgumentListSpecification__Group__0)
		{ after(grammarAccess.getArgumentListSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentSpecification
entryRuleArgumentSpecification
:
{ before(grammarAccess.getArgumentSpecificationRule()); }
	 ruleArgumentSpecification
{ after(grammarAccess.getArgumentSpecificationRule()); } 
	 EOF 
;

// Rule ArgumentSpecification
ruleArgumentSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentSpecificationAccess().getGroup()); }
		(rule__ArgumentSpecification__Group__0)
		{ after(grammarAccess.getArgumentSpecificationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentList
entryRuleArgumentList
:
{ before(grammarAccess.getArgumentListRule()); }
	 ruleArgumentList
{ after(grammarAccess.getArgumentListRule()); } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentListAccess().getAlternatives()); }
		(rule__ArgumentList__Alternatives)
		{ after(grammarAccess.getArgumentListAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamedArgument
entryRuleNamedArgument
:
{ before(grammarAccess.getNamedArgumentRule()); }
	 ruleNamedArgument
{ after(grammarAccess.getNamedArgumentRule()); } 
	 EOF 
;

// Rule NamedArgument
ruleNamedArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getGroup()); }
		(rule__NamedArgument__Group__0)
		{ after(grammarAccess.getNamedArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixExp
entryRulePostfixExp
:
{ before(grammarAccess.getPostfixExpRule()); }
	 rulePostfixExp
{ after(grammarAccess.getPostfixExpRule()); } 
	 EOF 
;

// Rule PostfixExp
rulePostfixExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixExpAccess().getGroup()); }
		(rule__PostfixExp__Group__0)
		{ after(grammarAccess.getPostfixExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixExpTail
entryRulePostfixExpTail
:
{ before(grammarAccess.getPostfixExpTailRule()); }
	 rulePostfixExpTail
{ after(grammarAccess.getPostfixExpTailRule()); } 
	 EOF 
;

// Rule PostfixExpTail
rulePostfixExpTail 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixExpTailAccess().getAlternatives()); }
		(rule__PostfixExpTail__Alternatives)
		{ after(grammarAccess.getPostfixExpTailAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCastExpTail
entryRuleCastExpTail
:
{ before(grammarAccess.getCastExpTailRule()); }
	 ruleCastExpTail
{ after(grammarAccess.getCastExpTailRule()); } 
	 EOF 
;

// Rule CastExpTail
ruleCastExpTail 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastExpTailAccess().getGroup()); }
		(rule__CastExpTail__Group__0)
		{ after(grammarAccess.getCastExpTailAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeTestTail
entryRuleTypeTestTail
:
{ before(grammarAccess.getTypeTestTailRule()); }
	 ruleTypeTestTail
{ after(grammarAccess.getTypeTestTailRule()); } 
	 EOF 
;

// Rule TypeTestTail
ruleTypeTestTail 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeTestTailAccess().getGroup()); }
		(rule__TypeTestTail__Group__0)
		{ after(grammarAccess.getTypeTestTailAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldAccessTail
entryRuleFieldAccessTail
:
{ before(grammarAccess.getFieldAccessTailRule()); }
	 ruleFieldAccessTail
{ after(grammarAccess.getFieldAccessTailRule()); } 
	 EOF 
;

// Rule FieldAccessTail
ruleFieldAccessTail 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccessTailAccess().getGroup()); }
		(rule__FieldAccessTail__Group__0)
		{ after(grammarAccess.getFieldAccessTailAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodInvocation
entryRuleMethodInvocation
:
{ before(grammarAccess.getMethodInvocationRule()); }
	 ruleMethodInvocation
{ after(grammarAccess.getMethodInvocationRule()); } 
	 EOF 
;

// Rule MethodInvocation
ruleMethodInvocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getGroup()); }
		(rule__MethodInvocation__Group__0)
		{ after(grammarAccess.getMethodInvocationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryExp
entryRulePrimaryExp
:
{ before(grammarAccess.getPrimaryExpRule()); }
	 rulePrimaryExp
{ after(grammarAccess.getPrimaryExpRule()); } 
	 EOF 
;

// Rule PrimaryExp
rulePrimaryExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryExpAccess().getAlternatives()); }
		(rule__PrimaryExp__Alternatives)
		{ after(grammarAccess.getPrimaryExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueExp
entryRuleValueExp
:
{ before(grammarAccess.getValueExpRule()); }
	 ruleValueExp
{ after(grammarAccess.getValueExpRule()); } 
	 EOF 
;

// Rule ValueExp
ruleValueExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueExpAccess().getAlternatives()); }
		(rule__ValueExp__Alternatives)
		{ after(grammarAccess.getValueExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePhysicalType
entryRulePhysicalType
:
{ before(grammarAccess.getPhysicalTypeRule()); }
	 rulePhysicalType
{ after(grammarAccess.getPhysicalTypeRule()); } 
	 EOF 
;

// Rule PhysicalType
rulePhysicalType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getGroup()); }
		(rule__PhysicalType__Group__0)
		{ after(grammarAccess.getPhysicalTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListConstructor
entryRuleListConstructor
:
{ before(grammarAccess.getListConstructorRule()); }
	 ruleListConstructor
{ after(grammarAccess.getListConstructorRule()); } 
	 EOF 
;

// Rule ListConstructor
ruleListConstructor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListConstructorAccess().getGroup()); }
		(rule__ListConstructor__Group__0)
		{ after(grammarAccess.getListConstructorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeConstructor
entryRuleRangeConstructor
:
{ before(grammarAccess.getRangeConstructorRule()); }
	 ruleRangeConstructor
{ after(grammarAccess.getRangeConstructorRule()); } 
	 EOF 
;

// Rule RangeConstructor
ruleRangeConstructor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeConstructorAccess().getAlternatives()); }
		(rule__RangeConstructor__Alternatives)
		{ after(grammarAccess.getRangeConstructorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getRelationParserRuleCall()); }
		ruleRelation
		{ after(grammarAccess.getExpressionAccess().getRelationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalOp
entryRuleRelationalOp
:
{ before(grammarAccess.getRelationalOpRule()); }
	 ruleRelationalOp
{ after(grammarAccess.getRelationalOpRule()); } 
	 EOF 
;

// Rule RelationalOp
ruleRelationalOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalOpAccess().getAlternatives()); }
		(rule__RelationalOp__Alternatives)
		{ after(grammarAccess.getRelationalOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSum
entryRuleSum
:
{ before(grammarAccess.getSumRule()); }
	 ruleSum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule Sum
ruleSum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumAccess().getGroup()); }
		(rule__Sum__Group__0)
		{ after(grammarAccess.getSumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveOp
entryRuleAdditiveOp
:
{ before(grammarAccess.getAdditiveOpRule()); }
	 ruleAdditiveOp
{ after(grammarAccess.getAdditiveOpRule()); } 
	 EOF 
;

// Rule AdditiveOp
ruleAdditiveOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveOpAccess().getAlternatives()); }
		(rule__AdditiveOp__Alternatives)
		{ after(grammarAccess.getAdditiveOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeOp
entryRuleMultiplicativeOp
:
{ before(grammarAccess.getMultiplicativeOpRule()); }
	 ruleMultiplicativeOp
{ after(grammarAccess.getMultiplicativeOpRule()); } 
	 EOF 
;

// Rule MultiplicativeOp
ruleMultiplicativeOp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeOpAccess().getAlternatives()); }
		(rule__MultiplicativeOp__Alternatives)
		{ after(grammarAccess.getMultiplicativeOpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportReference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportReferenceAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportReferenceAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportReferenceAccess().getStructuredIDParserRuleCall_1()); }
		ruleStructuredID
		{ after(grammarAccess.getImportReferenceAccess().getStructuredIDParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OscDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOscDeclarationAccess().getScenarioDeclarationParserRuleCall_0()); }
		ruleScenarioDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getScenarioDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getStructDeclarationParserRuleCall_1()); }
		ruleStructDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getStructDeclarationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getActorDeclarationParserRuleCall_2()); }
		ruleActorDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getActorDeclarationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getActionDeclarationParserRuleCall_3()); }
		ruleActionDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getActionDeclarationParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getModifierDeclarationParserRuleCall_4()); }
		ruleModifierDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getModifierDeclarationParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getEnumDeclarationParserRuleCall_5()); }
		ruleEnumDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getEnumDeclarationParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getGlobalParameterDeclarationParserRuleCall_6()); }
		ruleGlobalParameterDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getGlobalParameterDeclarationParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getTypeExtensionParserRuleCall_7()); }
		ruleTypeExtension
		{ after(grammarAccess.getOscDeclarationAccess().getTypeExtensionParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getUnitDeclarationParserRuleCall_8()); }
		ruleUnitDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getUnitDeclarationParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getOscDeclarationAccess().getPhysicalTypeDeclarationParserRuleCall_9()); }
		rulePhysicalTypeDeclaration
		{ after(grammarAccess.getOscDeclarationAccess().getPhysicalTypeDeclarationParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitFactor__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIUnitFactorAccess().getFLOATTerminalRuleCall_2_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getSIUnitFactorAccess().getFLOATTerminalRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSIUnitFactorAccess().getINTEGERTerminalRuleCall_2_1()); }
		RULE_INTEGER
		{ after(grammarAccess.getSIUnitFactorAccess().getINTEGERTerminalRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitOffset__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIUnitOffsetAccess().getFLOATTerminalRuleCall_2_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getSIUnitOffsetAccess().getFLOATTerminalRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSIUnitOffsetAccess().getINTEGERTerminalRuleCall_2_1()); }
		RULE_INTEGER
		{ after(grammarAccess.getSIUnitOffsetAccess().getINTEGERTerminalRuleCall_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getKgKeyword_0()); }
		Kg
		{ after(grammarAccess.getSIBaseUnitNameAccess().getKgKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getMKeyword_1()); }
		M
		{ after(grammarAccess.getSIBaseUnitNameAccess().getMKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getSKeyword_2()); }
		S
		{ after(grammarAccess.getSIBaseUnitNameAccess().getSKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getAKeyword_3()); }
		A
		{ after(grammarAccess.getSIBaseUnitNameAccess().getAKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getKKeyword_4()); }
		K
		{ after(grammarAccess.getSIBaseUnitNameAccess().getKKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getMolKeyword_5()); }
		Mol
		{ after(grammarAccess.getSIBaseUnitNameAccess().getMolKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getCdKeyword_6()); }
		Cd
		{ after(grammarAccess.getSIBaseUnitNameAccess().getCdKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getRadKeyword_7()); }
		Rad
		{ after(grammarAccess.getSIBaseUnitNameAccess().getRadKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getSIBaseUnitNameAccess().getKphKeyword_8()); }
		Kph
		{ after(grammarAccess.getSIBaseUnitNameAccess().getKphKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeExtension__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeExtensionAccess().getEnumTypeExtensionParserRuleCall_0()); }
		ruleEnumTypeExtension
		{ after(grammarAccess.getTypeExtensionAccess().getEnumTypeExtensionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeExtensionAccess().getStructuredTypeExtensionParserRuleCall_1()); }
		ruleStructuredTypeExtension
		{ after(grammarAccess.getTypeExtensionAccess().getStructuredTypeExtensionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionMemberDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionMemberDeclarationAccess().getMemberDeclarationParserRuleCall_0()); }
		ruleMemberDeclaration
		{ after(grammarAccess.getExtensionMemberDeclarationAccess().getMemberDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtensionMemberDeclarationAccess().getBehaviorSpecificationParserRuleCall_1()); }
		ruleBehaviorSpecification
		{ after(grammarAccess.getExtensionMemberDeclarationAccess().getBehaviorSpecificationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclaratorAccess().getNonAggregateTypeDeclaratorParserRuleCall_0()); }
		ruleNonAggregateTypeDeclarator
		{ after(grammarAccess.getTypeDeclaratorAccess().getNonAggregateTypeDeclaratorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclaratorAccess().getListTypeDeclaratorParserRuleCall_1()); }
		ruleListTypeDeclarator
		{ after(grammarAccess.getTypeDeclaratorAccess().getListTypeDeclaratorParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NonAggregateTypeDeclarator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNonAggregateTypeDeclaratorAccess().getPrimitiveTypeParserRuleCall_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getNonAggregateTypeDeclaratorAccess().getPrimitiveTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNonAggregateTypeDeclaratorAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getNonAggregateTypeDeclaratorAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getIntKeyword_0()); }
		Int
		{ after(grammarAccess.getPrimitiveTypeAccess().getIntKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getUintKeyword_1()); }
		Uint
		{ after(grammarAccess.getPrimitiveTypeAccess().getUintKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getFloatKeyword_2()); }
		Float
		{ after(grammarAccess.getPrimitiveTypeAccess().getFloatKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getBoolKeyword_3()); }
		Bool
		{ after(grammarAccess.getPrimitiveTypeAccess().getBoolKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getStringKeyword_4()); }
		String
		{ after(grammarAccess.getPrimitiveTypeAccess().getStringKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Alternatives_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierDeclarationAccess().getScenarioMemberDeclAssignment_6_0()); }
		(rule__ModifierDeclaration__ScenarioMemberDeclAssignment_6_0)
		{ after(grammarAccess.getModifierDeclarationAccess().getScenarioMemberDeclAssignment_6_0()); }
	)
	|
	(
		{ before(grammarAccess.getModifierDeclarationAccess().getBehaviorSpecificationAssignment_6_1()); }
		(rule__ModifierDeclaration__BehaviorSpecificationAssignment_6_1)
		{ after(grammarAccess.getModifierDeclarationAccess().getBehaviorSpecificationAssignment_6_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Alternatives_2_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDeclarationAccess().getEnumReferenceAssignment_2_2_3_0()); }
		(rule__ActionDeclaration__EnumReferenceAssignment_2_2_3_0)
		{ after(grammarAccess.getActionDeclarationAccess().getEnumReferenceAssignment_2_2_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionDeclarationAccess().getBOOLTerminalRuleCall_2_2_3_1()); }
		RULE_BOOL
		{ after(grammarAccess.getActionDeclarationAccess().getBOOLTerminalRuleCall_2_2_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Alternatives_2_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorDeclarationAccess().getEnumReferenceAssignment_2_2_3_0()); }
		(rule__ActorDeclaration__EnumReferenceAssignment_2_2_3_0)
		{ after(grammarAccess.getActorDeclarationAccess().getEnumReferenceAssignment_2_2_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getActorDeclarationAccess().getBOOLTerminalRuleCall_2_2_3_1()); }
		RULE_BOOL
		{ after(grammarAccess.getActorDeclarationAccess().getBOOLTerminalRuleCall_2_2_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Alternatives_2_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getEnumReferenceAssignment_2_2_3_0()); }
		(rule__StructDeclaration__EnumReferenceAssignment_2_2_3_0)
		{ after(grammarAccess.getStructDeclarationAccess().getEnumReferenceAssignment_2_2_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructDeclarationAccess().getBOOLTerminalRuleCall_2_2_3_1()); }
		RULE_BOOL
		{ after(grammarAccess.getStructDeclarationAccess().getBOOLTerminalRuleCall_2_2_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Alternatives_2_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getEnumReferenceAssignment_2_2_3_0()); }
		(rule__ScenarioDeclaration__EnumReferenceAssignment_2_2_3_0)
		{ after(grammarAccess.getScenarioDeclarationAccess().getEnumReferenceAssignment_2_2_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getBOOLTerminalRuleCall_2_2_3_1()); }
		RULE_BOOL
		{ after(grammarAccess.getScenarioDeclarationAccess().getBOOLTerminalRuleCall_2_2_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getScenarioMemberDeclAssignment_5_0()); }
		(rule__ScenarioDeclaration__ScenarioMemberDeclAssignment_5_0)
		{ after(grammarAccess.getScenarioDeclarationAccess().getScenarioMemberDeclAssignment_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getBehaviorSpecificationAssignment_5_1()); }
		(rule__ScenarioDeclaration__BehaviorSpecificationAssignment_5_1)
		{ after(grammarAccess.getScenarioDeclarationAccess().getBehaviorSpecificationAssignment_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MemberDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberDeclarationAccess().getFieldDeclarationParserRuleCall_0()); }
		ruleFieldDeclaration
		{ after(grammarAccess.getMemberDeclarationAccess().getFieldDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMemberDeclarationAccess().getEventDeclarationParserRuleCall_1()); }
		ruleEventDeclaration
		{ after(grammarAccess.getMemberDeclarationAccess().getEventDeclarationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMemberDeclarationAccess().getMethodDeclarationParserRuleCall_2()); }
		ruleMethodDeclaration
		{ after(grammarAccess.getMemberDeclarationAccess().getMethodDeclarationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMemberDeclarationAccess().getCoverageDeclarationParserRuleCall_3()); }
		ruleCoverageDeclaration
		{ after(grammarAccess.getMemberDeclarationAccess().getCoverageDeclarationParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getMemberDeclarationAccess().getConstraintDeclarationParserRuleCall_4()); }
		ruleConstraintDeclaration
		{ after(grammarAccess.getMemberDeclarationAccess().getConstraintDeclarationParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoverageDeclarationAccess().getCoverKeyword_0_0()); }
		Cover
		{ after(grammarAccess.getCoverageDeclarationAccess().getCoverKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCoverageDeclarationAccess().getRecordKeyword_0_1()); }
		Record
		{ after(grammarAccess.getCoverageDeclarationAccess().getRecordKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodImplementationAccess().getGroup_2_0()); }
		(rule__MethodImplementation__Group_2_0__0)
		{ after(grammarAccess.getMethodImplementationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodImplementationAccess().getUndefinedKeyword_2_1()); }
		Undefined
		{ after(grammarAccess.getMethodImplementationAccess().getUndefinedKeyword_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getMethodImplementationAccess().getGroup_2_2()); }
		(rule__MethodImplementation__Group_2_2__0)
		{ after(grammarAccess.getMethodImplementationAccess().getGroup_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventSpecificationAccess().getGroup_0()); }
		(rule__EventSpecification__Group_0__0)
		{ after(grammarAccess.getEventSpecificationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventSpecificationAccess().getEventConditionAssignment_1()); }
		(rule__EventSpecification__EventConditionAssignment_1)
		{ after(grammarAccess.getEventSpecificationAccess().getEventConditionAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventCondition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventConditionAccess().getExpressionParserRuleCall_0()); }
		ruleExpression
		{ after(grammarAccess.getEventConditionAccess().getExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEventConditionAccess().getConditionParserRuleCall_1()); }
		ruleCondition
		{ after(grammarAccess.getEventConditionAccess().getConditionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getEventConditionAccess().getRiseExpressionParserRuleCall_2()); }
		ruleRiseExpression
		{ after(grammarAccess.getEventConditionAccess().getRiseExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getEventConditionAccess().getFallExpressionParserRuleCall_3()); }
		ruleFallExpression
		{ after(grammarAccess.getEventConditionAccess().getFallExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getEventConditionAccess().getElapsedExpressionParserRuleCall_4()); }
		ruleElapsedExpression
		{ after(grammarAccess.getEventConditionAccess().getElapsedExpressionParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getEventConditionAccess().getEveryExpressionParserRuleCall_5()); }
		ruleEveryExpression
		{ after(grammarAccess.getEventConditionAccess().getEveryExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getParameterDeclarationParserRuleCall_0()); }
		ruleParameterDeclaration
		{ after(grammarAccess.getFieldDeclarationAccess().getParameterDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getVariableDeclarationParserRuleCall_1()); }
		ruleVariableDeclaration
		{ after(grammarAccess.getFieldDeclarationAccess().getVariableDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Alternatives_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getDefaultValueAssignment_5_1_0()); }
		(rule__VariableDeclaration__DefaultValueAssignment_5_1_0)
		{ after(grammarAccess.getVariableDeclarationAccess().getDefaultValueAssignment_5_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getSampleExpressionAssignment_5_1_1()); }
		(rule__VariableDeclaration__SampleExpressionAssignment_5_1_1)
		{ after(grammarAccess.getVariableDeclarationAccess().getSampleExpressionAssignment_5_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorSpecification__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorSpecificationAccess().getOnDirectiveParserRuleCall_0()); }
		ruleOnDirective
		{ after(grammarAccess.getBehaviorSpecificationAccess().getOnDirectiveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorSpecificationAccess().getDoDirectiveParserRuleCall_1()); }
		ruleDoDirective
		{ after(grammarAccess.getBehaviorSpecificationAccess().getDoDirectiveParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirectiveMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnDirectiveMemberAccess().getCallDirectiveParserRuleCall_0()); }
		ruleCallDirective
		{ after(grammarAccess.getOnDirectiveMemberAccess().getCallDirectiveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOnDirectiveMemberAccess().getEmitDirectiveParserRuleCall_1()); }
		ruleEmitDirective
		{ after(grammarAccess.getOnDirectiveMemberAccess().getEmitDirectiveParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getCompositionAssignment_1_0()); }
		(rule__DoDirectiveMember__CompositionAssignment_1_0)
		{ after(grammarAccess.getDoDirectiveMemberAccess().getCompositionAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getEmitDirectiveAssignment_1_1()); }
		(rule__DoDirectiveMember__EmitDirectiveAssignment_1_1)
		{ after(grammarAccess.getDoDirectiveMemberAccess().getEmitDirectiveAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getCallDirectiveAssignment_1_2()); }
		(rule__DoDirectiveMember__CallDirectiveAssignment_1_2)
		{ after(grammarAccess.getDoDirectiveMemberAccess().getCallDirectiveAssignment_1_2()); }
	)
	|
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getWaitDirectiveAssignment_1_3()); }
		(rule__DoDirectiveMember__WaitDirectiveAssignment_1_3)
		{ after(grammarAccess.getDoDirectiveMemberAccess().getWaitDirectiveAssignment_1_3()); }
	)
	|
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getBehaviorInvocationAssignment_1_4()); }
		(rule__DoDirectiveMember__BehaviorInvocationAssignment_1_4)
		{ after(grammarAccess.getDoDirectiveMemberAccess().getBehaviorInvocationAssignment_1_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompositionOptions__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionOptionsAccess().getSerialKeyword_0()); }
		Serial
		{ after(grammarAccess.getCompositionOptionsAccess().getSerialKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionOptionsAccess().getOne_ofKeyword_1()); }
		One_of
		{ after(grammarAccess.getCompositionOptionsAccess().getOne_ofKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompositionOptionsAccess().getParallelKeyword_2()); }
		Parallel
		{ after(grammarAccess.getCompositionOptionsAccess().getParallelKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithMember__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorWithMemberAccess().getConstraintDeclarationParserRuleCall_0()); }
		ruleConstraintDeclaration
		{ after(grammarAccess.getBehaviorWithMemberAccess().getConstraintDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorWithMemberAccess().getBehaviorInvocationParserRuleCall_1()); }
		ruleBehaviorInvocation
		{ after(grammarAccess.getBehaviorWithMemberAccess().getBehaviorInvocationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBehaviorWithMemberAccess().getUntilDirectiveParserRuleCall_2()); }
		ruleUntilDirective
		{ after(grammarAccess.getBehaviorWithMemberAccess().getUntilDirectiveParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintDeclarationAccess().getKeepConstraintDeclarationParserRuleCall_0()); }
		ruleKeepConstraintDeclaration
		{ after(grammarAccess.getConstraintDeclarationAccess().getKeepConstraintDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintDeclarationAccess().getRemoveDefaultDeclarationParserRuleCall_1()); }
		ruleRemoveDefaultDeclaration
		{ after(grammarAccess.getConstraintDeclarationAccess().getRemoveDefaultDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintQualifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstraintQualifierAccess().getDefaultKeyword_0()); }
		Default
		{ after(grammarAccess.getConstraintQualifierAccess().getDefaultKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstraintQualifierAccess().getHardKeyword_1()); }
		Hard
		{ after(grammarAccess.getConstraintQualifierAccess().getHardKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getGroup_0()); }
		(rule__ArgumentList__Group_0__0)
		{ after(grammarAccess.getArgumentListAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgumentListAccess().getGroup_1()); }
		(rule__ArgumentList__Group_1__0)
		{ after(grammarAccess.getArgumentListAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getArgumentNameAssignment_0_0()); }
		(rule__NamedArgument__ArgumentNameAssignment_0_0)
		{ after(grammarAccess.getNamedArgumentAccess().getArgumentNameAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamedArgumentAccess().getOffsetKeyword_0_1()); }
		Offset
		{ after(grammarAccess.getNamedArgumentAccess().getOffsetKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpTail__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpTailAccess().getCastExpTailParserRuleCall_0()); }
		ruleCastExpTail
		{ after(grammarAccess.getPostfixExpTailAccess().getCastExpTailParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpTailAccess().getTypeTestTailParserRuleCall_1()); }
		ruleTypeTestTail
		{ after(grammarAccess.getPostfixExpTailAccess().getTypeTestTailParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpTailAccess().getFieldAccessTailParserRuleCall_2()); }
		ruleFieldAccessTail
		{ after(grammarAccess.getPostfixExpTailAccess().getFieldAccessTailParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryExpAccess().getItKeyword_0()); }
		It
		{ after(grammarAccess.getPrimaryExpAccess().getItKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpAccess().getValueExpParserRuleCall_1()); }
		ruleValueExp
		{ after(grammarAccess.getPrimaryExpAccess().getValueExpParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpAccess().getListConstructorParserRuleCall_2()); }
		ruleListConstructor
		{ after(grammarAccess.getPrimaryExpAccess().getListConstructorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryExpAccess().getRangeConstructorParserRuleCall_3()); }
		ruleRangeConstructor
		{ after(grammarAccess.getPrimaryExpAccess().getRangeConstructorParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueExpAccess().getBOOLTerminalRuleCall_0()); }
		RULE_BOOL
		{ after(grammarAccess.getValueExpAccess().getBOOLTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueExpAccess().getPhysicalTypeParserRuleCall_1()); }
		rulePhysicalType
		{ after(grammarAccess.getValueExpAccess().getPhysicalTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueExpAccess().getSTRINGTerminalRuleCall_2()); }
		RULE_STRING
		{ after(grammarAccess.getValueExpAccess().getSTRINGTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueExpAccess().getEnumValueReferenceParserRuleCall_3()); }
		ruleEnumValueReference
		{ after(grammarAccess.getValueExpAccess().getEnumValueReferenceParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getNumberIntegerAssignment_0_0()); }
		(rule__PhysicalType__NumberIntegerAssignment_0_0)
		{ after(grammarAccess.getPhysicalTypeAccess().getNumberIntegerAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getNumberFloatAssignment_0_1()); }
		(rule__PhysicalType__NumberFloatAssignment_0_1)
		{ after(grammarAccess.getPhysicalTypeAccess().getNumberFloatAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getUnitBaseNameAssignment_1_0()); }
		(rule__PhysicalType__UnitBaseNameAssignment_1_0)
		{ after(grammarAccess.getPhysicalTypeAccess().getUnitBaseNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getUnitNameAssignment_1_1()); }
		(rule__PhysicalType__UnitNameAssignment_1_1)
		{ after(grammarAccess.getPhysicalTypeAccess().getUnitNameAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeConstructorAccess().getGroup_0()); }
		(rule__RangeConstructor__Group_0__0)
		{ after(grammarAccess.getRangeConstructorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRangeConstructorAccess().getGroup_1()); }
		(rule__RangeConstructor__Group_1__0)
		{ after(grammarAccess.getRangeConstructorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOpAccess().getEqualsSignEqualsSignKeyword_0()); }
		EqualsSignEqualsSign
		{ after(grammarAccess.getRelationalOpAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getExclamationMarkEqualsSignKeyword_1()); }
		ExclamationMarkEqualsSign
		{ after(grammarAccess.getRelationalOpAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_2()); }
		LessThanSign
		{ after(grammarAccess.getRelationalOpAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_3()); }
		LessThanSignEqualsSign
		{ after(grammarAccess.getRelationalOpAccess().getLessThanSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_4()); }
		GreaterThanSign
		{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_5()); }
		GreaterThanSignEqualsSign
		{ after(grammarAccess.getRelationalOpAccess().getGreaterThanSignEqualsSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getInKeyword_6()); }
		In
		{ after(grammarAccess.getRelationalOpAccess().getInKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getAndKeyword_7()); }
		And
		{ after(grammarAccess.getRelationalOpAccess().getAndKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getOrKeyword_8()); }
		Or
		{ after(grammarAccess.getRelationalOpAccess().getOrKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOpAccess().getEqualsSignGreaterThanSignKeyword_9()); }
		EqualsSignGreaterThanSign
		{ after(grammarAccess.getRelationalOpAccess().getEqualsSignGreaterThanSignKeyword_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveOpAccess().getPlusSignKeyword_0()); }
		PlusSign
		{ after(grammarAccess.getAdditiveOpAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveOpAccess().getHyphenMinusKeyword_1()); }
		HyphenMinus
		{ after(grammarAccess.getAdditiveOpAccess().getHyphenMinusKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeOpAccess().getAsteriskKeyword_0()); }
		Asterisk
		{ after(grammarAccess.getMultiplicativeOpAccess().getAsteriskKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOpAccess().getSolidusKeyword_1()); }
		Solidus
		{ after(grammarAccess.getMultiplicativeOpAccess().getSolidusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeOpAccess().getPercentSignKeyword_2()); }
		PercentSign
		{ after(grammarAccess.getMultiplicativeOpAccess().getPercentSignKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OscFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OscFile__Group__0__Impl
	rule__OscFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OscFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOscFileAccess().getPreludeStatementsAssignment_0()); }
	(rule__OscFile__PreludeStatementsAssignment_0)*
	{ after(grammarAccess.getOscFileAccess().getPreludeStatementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OscFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OscFile__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OscFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOscFileAccess().getOscDeclarationsAssignment_1()); }
	(rule__OscFile__OscDeclarationsAssignment_1)*
	{ after(grammarAccess.getOscFileAccess().getOscDeclarationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__0__Impl
	rule__ImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }
	Import
	{ after(grammarAccess.getImportStatementAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getImportReferenceAssignment_1()); }
	(rule__ImportStatement__ImportReferenceAssignment_1)
	{ after(grammarAccess.getImportStatementAccess().getImportReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredID__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredID__Group__0__Impl
	rule__StructuredID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredID__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredIDAccess().getIdentifierAssignment_0()); }
	(rule__StructuredID__IdentifierAssignment_0)
	{ after(grammarAccess.getStructuredIDAccess().getIdentifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredID__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredID__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredIDAccess().getGroup_1()); }
	(rule__StructuredID__Group_1__0)*
	{ after(grammarAccess.getStructuredIDAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredID__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredID__Group_1__0__Impl
	rule__StructuredID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredID__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredIDAccess().getFullStopKeyword_1_0()); }
	FullStop
	{ after(grammarAccess.getStructuredIDAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredID__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredID__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredIDAccess().getIdentifierAssignment_1_1()); }
	(rule__StructuredID__IdentifierAssignment_1_1)
	{ after(grammarAccess.getStructuredIDAccess().getIdentifierAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalTypeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalTypeDeclaration__Group__0__Impl
	rule__PhysicalTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalTypeDeclarationAccess().getTypeKeyword_0()); }
	Type
	{ after(grammarAccess.getPhysicalTypeDeclarationAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalTypeDeclaration__Group__1__Impl
	rule__PhysicalTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalTypeDeclarationAccess().getPhysicalTypeNameAssignment_1()); }
	(rule__PhysicalTypeDeclaration__PhysicalTypeNameAssignment_1)
	{ after(grammarAccess.getPhysicalTypeDeclarationAccess().getPhysicalTypeNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalTypeDeclaration__Group__2__Impl
	rule__PhysicalTypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalTypeDeclarationAccess().getIsKeyword_2()); }
	Is
	{ after(grammarAccess.getPhysicalTypeDeclarationAccess().getIsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalTypeDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalTypeDeclarationAccess().getBaseUnitSpecifierAssignment_3()); }
	(rule__PhysicalTypeDeclaration__BaseUnitSpecifierAssignment_3)
	{ after(grammarAccess.getPhysicalTypeDeclarationAccess().getBaseUnitSpecifierAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnitDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDeclaration__Group__0__Impl
	rule__UnitDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDeclarationAccess().getUnitKeyword_0()); }
	Unit
	{ after(grammarAccess.getUnitDeclarationAccess().getUnitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDeclaration__Group__1__Impl
	rule__UnitDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDeclarationAccess().getUnitNameAssignment_1()); }
	(rule__UnitDeclaration__UnitNameAssignment_1)
	{ after(grammarAccess.getUnitDeclarationAccess().getUnitNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDeclaration__Group__2__Impl
	rule__UnitDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDeclarationAccess().getOfKeyword_2()); }
	Of
	{ after(grammarAccess.getUnitDeclarationAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDeclaration__Group__3__Impl
	rule__UnitDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDeclarationAccess().getPhysicalTypeNameAssignment_3()); }
	(rule__UnitDeclaration__PhysicalTypeNameAssignment_3)
	{ after(grammarAccess.getUnitDeclarationAccess().getPhysicalTypeNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDeclaration__Group__4__Impl
	rule__UnitDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDeclarationAccess().getIsKeyword_4()); }
	Is
	{ after(grammarAccess.getUnitDeclarationAccess().getIsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnitDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnitDeclarationAccess().getUnitSpecifierAssignment_5()); }
	(rule__UnitDeclaration__UnitSpecifierAssignment_5)
	{ after(grammarAccess.getUnitDeclarationAccess().getUnitSpecifierAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIBaseUnitSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseUnitSpecifier__Group__0__Impl
	rule__SIBaseUnitSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseUnitSpecifierAccess().getSIKeyword_0()); }
	SI
	{ after(grammarAccess.getSIBaseUnitSpecifierAccess().getSIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseUnitSpecifier__Group__1__Impl
	rule__SIBaseUnitSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseUnitSpecifierAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getSIBaseUnitSpecifierAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitSpecifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseUnitSpecifier__Group__2__Impl
	rule__SIBaseUnitSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitSpecifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseUnitSpecifierAccess().getSIBaseExponentListAssignment_2()); }
	(rule__SIBaseUnitSpecifier__SIBaseExponentListAssignment_2)
	{ after(grammarAccess.getSIBaseUnitSpecifierAccess().getSIBaseExponentListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitSpecifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseUnitSpecifier__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitSpecifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseUnitSpecifierAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getSIBaseUnitSpecifierAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIBaseExponentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseExponentList__Group__0__Impl
	rule__SIBaseExponentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseExponentListAccess().getSIBaseExponentListAssignment_0()); }
	(rule__SIBaseExponentList__SIBaseExponentListAssignment_0)
	{ after(grammarAccess.getSIBaseExponentListAccess().getSIBaseExponentListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseExponentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseExponentListAccess().getGroup_1()); }
	(rule__SIBaseExponentList__Group_1__0)*
	{ after(grammarAccess.getSIBaseExponentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIBaseExponentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseExponentList__Group_1__0__Impl
	rule__SIBaseExponentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseExponentListAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getSIBaseExponentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseExponentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseExponentListAccess().getNextSIBaseExponentListAssignment_1_1()); }
	(rule__SIBaseExponentList__NextSIBaseExponentListAssignment_1_1)
	{ after(grammarAccess.getSIBaseExponentListAccess().getNextSIBaseExponentListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIBaseExponent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseExponent__Group__0__Impl
	rule__SIBaseExponent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseExponentAccess().getUnitAssignment_0()); }
	(rule__SIBaseExponent__UnitAssignment_0)
	{ after(grammarAccess.getSIBaseExponentAccess().getUnitAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseExponent__Group__1__Impl
	rule__SIBaseExponent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseExponentAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getSIBaseExponentAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIBaseExponent__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIBaseExponentAccess().getNumberAssignment_2()); }
	(rule__SIBaseExponent__NumberAssignment_2)
	{ after(grammarAccess.getSIBaseExponentAccess().getNumberAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIUnitSpecifier__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group__0__Impl
	rule__SIUnitSpecifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getSIKeyword_0()); }
	SI
	{ after(grammarAccess.getSIUnitSpecifierAccess().getSIKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group__1__Impl
	rule__SIUnitSpecifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getSIUnitSpecifierAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group__2__Impl
	rule__SIUnitSpecifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getSIBaseExponentListAssignment_2()); }
	(rule__SIUnitSpecifier__SIBaseExponentListAssignment_2)
	{ after(grammarAccess.getSIUnitSpecifierAccess().getSIBaseExponentListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group__3__Impl
	rule__SIUnitSpecifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getGroup_3()); }
	(rule__SIUnitSpecifier__Group_3__0)?
	{ after(grammarAccess.getSIUnitSpecifierAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group__4__Impl
	rule__SIUnitSpecifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getGroup_4()); }
	(rule__SIUnitSpecifier__Group_4__0)?
	{ after(grammarAccess.getSIUnitSpecifierAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getRightParenthesisKeyword_5()); }
	RightParenthesis
	{ after(grammarAccess.getSIUnitSpecifierAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIUnitSpecifier__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group_3__0__Impl
	rule__SIUnitSpecifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getCommaKeyword_3_0()); }
	Comma
	{ after(grammarAccess.getSIUnitSpecifierAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getSIfactorAssignment_3_1()); }
	(rule__SIUnitSpecifier__SIfactorAssignment_3_1)
	{ after(grammarAccess.getSIUnitSpecifierAccess().getSIfactorAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIUnitSpecifier__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group_4__0__Impl
	rule__SIUnitSpecifier__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getCommaKeyword_4_0()); }
	Comma
	{ after(grammarAccess.getSIUnitSpecifierAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitSpecifier__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitSpecifierAccess().getSIUnitAssignment_4_1()); }
	(rule__SIUnitSpecifier__SIUnitAssignment_4_1)
	{ after(grammarAccess.getSIUnitSpecifierAccess().getSIUnitAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIUnitFactor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitFactor__Group__0__Impl
	rule__SIUnitFactor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitFactor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitFactorAccess().getFactorKeyword_0()); }
	Factor
	{ after(grammarAccess.getSIUnitFactorAccess().getFactorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitFactor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitFactor__Group__1__Impl
	rule__SIUnitFactor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitFactor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitFactorAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getSIUnitFactorAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitFactor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitFactor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitFactor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitFactorAccess().getAlternatives_2()); }
	(rule__SIUnitFactor__Alternatives_2)
	{ after(grammarAccess.getSIUnitFactorAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SIUnitOffset__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitOffset__Group__0__Impl
	rule__SIUnitOffset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitOffset__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitOffsetAccess().getOffsetKeyword_0()); }
	Offset
	{ after(grammarAccess.getSIUnitOffsetAccess().getOffsetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitOffset__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitOffset__Group__1__Impl
	rule__SIUnitOffset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitOffset__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitOffsetAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getSIUnitOffsetAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitOffset__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SIUnitOffset__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitOffset__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSIUnitOffsetAccess().getAlternatives_2()); }
	(rule__SIUnitOffset__Alternatives_2)
	{ after(grammarAccess.getSIUnitOffsetAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeExtension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group__0__Impl
	rule__EnumTypeExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getExtendKeyword_0()); }
	Extend
	{ after(grammarAccess.getEnumTypeExtensionAccess().getExtendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group__1__Impl
	rule__EnumTypeExtension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getEnumNameAssignment_1()); }
	(rule__EnumTypeExtension__EnumNameAssignment_1)
	{ after(grammarAccess.getEnumTypeExtensionAccess().getEnumNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group__2__Impl
	rule__EnumTypeExtension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getEnumTypeExtensionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group__3__Impl
	rule__EnumTypeExtension__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getLeftSquareBracketKeyword_3()); }
	LeftSquareBracket
	{ after(grammarAccess.getEnumTypeExtensionAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group__4__Impl
	rule__EnumTypeExtension__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsAssignment_4()); }
	(rule__EnumTypeExtension__EnumMemberDeclsAssignment_4)
	{ after(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group__5__Impl
	rule__EnumTypeExtension__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getGroup_5()); }
	(rule__EnumTypeExtension__Group_5__0)*
	{ after(grammarAccess.getEnumTypeExtensionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getRightSquareBracketKeyword_6()); }
	RightSquareBracket
	{ after(grammarAccess.getEnumTypeExtensionAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumTypeExtension__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group_5__0__Impl
	rule__EnumTypeExtension__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getCommaKeyword_5_0()); }
	Comma
	{ after(grammarAccess.getEnumTypeExtensionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumTypeExtension__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsAssignment_5_1()); }
	(rule__EnumTypeExtension__EnumMemberDeclsAssignment_5_1)
	{ after(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredTypeExtension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTypeExtension__Group__0__Impl
	rule__StructuredTypeExtension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTypeExtensionAccess().getExtendKeyword_0()); }
	Extend
	{ after(grammarAccess.getStructuredTypeExtensionAccess().getExtendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTypeExtension__Group__1__Impl
	rule__StructuredTypeExtension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTypeExtensionAccess().getExtendableTypeNameAssignment_1()); }
	(rule__StructuredTypeExtension__ExtendableTypeNameAssignment_1)
	{ after(grammarAccess.getStructuredTypeExtensionAccess().getExtendableTypeNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTypeExtension__Group__2__Impl
	rule__StructuredTypeExtension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTypeExtensionAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getStructuredTypeExtensionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTypeExtension__Group__3__Impl
	rule__StructuredTypeExtension__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTypeExtensionAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getStructuredTypeExtensionAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTypeExtension__Group__4__Impl
	rule__StructuredTypeExtension__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTypeExtensionAccess().getExtensionMemberDeclsAssignment_4()); }
	(rule__StructuredTypeExtension__ExtensionMemberDeclsAssignment_4)*
	{ after(grammarAccess.getStructuredTypeExtensionAccess().getExtensionMemberDeclsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructuredTypeExtension__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructuredTypeExtensionAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getStructuredTypeExtensionAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalParameterDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalParameterDeclaration__Group__0__Impl
	rule__GlobalParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalParameterDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalParameterDeclarationAccess().getGlobalKeyword_0()); }
	Global
	{ after(grammarAccess.getGlobalParameterDeclarationAccess().getGlobalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalParameterDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalParameterDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalParameterDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalParameterDeclarationAccess().getParameterDeclarationAssignment_1()); }
	(rule__GlobalParameterDeclaration__ParameterDeclarationAssignment_1)
	{ after(grammarAccess.getGlobalParameterDeclarationAccess().getParameterDeclarationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__0__Impl
	rule__ParameterDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getFieldNameAssignment_0()); }
	(rule__ParameterDeclaration__FieldNameAssignment_0)
	{ after(grammarAccess.getParameterDeclarationAccess().getFieldNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__1__Impl
	rule__ParameterDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getGroup_1()); }
	(rule__ParameterDeclaration__Group_1__0)*
	{ after(grammarAccess.getParameterDeclarationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__2__Impl
	rule__ParameterDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getParameterDeclarationAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__3__Impl
	rule__ParameterDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getTypeDeclaratorAssignment_3()); }
	(rule__ParameterDeclaration__TypeDeclaratorAssignment_3)
	{ after(grammarAccess.getParameterDeclarationAccess().getTypeDeclaratorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__4__Impl
	rule__ParameterDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getGroup_4()); }
	(rule__ParameterDeclaration__Group_4__0)?
	{ after(grammarAccess.getParameterDeclarationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getWithDeclarationAssignment_5()); }
	(rule__ParameterDeclaration__WithDeclarationAssignment_5)?
	{ after(grammarAccess.getParameterDeclarationAccess().getWithDeclarationAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group_1__0__Impl
	rule__ParameterDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getParameterDeclarationAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getNextfieldNameAssignment_1_1()); }
	(rule__ParameterDeclaration__NextfieldNameAssignment_1_1)
	{ after(grammarAccess.getParameterDeclarationAccess().getNextfieldNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDeclaration__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group_4__0__Impl
	rule__ParameterDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getEqualsSignKeyword_4_0()); }
	EqualsSign
	{ after(grammarAccess.getParameterDeclarationAccess().getEqualsSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDeclarationAccess().getDefaultValueAssignment_4_1()); }
	(rule__ParameterDeclaration__DefaultValueAssignment_4_1)
	{ after(grammarAccess.getParameterDeclarationAccess().getDefaultValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListTypeDeclarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDeclarator__Group__0__Impl
	rule__ListTypeDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDeclarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclaratorAccess().getListKeyword_0()); }
	List
	{ after(grammarAccess.getListTypeDeclaratorAccess().getListKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDeclarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDeclarator__Group__1__Impl
	rule__ListTypeDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDeclarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclaratorAccess().getOfKeyword_1()); }
	Of
	{ after(grammarAccess.getListTypeDeclaratorAccess().getOfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDeclarator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListTypeDeclarator__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListTypeDeclarator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListTypeDeclaratorAccess().getNonAggregateTypeDeclaratorParserRuleCall_2()); }
	ruleNonAggregateTypeDeclarator
	{ after(grammarAccess.getListTypeDeclaratorAccess().getNonAggregateTypeDeclaratorParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__0__Impl
	rule__EnumDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0()); }
	Enum
	{ after(grammarAccess.getEnumDeclarationAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__1__Impl
	rule__EnumDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getEnumNameAssignment_1()); }
	(rule__EnumDeclaration__EnumNameAssignment_1)
	{ after(grammarAccess.getEnumDeclarationAccess().getEnumNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__2__Impl
	rule__EnumDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getEnumDeclarationAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__3__Impl
	rule__EnumDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getLeftSquareBracketKeyword_3()); }
	LeftSquareBracket
	{ after(grammarAccess.getEnumDeclarationAccess().getLeftSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__4__Impl
	rule__EnumDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsAssignment_4()); }
	(rule__EnumDeclaration__EnumMemberDeclsAssignment_4)
	{ after(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__5__Impl
	rule__EnumDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getGroup_5()); }
	(rule__EnumDeclaration__Group_5__0)*
	{ after(grammarAccess.getEnumDeclarationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getRightSquareBracketKeyword_6()); }
	RightSquareBracket
	{ after(grammarAccess.getEnumDeclarationAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDeclaration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group_5__0__Impl
	rule__EnumDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getCommaKeyword_5_0()); }
	Comma
	{ after(grammarAccess.getEnumDeclarationAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsAssignment_5_1()); }
	(rule__EnumDeclaration__EnumMemberDeclsAssignment_5_1)
	{ after(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMemberDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumMemberDeclaration__Group__0__Impl
	rule__EnumMemberDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberNameAssignment_0()); }
	(rule__EnumMemberDeclaration__EnumMemberNameAssignment_0)
	{ after(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumMemberDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumMemberDeclarationAccess().getGroup_1()); }
	(rule__EnumMemberDeclaration__Group_1__0)?
	{ after(grammarAccess.getEnumMemberDeclarationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumMemberDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumMemberDeclaration__Group_1__0__Impl
	rule__EnumMemberDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumMemberDeclarationAccess().getEqualsSignKeyword_1_0()); }
	EqualsSign
	{ after(grammarAccess.getEnumMemberDeclarationAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumMemberDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberValueAssignment_1_1()); }
	(rule__EnumMemberDeclaration__EnumMemberValueAssignment_1_1)
	{ after(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumValueReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValueReference__Group__0__Impl
	rule__EnumValueReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValueReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueReferenceAccess().getGroup_0()); }
	(rule__EnumValueReference__Group_0__0)?
	{ after(grammarAccess.getEnumValueReferenceAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValueReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValueReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValueReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueReferenceAccess().getEnumMemberNameAssignment_1()); }
	(rule__EnumValueReference__EnumMemberNameAssignment_1)
	{ after(grammarAccess.getEnumValueReferenceAccess().getEnumMemberNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumValueReference__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValueReference__Group_0__0__Impl
	rule__EnumValueReference__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValueReference__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueReferenceAccess().getEnumNameAssignment_0_0()); }
	(rule__EnumValueReference__EnumNameAssignment_0_0)
	{ after(grammarAccess.getEnumValueReferenceAccess().getEnumNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValueReference__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumValueReference__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValueReference__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumValueReferenceAccess().getExclamationMarkKeyword_0_1()); }
	ExclamationMark
	{ after(grammarAccess.getEnumValueReferenceAccess().getExclamationMarkKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModifierDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group__0__Impl
	rule__ModifierDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getModifierKeyword_0()); }
	Modifier
	{ after(grammarAccess.getModifierDeclarationAccess().getModifierKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group__1__Impl
	rule__ModifierDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getGroup_1()); }
	(rule__ModifierDeclaration__Group_1__0)?
	{ after(grammarAccess.getModifierDeclarationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group__2__Impl
	rule__ModifierDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getModifierNameAssignment_2()); }
	(rule__ModifierDeclaration__ModifierNameAssignment_2)
	{ after(grammarAccess.getModifierDeclarationAccess().getModifierNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group__3__Impl
	rule__ModifierDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getGroup_3()); }
	(rule__ModifierDeclaration__Group_3__0)?
	{ after(grammarAccess.getModifierDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group__4__Impl
	rule__ModifierDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getColonKeyword_4()); }
	Colon
	{ after(grammarAccess.getModifierDeclarationAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group__5__Impl
	rule__ModifierDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getBEGINTerminalRuleCall_5()); }
	RULE_BEGIN
	{ after(grammarAccess.getModifierDeclarationAccess().getBEGINTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group__6__Impl
	rule__ModifierDeclaration__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getAlternatives_6()); }
	(rule__ModifierDeclaration__Alternatives_6)*
	{ after(grammarAccess.getModifierDeclarationAccess().getAlternatives_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getENDTerminalRuleCall_7()); }
	RULE_END
	{ after(grammarAccess.getModifierDeclarationAccess().getENDTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModifierDeclaration__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group_1__0__Impl
	rule__ModifierDeclaration__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getActorNameAssignment_1_0()); }
	(rule__ModifierDeclaration__ActorNameAssignment_1_0)
	{ after(grammarAccess.getModifierDeclarationAccess().getActorNameAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getFullStopKeyword_1_1()); }
	FullStop
	{ after(grammarAccess.getModifierDeclarationAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModifierDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group_3__0__Impl
	rule__ModifierDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getOfKeyword_3_0()); }
	Of
	{ after(grammarAccess.getModifierDeclarationAccess().getOfKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModifierDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifierDeclarationAccess().getQualifiedBehaviorNameAssignment_3_1()); }
	(rule__ModifierDeclaration__QualifiedBehaviorNameAssignment_3_1)
	{ after(grammarAccess.getModifierDeclarationAccess().getQualifiedBehaviorNameAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group__0__Impl
	rule__ActionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getActionKeyword_0()); }
	Action
	{ after(grammarAccess.getActionDeclarationAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group__1__Impl
	rule__ActionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getActionNameAssignment_1()); }
	(rule__ActionDeclaration__ActionNameAssignment_1)
	{ after(grammarAccess.getActionDeclarationAccess().getActionNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group__2__Impl
	rule__ActionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getGroup_2()); }
	(rule__ActionDeclaration__Group_2__0)?
	{ after(grammarAccess.getActionDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group__3__Impl
	rule__ActionDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getActionDeclarationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group__4__Impl
	rule__ActionDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getActionDeclarationAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group__5__Impl
	rule__ActionDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getActionMemberDeclAssignment_5()); }
	(rule__ActionDeclaration__ActionMemberDeclAssignment_5)*
	{ after(grammarAccess.getActionDeclarationAccess().getActionMemberDeclAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getActionDeclarationAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group_2__0__Impl
	rule__ActionDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getInheritsKeyword_2_0()); }
	Inherits
	{ after(grammarAccess.getActionDeclarationAccess().getInheritsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group_2__1__Impl
	rule__ActionDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getBaseActionNameAssignment_2_1()); }
	(rule__ActionDeclaration__BaseActionNameAssignment_2_1)
	{ after(grammarAccess.getActionDeclarationAccess().getBaseActionNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getGroup_2_2()); }
	(rule__ActionDeclaration__Group_2_2__0)?
	{ after(grammarAccess.getActionDeclarationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDeclaration__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group_2_2__0__Impl
	rule__ActionDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getLeftParenthesisKeyword_2_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getActionDeclarationAccess().getLeftParenthesisKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group_2_2__1__Impl
	rule__ActionDeclaration__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getFieldNameAssignment_2_2_1()); }
	(rule__ActionDeclaration__FieldNameAssignment_2_2_1)
	{ after(grammarAccess.getActionDeclarationAccess().getFieldNameAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group_2_2__2__Impl
	rule__ActionDeclaration__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getEqualsSignEqualsSignKeyword_2_2_2()); }
	EqualsSignEqualsSign
	{ after(grammarAccess.getActionDeclarationAccess().getEqualsSignEqualsSignKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group_2_2__3__Impl
	rule__ActionDeclaration__Group_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getAlternatives_2_2_3()); }
	(rule__ActionDeclaration__Alternatives_2_2_3)
	{ after(grammarAccess.getActionDeclarationAccess().getAlternatives_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDeclaration__Group_2_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__Group_2_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDeclarationAccess().getRightParenthesisKeyword_2_2_4()); }
	RightParenthesis
	{ after(grammarAccess.getActionDeclarationAccess().getRightParenthesisKeyword_2_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group__0__Impl
	rule__ActorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getActorKeyword_0()); }
	Actor
	{ after(grammarAccess.getActorDeclarationAccess().getActorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group__1__Impl
	rule__ActorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getActorNameAssignment_1()); }
	(rule__ActorDeclaration__ActorNameAssignment_1)
	{ after(grammarAccess.getActorDeclarationAccess().getActorNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group__2__Impl
	rule__ActorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getGroup_2()); }
	(rule__ActorDeclaration__Group_2__0)?
	{ after(grammarAccess.getActorDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getGroup_3()); }
	(rule__ActorDeclaration__Group_3__0)?
	{ after(grammarAccess.getActorDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_2__0__Impl
	rule__ActorDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getInheritsKeyword_2_0()); }
	Inherits
	{ after(grammarAccess.getActorDeclarationAccess().getInheritsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_2__1__Impl
	rule__ActorDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getBaseActorNameAssignment_2_1()); }
	(rule__ActorDeclaration__BaseActorNameAssignment_2_1)
	{ after(grammarAccess.getActorDeclarationAccess().getBaseActorNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getGroup_2_2()); }
	(rule__ActorDeclaration__Group_2_2__0)?
	{ after(grammarAccess.getActorDeclarationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorDeclaration__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_2_2__0__Impl
	rule__ActorDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getLeftParenthesisKeyword_2_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getActorDeclarationAccess().getLeftParenthesisKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_2_2__1__Impl
	rule__ActorDeclaration__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getFieldNameAssignment_2_2_1()); }
	(rule__ActorDeclaration__FieldNameAssignment_2_2_1)
	{ after(grammarAccess.getActorDeclarationAccess().getFieldNameAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_2_2__2__Impl
	rule__ActorDeclaration__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getEqualsSignEqualsSignKeyword_2_2_2()); }
	EqualsSignEqualsSign
	{ after(grammarAccess.getActorDeclarationAccess().getEqualsSignEqualsSignKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_2_2__3__Impl
	rule__ActorDeclaration__Group_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getAlternatives_2_2_3()); }
	(rule__ActorDeclaration__Alternatives_2_2_3)
	{ after(grammarAccess.getActorDeclarationAccess().getAlternatives_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_2_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_2_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getRightParenthesisKeyword_2_2_4()); }
	RightParenthesis
	{ after(grammarAccess.getActorDeclarationAccess().getRightParenthesisKeyword_2_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActorDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_3__0__Impl
	rule__ActorDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getColonKeyword_3_0()); }
	Colon
	{ after(grammarAccess.getActorDeclarationAccess().getColonKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_3__1__Impl
	rule__ActorDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getBEGINTerminalRuleCall_3_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getActorDeclarationAccess().getBEGINTerminalRuleCall_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_3__2__Impl
	rule__ActorDeclaration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getActorMemberDeclAssignment_3_2()); }
	(rule__ActorDeclaration__ActorMemberDeclAssignment_3_2)*
	{ after(grammarAccess.getActorDeclarationAccess().getActorMemberDeclAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActorDeclaration__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActorDeclarationAccess().getENDTerminalRuleCall_3_3()); }
	RULE_END
	{ after(grammarAccess.getActorDeclarationAccess().getENDTerminalRuleCall_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__0__Impl
	rule__StructDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getStructKeyword_0()); }
	Struct
	{ after(grammarAccess.getStructDeclarationAccess().getStructKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__1__Impl
	rule__StructDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getStructNameAssignment_1()); }
	(rule__StructDeclaration__StructNameAssignment_1)
	{ after(grammarAccess.getStructDeclarationAccess().getStructNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__2__Impl
	rule__StructDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getGroup_2()); }
	(rule__StructDeclaration__Group_2__0)?
	{ after(grammarAccess.getStructDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__3__Impl
	rule__StructDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getStructDeclarationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__4__Impl
	rule__StructDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getStructDeclarationAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__5__Impl
	rule__StructDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getStructMemberDeclAssignment_5()); }
	(rule__StructDeclaration__StructMemberDeclAssignment_5)*
	{ after(grammarAccess.getStructDeclarationAccess().getStructMemberDeclAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getStructDeclarationAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2__0__Impl
	rule__StructDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getInheritsKeyword_2_0()); }
	Inherits
	{ after(grammarAccess.getStructDeclarationAccess().getInheritsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2__1__Impl
	rule__StructDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getBaseStructNameAssignment_2_1()); }
	(rule__StructDeclaration__BaseStructNameAssignment_2_1)
	{ after(grammarAccess.getStructDeclarationAccess().getBaseStructNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getGroup_2_2()); }
	(rule__StructDeclaration__Group_2_2__0)?
	{ after(grammarAccess.getStructDeclarationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StructDeclaration__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2_2__0__Impl
	rule__StructDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getLeftParenthesisKeyword_2_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getStructDeclarationAccess().getLeftParenthesisKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2_2__1__Impl
	rule__StructDeclaration__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getFieldNameAssignment_2_2_1()); }
	(rule__StructDeclaration__FieldNameAssignment_2_2_1)
	{ after(grammarAccess.getStructDeclarationAccess().getFieldNameAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2_2__2__Impl
	rule__StructDeclaration__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getEqualsSignEqualsSignKeyword_2_2_2()); }
	EqualsSignEqualsSign
	{ after(grammarAccess.getStructDeclarationAccess().getEqualsSignEqualsSignKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2_2__3__Impl
	rule__StructDeclaration__Group_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getAlternatives_2_2_3()); }
	(rule__StructDeclaration__Alternatives_2_2_3)
	{ after(grammarAccess.getStructDeclarationAccess().getAlternatives_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StructDeclaration__Group_2_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__Group_2_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStructDeclarationAccess().getRightParenthesisKeyword_2_2_4()); }
	RightParenthesis
	{ after(grammarAccess.getStructDeclarationAccess().getRightParenthesisKeyword_2_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group__0__Impl
	rule__ScenarioDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getScenarioKeyword_0()); }
	Scenario
	{ after(grammarAccess.getScenarioDeclarationAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group__1__Impl
	rule__ScenarioDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getScenarioNameAssignment_1()); }
	(rule__ScenarioDeclaration__ScenarioNameAssignment_1)
	{ after(grammarAccess.getScenarioDeclarationAccess().getScenarioNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group__2__Impl
	rule__ScenarioDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getGroup_2()); }
	(rule__ScenarioDeclaration__Group_2__0)?
	{ after(grammarAccess.getScenarioDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group__3__Impl
	rule__ScenarioDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getScenarioDeclarationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group__4__Impl
	rule__ScenarioDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getScenarioDeclarationAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group__5__Impl
	rule__ScenarioDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getAlternatives_5()); }
	(rule__ScenarioDeclaration__Alternatives_5)*
	{ after(grammarAccess.getScenarioDeclarationAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getScenarioDeclarationAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group_2__0__Impl
	rule__ScenarioDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getInheritsKeyword_2_0()); }
	Inherits
	{ after(grammarAccess.getScenarioDeclarationAccess().getInheritsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group_2__1__Impl
	rule__ScenarioDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getBaseScenarioNameAssignment_2_1()); }
	(rule__ScenarioDeclaration__BaseScenarioNameAssignment_2_1)
	{ after(grammarAccess.getScenarioDeclarationAccess().getBaseScenarioNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getGroup_2_2()); }
	(rule__ScenarioDeclaration__Group_2_2__0)?
	{ after(grammarAccess.getScenarioDeclarationAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScenarioDeclaration__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group_2_2__0__Impl
	rule__ScenarioDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getLeftParenthesisKeyword_2_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getScenarioDeclarationAccess().getLeftParenthesisKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group_2_2__1__Impl
	rule__ScenarioDeclaration__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getFieldNameAssignment_2_2_1()); }
	(rule__ScenarioDeclaration__FieldNameAssignment_2_2_1)
	{ after(grammarAccess.getScenarioDeclarationAccess().getFieldNameAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group_2_2__2__Impl
	rule__ScenarioDeclaration__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getEqualsSignEqualsSignKeyword_2_2_2()); }
	EqualsSignEqualsSign
	{ after(grammarAccess.getScenarioDeclarationAccess().getEqualsSignEqualsSignKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group_2_2__3__Impl
	rule__ScenarioDeclaration__Group_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getAlternatives_2_2_3()); }
	(rule__ScenarioDeclaration__Alternatives_2_2_3)
	{ after(grammarAccess.getScenarioDeclarationAccess().getAlternatives_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScenarioDeclaration__Group_2_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__Group_2_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioDeclarationAccess().getRightParenthesisKeyword_2_2_4()); }
	RightParenthesis
	{ after(grammarAccess.getScenarioDeclarationAccess().getRightParenthesisKeyword_2_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CoverageDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoverageDeclaration__Group__0__Impl
	rule__CoverageDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoverageDeclarationAccess().getAlternatives_0()); }
	(rule__CoverageDeclaration__Alternatives_0)
	{ after(grammarAccess.getCoverageDeclarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoverageDeclaration__Group__1__Impl
	rule__CoverageDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoverageDeclarationAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getCoverageDeclarationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoverageDeclaration__Group__2__Impl
	rule__CoverageDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoverageDeclarationAccess().getArgumentListAssignment_2()); }
	(rule__CoverageDeclaration__ArgumentListAssignment_2)
	{ after(grammarAccess.getCoverageDeclarationAccess().getArgumentListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CoverageDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCoverageDeclarationAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getCoverageDeclarationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__0__Impl
	rule__MethodDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getDefKeyword_0()); }
	Def
	{ after(grammarAccess.getMethodDeclarationAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__1__Impl
	rule__MethodDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getMethodNameAssignment_1()); }
	(rule__MethodDeclaration__MethodNameAssignment_1)
	{ after(grammarAccess.getMethodDeclarationAccess().getMethodNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__2__Impl
	rule__MethodDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__3__Impl
	rule__MethodDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getArgumentListSpecificationAssignment_3()); }
	(rule__MethodDeclaration__ArgumentListSpecificationAssignment_3)?
	{ after(grammarAccess.getMethodDeclarationAccess().getArgumentListSpecificationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__4__Impl
	rule__MethodDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__5__Impl
	rule__MethodDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getGroup_5()); }
	(rule__MethodDeclaration__Group_5__0)?
	{ after(grammarAccess.getMethodDeclarationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getMethodImplementationAssignment_6()); }
	(rule__MethodDeclaration__MethodImplementationAssignment_6)
	{ after(grammarAccess.getMethodDeclarationAccess().getMethodImplementationAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_5__0__Impl
	rule__MethodDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getHyphenMinusGreaterThanSignKeyword_5_0()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getMethodDeclarationAccess().getHyphenMinusGreaterThanSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getReturnTypeAssignment_5_1()); }
	(rule__MethodDeclaration__ReturnTypeAssignment_5_1)
	{ after(grammarAccess.getMethodDeclarationAccess().getReturnTypeAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodImplementation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group__0__Impl
	rule__MethodImplementation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getIsKeyword_0()); }
	Is
	{ after(grammarAccess.getMethodImplementationAccess().getIsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group__1__Impl
	rule__MethodImplementation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getOnlyKeyword_1()); }
	(Only)?
	{ after(grammarAccess.getMethodImplementationAccess().getOnlyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getAlternatives_2()); }
	(rule__MethodImplementation__Alternatives_2)
	{ after(grammarAccess.getMethodImplementationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodImplementation__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group_2_0__0__Impl
	rule__MethodImplementation__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getExpressionKeyword_2_0_0()); }
	Expression
	{ after(grammarAccess.getMethodImplementationAccess().getExpressionKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getExpressionAssignment_2_0_1()); }
	(rule__MethodImplementation__ExpressionAssignment_2_0_1)
	{ after(grammarAccess.getMethodImplementationAccess().getExpressionAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodImplementation__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group_2_2__0__Impl
	rule__MethodImplementation__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getExternalKeyword_2_2_0()); }
	External
	{ after(grammarAccess.getMethodImplementationAccess().getExternalKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group_2_2__1__Impl
	rule__MethodImplementation__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getStructuredIDAssignment_2_2_1()); }
	(rule__MethodImplementation__StructuredIDAssignment_2_2_1)
	{ after(grammarAccess.getMethodImplementationAccess().getStructuredIDAssignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group_2_2__2__Impl
	rule__MethodImplementation__Group_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getLeftParenthesisKeyword_2_2_2()); }
	LeftParenthesis
	{ after(grammarAccess.getMethodImplementationAccess().getLeftParenthesisKeyword_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group_2_2__3__Impl
	rule__MethodImplementation__Group_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getArgumentListAssignment_2_2_3()); }
	(rule__MethodImplementation__ArgumentListAssignment_2_2_3)?
	{ after(grammarAccess.getMethodImplementationAccess().getArgumentListAssignment_2_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodImplementation__Group_2_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__Group_2_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodImplementationAccess().getRightParenthesisKeyword_2_2_4()); }
	RightParenthesis
	{ after(grammarAccess.getMethodImplementationAccess().getRightParenthesisKeyword_2_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group__0__Impl
	rule__EventDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getEventKeyword_0()); }
	Event
	{ after(grammarAccess.getEventDeclarationAccess().getEventKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group__1__Impl
	rule__EventDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getEventNameAssignment_1()); }
	(rule__EventDeclaration__EventNameAssignment_1)
	{ after(grammarAccess.getEventDeclarationAccess().getEventNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group__2__Impl
	rule__EventDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getGroup_2()); }
	(rule__EventDeclaration__Group_2__0)?
	{ after(grammarAccess.getEventDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getGroup_3()); }
	(rule__EventDeclaration__Group_3__0)?
	{ after(grammarAccess.getEventDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_2__0__Impl
	rule__EventDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getLeftParenthesisKeyword_2_0()); }
	LeftParenthesis
	{ after(grammarAccess.getEventDeclarationAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_2__1__Impl
	rule__EventDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getGroup_2_1()); }
	(rule__EventDeclaration__Group_2_1__0)?
	{ after(grammarAccess.getEventDeclarationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getRightParenthesisKeyword_2_2()); }
	RightParenthesis
	{ after(grammarAccess.getEventDeclarationAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_2_1__0__Impl
	rule__EventDeclaration__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getParamsAssignment_2_1_0()); }
	(rule__EventDeclaration__ParamsAssignment_2_1_0)
	{ after(grammarAccess.getEventDeclarationAccess().getParamsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getGroup_2_1_1()); }
	(rule__EventDeclaration__Group_2_1_1__0)*
	{ after(grammarAccess.getEventDeclarationAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_2_1_1__0__Impl
	rule__EventDeclaration__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getCommaKeyword_2_1_1_0()); }
	Comma
	{ after(grammarAccess.getEventDeclarationAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getParamsAssignment_2_1_1_1()); }
	(rule__EventDeclaration__ParamsAssignment_2_1_1_1)
	{ after(grammarAccess.getEventDeclarationAccess().getParamsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_3__0__Impl
	rule__EventDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getIsKeyword_3_0()); }
	Is
	{ after(grammarAccess.getEventDeclarationAccess().getIsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventDeclarationAccess().getEventSpecificationAssignment_3_1()); }
	(rule__EventDeclaration__EventSpecificationAssignment_3_1)
	{ after(grammarAccess.getEventDeclarationAccess().getEventSpecificationAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventSpecification__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSpecification__Group_0__0__Impl
	rule__EventSpecification__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSpecificationAccess().getEventReferenceAssignment_0_0()); }
	(rule__EventSpecification__EventReferenceAssignment_0_0)
	{ after(grammarAccess.getEventSpecificationAccess().getEventReferenceAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSpecification__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSpecificationAccess().getGroup_0_1()); }
	(rule__EventSpecification__Group_0_1__0)?
	{ after(grammarAccess.getEventSpecificationAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventSpecification__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSpecification__Group_0_1__0__Impl
	rule__EventSpecification__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSpecificationAccess().getGroup_0_1_0()); }
	(rule__EventSpecification__Group_0_1_0__0)?
	{ after(grammarAccess.getEventSpecificationAccess().getGroup_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSpecification__Group_0_1__1__Impl
	rule__EventSpecification__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSpecificationAccess().getIfKeyword_0_1_1()); }
	If
	{ after(grammarAccess.getEventSpecificationAccess().getIfKeyword_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSpecification__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSpecificationAccess().getEventConditionAssignment_0_1_2()); }
	(rule__EventSpecification__EventConditionAssignment_0_1_2)
	{ after(grammarAccess.getEventSpecificationAccess().getEventConditionAssignment_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventSpecification__Group_0_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSpecification__Group_0_1_0__0__Impl
	rule__EventSpecification__Group_0_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSpecificationAccess().getAsKeyword_0_1_0_0()); }
	As
	{ after(grammarAccess.getEventSpecificationAccess().getAsKeyword_0_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventSpecification__Group_0_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__Group_0_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventSpecificationAccess().getEventFieldNameAssignment_0_1_0_1()); }
	(rule__EventSpecification__EventFieldNameAssignment_0_1_0_1)
	{ after(grammarAccess.getEventSpecificationAccess().getEventFieldNameAssignment_0_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventReference__Group__0__Impl
	rule__EventReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventReferenceAccess().getCommercialAtKeyword_0()); }
	CommercialAt
	{ after(grammarAccess.getEventReferenceAccess().getCommercialAtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventReferenceAccess().getEventPathAssignment_1()); }
	(rule__EventReference__EventPathAssignment_1)
	{ after(grammarAccess.getEventReferenceAccess().getEventPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventPath__Group__0__Impl
	rule__EventPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventPathAccess().getGroup_0()); }
	(rule__EventPath__Group_0__0)?
	{ after(grammarAccess.getEventPathAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventPath__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventPathAccess().getEventNameAssignment_1()); }
	(rule__EventPath__EventNameAssignment_1)
	{ after(grammarAccess.getEventPathAccess().getEventNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EventPath__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventPath__Group_0__0__Impl
	rule__EventPath__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPath__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventPathAccess().getExpressionAssignment_0_0()); }
	(rule__EventPath__ExpressionAssignment_0_0)
	{ after(grammarAccess.getEventPathAccess().getExpressionAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPath__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EventPath__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPath__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEventPathAccess().getFullStopKeyword_0_1()); }
	FullStop
	{ after(grammarAccess.getEventPathAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RiseExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RiseExpression__Group__0__Impl
	rule__RiseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RiseExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRiseExpressionAccess().getRiseKeyword_0()); }
	Rise
	{ after(grammarAccess.getRiseExpressionAccess().getRiseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RiseExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RiseExpression__Group__1__Impl
	rule__RiseExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RiseExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRiseExpressionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getRiseExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RiseExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RiseExpression__Group__2__Impl
	rule__RiseExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RiseExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRiseExpressionAccess().getBoolExpressionAssignment_2()); }
	(rule__RiseExpression__BoolExpressionAssignment_2)
	{ after(grammarAccess.getRiseExpressionAccess().getBoolExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RiseExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RiseExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RiseExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRiseExpressionAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getRiseExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FallExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallExpression__Group__0__Impl
	rule__FallExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FallExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallExpressionAccess().getFallKeyword_0()); }
	Fall
	{ after(grammarAccess.getFallExpressionAccess().getFallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallExpression__Group__1__Impl
	rule__FallExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FallExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallExpressionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getFallExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallExpression__Group__2__Impl
	rule__FallExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FallExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallExpressionAccess().getBoolExpressionAssignment_2()); }
	(rule__FallExpression__BoolExpressionAssignment_2)
	{ after(grammarAccess.getFallExpressionAccess().getBoolExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FallExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FallExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFallExpressionAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getFallExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElapsedExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElapsedExpression__Group__0__Impl
	rule__ElapsedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElapsedExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElapsedExpressionAccess().getElapsedKeyword_0()); }
	Elapsed
	{ after(grammarAccess.getElapsedExpressionAccess().getElapsedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElapsedExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElapsedExpression__Group__1__Impl
	rule__ElapsedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElapsedExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElapsedExpressionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getElapsedExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElapsedExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElapsedExpression__Group__2__Impl
	rule__ElapsedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElapsedExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElapsedExpressionAccess().getDurationExpressionAssignment_2()); }
	(rule__ElapsedExpression__DurationExpressionAssignment_2)
	{ after(grammarAccess.getElapsedExpressionAccess().getDurationExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElapsedExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElapsedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElapsedExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElapsedExpressionAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getElapsedExpressionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group__0__Impl
	rule__EveryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getEveryKeyword_0()); }
	Every
	{ after(grammarAccess.getEveryExpressionAccess().getEveryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group__1__Impl
	rule__EveryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getEveryExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group__2__Impl
	rule__EveryExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getDurationExpressionAssignment_2()); }
	(rule__EveryExpression__DurationExpressionAssignment_2)
	{ after(grammarAccess.getEveryExpressionAccess().getDurationExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group__3__Impl
	rule__EveryExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getGroup_3()); }
	(rule__EveryExpression__Group_3__0)?
	{ after(grammarAccess.getEveryExpressionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getEveryExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group_3__0__Impl
	rule__EveryExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getCommaKeyword_3_0()); }
	Comma
	{ after(grammarAccess.getEveryExpressionAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group_3__1__Impl
	rule__EveryExpression__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getOffsetKeyword_3_1()); }
	Offset
	{ after(grammarAccess.getEveryExpressionAccess().getOffsetKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group_3__2__Impl
	rule__EveryExpression__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getColonKeyword_3_2()); }
	Colon
	{ after(grammarAccess.getEveryExpressionAccess().getColonKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EveryExpression__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEveryExpressionAccess().getNextdurationExpressionAssignment_3_3()); }
	(rule__EveryExpression__NextdurationExpressionAssignment_3_3)
	{ after(grammarAccess.getEveryExpressionAccess().getNextdurationExpressionAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getVarKeyword_0()); }
	Var
	{ after(grammarAccess.getVariableDeclarationAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getFieldNameAssignment_1()); }
	(rule__VariableDeclaration__FieldNameAssignment_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getFieldNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__2__Impl
	rule__VariableDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
	(rule__VariableDeclaration__Group_2__0)*
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__3__Impl
	rule__VariableDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getVariableDeclarationAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__4__Impl
	rule__VariableDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getTypeDeclaratorAssignment_4()); }
	(rule__VariableDeclaration__TypeDeclaratorAssignment_4)
	{ after(grammarAccess.getVariableDeclarationAccess().getTypeDeclaratorAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getGroup_5()); }
	(rule__VariableDeclaration__Group_5__0)?
	{ after(grammarAccess.getVariableDeclarationAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__0__Impl
	rule__VariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_2_0()); }
	Comma
	{ after(grammarAccess.getVariableDeclarationAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getNextfieldNameAssignment_2_1()); }
	(rule__VariableDeclaration__NextfieldNameAssignment_2_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getNextfieldNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5__0__Impl
	rule__VariableDeclaration__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_5_0()); }
	EqualsSign
	{ after(grammarAccess.getVariableDeclarationAccess().getEqualsSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaration__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclarationAccess().getAlternatives_5_1()); }
	(rule__VariableDeclaration__Alternatives_5_1)
	{ after(grammarAccess.getVariableDeclarationAccess().getAlternatives_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SampleExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group__0__Impl
	rule__SampleExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getSampleKeyword_0()); }
	Sample
	{ after(grammarAccess.getSampleExpressionAccess().getSampleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group__1__Impl
	rule__SampleExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getSampleExpressionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group__2__Impl
	rule__SampleExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getExpressionAssignment_2()); }
	(rule__SampleExpression__ExpressionAssignment_2)
	{ after(grammarAccess.getSampleExpressionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group__3__Impl
	rule__SampleExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getCommaKeyword_3()); }
	Comma
	{ after(grammarAccess.getSampleExpressionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group__4__Impl
	rule__SampleExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getEventSpecificationAssignment_4()); }
	(rule__SampleExpression__EventSpecificationAssignment_4)
	{ after(grammarAccess.getSampleExpressionAccess().getEventSpecificationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group__5__Impl
	rule__SampleExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getGroup_5()); }
	(rule__SampleExpression__Group_5__0)?
	{ after(grammarAccess.getSampleExpressionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getRightParenthesisKeyword_6()); }
	RightParenthesis
	{ after(grammarAccess.getSampleExpressionAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SampleExpression__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group_5__0__Impl
	rule__SampleExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getCommaKeyword_5_0()); }
	Comma
	{ after(grammarAccess.getSampleExpressionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleExpression__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleExpressionAccess().getDefaultValueAssignment_5_1()); }
	(rule__SampleExpression__DefaultValueAssignment_5_1)
	{ after(grammarAccess.getSampleExpressionAccess().getDefaultValueAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OnDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnDirective__Group__0__Impl
	rule__OnDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnDirectiveAccess().getOnKeyword_0()); }
	On
	{ after(grammarAccess.getOnDirectiveAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnDirective__Group__1__Impl
	rule__OnDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnDirectiveAccess().getEventSpecificationAssignment_1()); }
	(rule__OnDirective__EventSpecificationAssignment_1)
	{ after(grammarAccess.getOnDirectiveAccess().getEventSpecificationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnDirective__Group__2__Impl
	rule__OnDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnDirectiveAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getOnDirectiveAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnDirective__Group__3__Impl
	rule__OnDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnDirectiveAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getOnDirectiveAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnDirective__Group__4__Impl
	rule__OnDirective__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnDirectiveAccess().getOnMemberAssignment_4()); }
	(rule__OnDirective__OnMemberAssignment_4)*
	{ after(grammarAccess.getOnDirectiveAccess().getOnMemberAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OnDirective__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOnDirectiveAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getOnDirectiveAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CallDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallDirective__Group__0__Impl
	rule__CallDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallDirectiveAccess().getCallKeyword_0()); }
	Call
	{ after(grammarAccess.getCallDirectiveAccess().getCallKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CallDirective__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCallDirectiveAccess().getMethodInvocationAssignment_1()); }
	(rule__CallDirective__MethodInvocationAssignment_1)
	{ after(grammarAccess.getCallDirectiveAccess().getMethodInvocationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EmitDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmitDirective__Group__0__Impl
	rule__EmitDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmitDirectiveAccess().getEmitKeyword_0()); }
	Emit
	{ after(grammarAccess.getEmitDirectiveAccess().getEmitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmitDirective__Group__1__Impl
	rule__EmitDirective__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmitDirectiveAccess().getEventNameAssignment_1()); }
	(rule__EmitDirective__EventNameAssignment_1)
	{ after(grammarAccess.getEmitDirectiveAccess().getEventNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmitDirective__Group__2__Impl
	rule__EmitDirective__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmitDirectiveAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getEmitDirectiveAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmitDirective__Group__3__Impl
	rule__EmitDirective__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmitDirectiveAccess().getArgumentListAssignment_3()); }
	(rule__EmitDirective__ArgumentListAssignment_3)
	{ after(grammarAccess.getEmitDirectiveAccess().getArgumentListAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EmitDirective__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEmitDirectiveAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getEmitDirectiveAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WaitDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaitDirective__Group__0__Impl
	rule__WaitDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitDirectiveAccess().getWaitKeyword_0()); }
	Wait
	{ after(grammarAccess.getWaitDirectiveAccess().getWaitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WaitDirective__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWaitDirectiveAccess().getEventSpecificationAssignment_1()); }
	(rule__WaitDirective__EventSpecificationAssignment_1)
	{ after(grammarAccess.getWaitDirectiveAccess().getEventSpecificationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoDirective__Group__0__Impl
	rule__DoDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoDirectiveAccess().getDoKeyword_0()); }
	Do
	{ after(grammarAccess.getDoDirectiveAccess().getDoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoDirective__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoDirectiveAccess().getDoMembersAssignment_1()); }
	(rule__DoDirective__DoMembersAssignment_1)
	{ after(grammarAccess.getDoDirectiveAccess().getDoMembersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoDirectiveMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoDirectiveMember__Group__0__Impl
	rule__DoDirectiveMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoDirectiveMemberAccess().getGroup_0()); }
	(rule__DoDirectiveMember__Group_0__0)?
	{ after(grammarAccess.getDoDirectiveMemberAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoDirectiveMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoDirectiveMemberAccess().getAlternatives_1()); }
	(rule__DoDirectiveMember__Alternatives_1)
	{ after(grammarAccess.getDoDirectiveMemberAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoDirectiveMember__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoDirectiveMember__Group_0__0__Impl
	rule__DoDirectiveMember__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoDirectiveMemberAccess().getLabelNameAssignment_0_0()); }
	(rule__DoDirectiveMember__LabelNameAssignment_0_0)
	{ after(grammarAccess.getDoDirectiveMemberAccess().getLabelNameAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoDirectiveMember__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoDirectiveMemberAccess().getColonKeyword_0_1()); }
	Colon
	{ after(grammarAccess.getDoDirectiveMemberAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__0__Impl
	rule__Composition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getCompositionOpAssignment_0()); }
	(rule__Composition__CompositionOpAssignment_0)
	{ after(grammarAccess.getCompositionAccess().getCompositionOpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__1__Impl
	rule__Composition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_1()); }
	(rule__Composition__Group_1__0)?
	{ after(grammarAccess.getCompositionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__2__Impl
	rule__Composition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getCompositionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__3__Impl
	rule__Composition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getCompositionAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__4__Impl
	rule__Composition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getGroup_4()); }
	(rule__Composition__Group_4__0)*
	{ after(grammarAccess.getCompositionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getCompositionAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1__0__Impl
	rule__Composition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getLeftParenthesisKeyword_1_0()); }
	LeftParenthesis
	{ after(grammarAccess.getCompositionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1__1__Impl
	rule__Composition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getArgumentListAssignment_1_1()); }
	(rule__Composition__ArgumentListAssignment_1_1)
	{ after(grammarAccess.getCompositionAccess().getArgumentListAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getRightParenthesisKeyword_1_2()); }
	RightParenthesis
	{ after(grammarAccess.getCompositionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Composition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_4__0__Impl
	rule__Composition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getDoMembersAssignment_4_0()); }
	(rule__Composition__DoMembersAssignment_4_0)
	{ after(grammarAccess.getCompositionAccess().getDoMembersAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Composition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompositionAccess().getWithDeclarationAssignment_4_1()); }
	(rule__Composition__WithDeclarationAssignment_4_1)?
	{ after(grammarAccess.getCompositionAccess().getWithDeclarationAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorInvocation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorInvocation__Group__0__Impl
	rule__BehaviorInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorInvocationAccess().getActorExpressionAssignment_0()); }
	(rule__BehaviorInvocation__ActorExpressionAssignment_0)
	{ after(grammarAccess.getBehaviorInvocationAccess().getActorExpressionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorInvocation__Group__1__Impl
	rule__BehaviorInvocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorInvocationAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getBehaviorInvocationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorInvocation__Group__2__Impl
	rule__BehaviorInvocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorInvocationAccess().getArgumentListAssignment_2()); }
	(rule__BehaviorInvocation__ArgumentListAssignment_2)?
	{ after(grammarAccess.getBehaviorInvocationAccess().getArgumentListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorInvocation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorInvocationAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getBehaviorInvocationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterWithDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterWithDeclaration__Group__0__Impl
	rule__ParameterWithDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterWithDeclarationAccess().getWithKeyword_0()); }
	With
	{ after(grammarAccess.getParameterWithDeclarationAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterWithDeclaration__Group__1__Impl
	rule__ParameterWithDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterWithDeclarationAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getParameterWithDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterWithDeclaration__Group__2__Impl
	rule__ParameterWithDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterWithDeclarationAccess().getBEGINTerminalRuleCall_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getParameterWithDeclarationAccess().getBEGINTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterWithDeclaration__Group__3__Impl
	rule__ParameterWithDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterWithDeclarationAccess().getParameterWithMembersAssignment_3()); }
	(rule__ParameterWithDeclaration__ParameterWithMembersAssignment_3)*
	{ after(grammarAccess.getParameterWithDeclarationAccess().getParameterWithMembersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterWithDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterWithDeclarationAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getParameterWithDeclarationAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorWithDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorWithDeclaration__Group__0__Impl
	rule__BehaviorWithDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorWithDeclarationAccess().getWithKeyword_0()); }
	With
	{ after(grammarAccess.getBehaviorWithDeclarationAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorWithDeclaration__Group__1__Impl
	rule__BehaviorWithDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorWithDeclarationAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getBehaviorWithDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorWithDeclaration__Group__2__Impl
	rule__BehaviorWithDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorWithDeclarationAccess().getBEGINTerminalRuleCall_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getBehaviorWithDeclarationAccess().getBEGINTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorWithDeclaration__Group__3__Impl
	rule__BehaviorWithDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorWithDeclarationAccess().getBehaviorWithMembersAssignment_3()); }
	(rule__BehaviorWithDeclaration__BehaviorWithMembersAssignment_3)*
	{ after(grammarAccess.getBehaviorWithDeclarationAccess().getBehaviorWithMembersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BehaviorWithDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBehaviorWithDeclarationAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getBehaviorWithDeclarationAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeepConstraintDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeepConstraintDeclaration__Group__0__Impl
	rule__KeepConstraintDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeepConstraintDeclarationAccess().getKeepKeyword_0()); }
	Keep
	{ after(grammarAccess.getKeepConstraintDeclarationAccess().getKeepKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeepConstraintDeclaration__Group__1__Impl
	rule__KeepConstraintDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeepConstraintDeclarationAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getKeepConstraintDeclarationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeepConstraintDeclaration__Group__2__Impl
	rule__KeepConstraintDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintQualifierAssignment_2()); }
	(rule__KeepConstraintDeclaration__ConstraintQualifierAssignment_2)?
	{ after(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintQualifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeepConstraintDeclaration__Group__3__Impl
	rule__KeepConstraintDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintExpressionAssignment_3()); }
	(rule__KeepConstraintDeclaration__ConstraintExpressionAssignment_3)
	{ after(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintExpressionAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeepConstraintDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeepConstraintDeclarationAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getKeepConstraintDeclarationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RemoveDefaultDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveDefaultDeclaration__Group__0__Impl
	rule__RemoveDefaultDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveDefaultDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveDefaultDeclarationAccess().getRemove_defaultKeyword_0()); }
	Remove_default
	{ after(grammarAccess.getRemoveDefaultDeclarationAccess().getRemove_defaultKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveDefaultDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveDefaultDeclaration__Group__1__Impl
	rule__RemoveDefaultDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveDefaultDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveDefaultDeclarationAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getRemoveDefaultDeclarationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveDefaultDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveDefaultDeclaration__Group__2__Impl
	rule__RemoveDefaultDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveDefaultDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveDefaultDeclarationAccess().getParameterReferenceAssignment_2()); }
	(rule__RemoveDefaultDeclaration__ParameterReferenceAssignment_2)
	{ after(grammarAccess.getRemoveDefaultDeclarationAccess().getParameterReferenceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveDefaultDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RemoveDefaultDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveDefaultDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveDefaultDeclarationAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getRemoveDefaultDeclarationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UntilDirective__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilDirective__Group__0__Impl
	rule__UntilDirective__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilDirective__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilDirectiveAccess().getUntilKeyword_0()); }
	Until
	{ after(grammarAccess.getUntilDirectiveAccess().getUntilKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilDirective__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UntilDirective__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilDirective__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUntilDirectiveAccess().getEventSpecificationAssignment_1()); }
	(rule__UntilDirective__EventSpecificationAssignment_1)
	{ after(grammarAccess.getUntilDirectiveAccess().getEventSpecificationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentListSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentListSpecification__Group__0__Impl
	rule__ArgumentListSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentListSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationAssignment_0()); }
	(rule__ArgumentListSpecification__ArgumentSpecificationAssignment_0)
	{ after(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentListSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentListSpecification__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentListSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListSpecificationAccess().getGroup_1()); }
	(rule__ArgumentListSpecification__Group_1__0)
	{ after(grammarAccess.getArgumentListSpecificationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentListSpecification__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentListSpecification__Group_1__0__Impl
	rule__ArgumentListSpecification__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentListSpecification__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListSpecificationAccess().getCommaKeyword_1_0()); }
	Comma
	{ after(grammarAccess.getArgumentListSpecificationAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentListSpecification__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentListSpecification__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentListSpecification__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationAssignment_1_1()); }
	(rule__ArgumentListSpecification__ArgumentSpecificationAssignment_1_1)
	{ after(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentSpecification__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentSpecification__Group__0__Impl
	rule__ArgumentSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentSpecificationAccess().getArgumentNameAssignment_0()); }
	(rule__ArgumentSpecification__ArgumentNameAssignment_0)
	{ after(grammarAccess.getArgumentSpecificationAccess().getArgumentNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentSpecification__Group__1__Impl
	rule__ArgumentSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentSpecificationAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getArgumentSpecificationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentSpecification__Group__2__Impl
	rule__ArgumentSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentSpecificationAccess().getTypeDeclaratorAssignment_2()); }
	(rule__ArgumentSpecification__TypeDeclaratorAssignment_2)
	{ after(grammarAccess.getArgumentSpecificationAccess().getTypeDeclaratorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentSpecification__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentSpecificationAccess().getGroup_3()); }
	(rule__ArgumentSpecification__Group_3__0)?
	{ after(grammarAccess.getArgumentSpecificationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentSpecification__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentSpecification__Group_3__0__Impl
	rule__ArgumentSpecification__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentSpecificationAccess().getEqualsSignKeyword_3_0()); }
	EqualsSign
	{ after(grammarAccess.getArgumentSpecificationAccess().getEqualsSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentSpecification__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentSpecificationAccess().getDefaultValueAssignment_3_1()); }
	(rule__ArgumentSpecification__DefaultValueAssignment_3_1)
	{ after(grammarAccess.getArgumentSpecificationAccess().getDefaultValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_0__0__Impl
	rule__ArgumentList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getPositionalArgumentsAssignment_0_0()); }
	(rule__ArgumentList__PositionalArgumentsAssignment_0_0)
	{ after(grammarAccess.getArgumentListAccess().getPositionalArgumentsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_0__1__Impl
	rule__ArgumentList__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getGroup_0_1()); }
	(rule__ArgumentList__Group_0_1__0)*
	{ after(grammarAccess.getArgumentListAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getGroup_0_2()); }
	(rule__ArgumentList__Group_0_2__0)*
	{ after(grammarAccess.getArgumentListAccess().getGroup_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_0_1__0__Impl
	rule__ArgumentList__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getCommaKeyword_0_1_0()); }
	Comma
	{ after(grammarAccess.getArgumentListAccess().getCommaKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getPositionalArgumentsAssignment_0_1_1()); }
	(rule__ArgumentList__PositionalArgumentsAssignment_0_1_1)
	{ after(grammarAccess.getArgumentListAccess().getPositionalArgumentsAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_0_2__0__Impl
	rule__ArgumentList__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getCommaKeyword_0_2_0()); }
	Comma
	{ after(grammarAccess.getArgumentListAccess().getCommaKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_0_2_1()); }
	(rule__ArgumentList__NamedArgumentsAssignment_0_2_1)
	{ after(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__0__Impl
	rule__ArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_1_0()); }
	(rule__ArgumentList__NamedArgumentsAssignment_1_0)
	{ after(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getGroup_1_1()); }
	(rule__ArgumentList__Group_1_1__0)*
	{ after(grammarAccess.getArgumentListAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1_1__0__Impl
	rule__ArgumentList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getCommaKeyword_1_1_0()); }
	Comma
	{ after(grammarAccess.getArgumentListAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_1_1_1()); }
	(rule__ArgumentList__NamedArgumentsAssignment_1_1_1)
	{ after(grammarAccess.getArgumentListAccess().getNamedArgumentsAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__0__Impl
	rule__NamedArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getAlternatives_0()); }
	(rule__NamedArgument__Alternatives_0)
	{ after(grammarAccess.getNamedArgumentAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__1__Impl
	rule__NamedArgument__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getNamedArgumentAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__2__Impl
	rule__NamedArgument__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getExpressionAssignment_2()); }
	(rule__NamedArgument__ExpressionAssignment_2)
	{ after(grammarAccess.getNamedArgumentAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getGroup_3()); }
	(rule__NamedArgument__Group_3__0)?
	{ after(grammarAccess.getNamedArgumentAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NamedArgument__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group_3__0__Impl
	rule__NamedArgument__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getLeftParenthesisKeyword_3_0()); }
	LeftParenthesis
	{ after(grammarAccess.getNamedArgumentAccess().getLeftParenthesisKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group_3__1__Impl
	rule__NamedArgument__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getArgumentListAssignment_3_1()); }
	(rule__NamedArgument__ArgumentListAssignment_3_1)?
	{ after(grammarAccess.getNamedArgumentAccess().getArgumentListAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NamedArgument__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamedArgumentAccess().getRightParenthesisKeyword_3_2()); }
	RightParenthesis
	{ after(grammarAccess.getNamedArgumentAccess().getRightParenthesisKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExp__Group__0__Impl
	rule__PostfixExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpAccess().getPrimaryExpAssignment_0()); }
	(rule__PostfixExp__PrimaryExpAssignment_0)
	{ after(grammarAccess.getPostfixExpAccess().getPrimaryExpAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpAccess().getTailAssignment_1()); }
	(rule__PostfixExp__TailAssignment_1)*
	{ after(grammarAccess.getPostfixExpAccess().getTailAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpTail__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpTail__Group__0__Impl
	rule__CastExpTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpTailAccess().getFullStopKeyword_0()); }
	FullStop
	{ after(grammarAccess.getCastExpTailAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpTail__Group__1__Impl
	rule__CastExpTail__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpTailAccess().getAsKeyword_1()); }
	As
	{ after(grammarAccess.getCastExpTailAccess().getAsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpTail__Group__2__Impl
	rule__CastExpTail__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpTailAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getCastExpTailAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpTail__Group__3__Impl
	rule__CastExpTail__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpTailAccess().getTypeDeclaratorAssignment_3()); }
	(rule__CastExpTail__TypeDeclaratorAssignment_3)
	{ after(grammarAccess.getCastExpTailAccess().getTypeDeclaratorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpTail__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpTailAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getCastExpTailAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeTestTail__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeTestTail__Group__0__Impl
	rule__TypeTestTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeTestTailAccess().getFullStopKeyword_0()); }
	FullStop
	{ after(grammarAccess.getTypeTestTailAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeTestTail__Group__1__Impl
	rule__TypeTestTail__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeTestTailAccess().getIsKeyword_1()); }
	Is
	{ after(grammarAccess.getTypeTestTailAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeTestTail__Group__2__Impl
	rule__TypeTestTail__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeTestTailAccess().getLeftParenthesisKeyword_2()); }
	LeftParenthesis
	{ after(grammarAccess.getTypeTestTailAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeTestTail__Group__3__Impl
	rule__TypeTestTail__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeTestTailAccess().getTypeDeclaratorAssignment_3()); }
	(rule__TypeTestTail__TypeDeclaratorAssignment_3)
	{ after(grammarAccess.getTypeTestTailAccess().getTypeDeclaratorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeTestTail__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeTestTailAccess().getRightParenthesisKeyword_4()); }
	RightParenthesis
	{ after(grammarAccess.getTypeTestTailAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAccessTail__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccessTail__Group__0__Impl
	rule__FieldAccessTail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessTail__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessTailAccess().getFullStopKeyword_0()); }
	FullStop
	{ after(grammarAccess.getFieldAccessTailAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessTail__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccessTail__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessTail__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessTailAccess().getFieldAccessAssignment_1()); }
	(rule__FieldAccessTail__FieldAccessAssignment_1)
	{ after(grammarAccess.getFieldAccessTailAccess().getFieldAccessAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group__0__Impl
	rule__MethodInvocation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getPostfixExpParserRuleCall_0()); }
	rulePostfixExp
	{ after(grammarAccess.getMethodInvocationAccess().getPostfixExpParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group__1__Impl
	rule__MethodInvocation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_1()); }
	LeftParenthesis
	{ after(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group__2__Impl
	rule__MethodInvocation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2()); }
	(rule__MethodInvocation__ArgumentListAssignment_2)?
	{ after(grammarAccess.getMethodInvocationAccess().getArgumentListAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_3()); }
	RightParenthesis
	{ after(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PhysicalType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalType__Group__0__Impl
	rule__PhysicalType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalTypeAccess().getAlternatives_0()); }
	(rule__PhysicalType__Alternatives_0)
	{ after(grammarAccess.getPhysicalTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PhysicalType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPhysicalTypeAccess().getAlternatives_1()); }
	(rule__PhysicalType__Alternatives_1)?
	{ after(grammarAccess.getPhysicalTypeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListConstructor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListConstructor__Group__0__Impl
	rule__ListConstructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListConstructorAccess().getLeftSquareBracketKeyword_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getListConstructorAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListConstructor__Group__1__Impl
	rule__ListConstructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListConstructorAccess().getElementsAssignment_1()); }
	(rule__ListConstructor__ElementsAssignment_1)
	{ after(grammarAccess.getListConstructorAccess().getElementsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListConstructor__Group__2__Impl
	rule__ListConstructor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListConstructorAccess().getGroup_2()); }
	(rule__ListConstructor__Group_2__0)*
	{ after(grammarAccess.getListConstructorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListConstructor__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListConstructorAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getListConstructorAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListConstructor__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListConstructor__Group_2__0__Impl
	rule__ListConstructor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListConstructorAccess().getCommaKeyword_2_0()); }
	Comma
	{ after(grammarAccess.getListConstructorAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListConstructor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListConstructorAccess().getElementsAssignment_2_1()); }
	(rule__ListConstructor__ElementsAssignment_2_1)
	{ after(grammarAccess.getListConstructorAccess().getElementsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeConstructor__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_0__0__Impl
	rule__RangeConstructor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getRangeKeyword_0_0()); }
	Range
	{ after(grammarAccess.getRangeConstructorAccess().getRangeKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_0__1__Impl
	rule__RangeConstructor__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getLeftParenthesisKeyword_0_1()); }
	LeftParenthesis
	{ after(grammarAccess.getRangeConstructorAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_0__2__Impl
	rule__RangeConstructor__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getStartAssignment_0_2()); }
	(rule__RangeConstructor__StartAssignment_0_2)
	{ after(grammarAccess.getRangeConstructorAccess().getStartAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_0__3__Impl
	rule__RangeConstructor__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getCommaKeyword_0_3()); }
	Comma
	{ after(grammarAccess.getRangeConstructorAccess().getCommaKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_0__4__Impl
	rule__RangeConstructor__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getEndAssignment_0_4()); }
	(rule__RangeConstructor__EndAssignment_0_4)
	{ after(grammarAccess.getRangeConstructorAccess().getEndAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getRightParenthesisKeyword_0_5()); }
	RightParenthesis
	{ after(grammarAccess.getRangeConstructorAccess().getRightParenthesisKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeConstructor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_1__0__Impl
	rule__RangeConstructor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getLeftSquareBracketKeyword_1_0()); }
	LeftSquareBracket
	{ after(grammarAccess.getRangeConstructorAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_1__1__Impl
	rule__RangeConstructor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getStartAssignment_1_1()); }
	(rule__RangeConstructor__StartAssignment_1_1)
	{ after(grammarAccess.getRangeConstructorAccess().getStartAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_1__2__Impl
	rule__RangeConstructor__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getFullStopFullStopKeyword_1_2()); }
	FullStopFullStop
	{ after(grammarAccess.getRangeConstructorAccess().getFullStopFullStopKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_1__3__Impl
	rule__RangeConstructor__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getEndAssignment_1_3()); }
	(rule__RangeConstructor__EndAssignment_1_3)
	{ after(grammarAccess.getRangeConstructorAccess().getEndAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeConstructor__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeConstructorAccess().getRightSquareBracketKeyword_1_4()); }
	RightSquareBracket
	{ after(grammarAccess.getRangeConstructorAccess().getRightSquareBracketKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getConditionAssignment_0()); }
	(rule__Condition__ConditionAssignment_0)
	{ after(grammarAccess.getConditionAccess().getConditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getQuestionMarkKeyword_1()); }
	QuestionMark
	{ after(grammarAccess.getConditionAccess().getQuestionMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
	rule__Condition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getTrueResultAssignment_2()); }
	(rule__Condition__TrueResultAssignment_2)
	{ after(grammarAccess.getConditionAccess().getTrueResultAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__3__Impl
	rule__Condition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getConditionAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getFalseResultAssignment_4()); }
	(rule__Condition__FalseResultAssignment_4)
	{ after(grammarAccess.getConditionAccess().getFalseResultAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getNotKeyword_0()); }
	(Not)?
	{ after(grammarAccess.getRelationAccess().getNotKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getSumParserRuleCall_1()); }
	ruleSum
	{ after(grammarAccess.getRelationAccess().getSumParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getGroup_2()); }
	(rule__Relation__Group_2__0)*
	{ after(grammarAccess.getRelationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_2__0__Impl
	rule__Relation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationalOpAssignment_2_0()); }
	(rule__Relation__RelationalOpAssignment_2_0)
	{ after(grammarAccess.getRelationAccess().getRelationalOpAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getNextSumAssignment_2_1()); }
	(rule__Relation__NextSumAssignment_2_1)
	{ after(grammarAccess.getRelationAccess().getNextSumAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getTermParserRuleCall_0()); }
	ruleTerm
	{ after(grammarAccess.getSumAccess().getTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getGroup_1()); }
	(rule__Sum__Group_1__0)*
	{ after(grammarAccess.getSumAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1__0__Impl
	rule__Sum__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getAdditiveOpAssignment_1_0()); }
	(rule__Sum__AdditiveOpAssignment_1_0)
	{ after(grammarAccess.getSumAccess().getAdditiveOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getNextTermAssignment_1_1()); }
	(rule__Sum__NextTermAssignment_1_1)
	{ after(grammarAccess.getSumAccess().getNextTermAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)*
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getMultiplicativeOpAssignment_1_0()); }
	(rule__Term__MultiplicativeOpAssignment_1_0)
	{ after(grammarAccess.getTermAccess().getMultiplicativeOpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getNextFactorAssignment_1_1()); }
	(rule__Term__NextFactorAssignment_1_1)
	{ after(grammarAccess.getTermAccess().getNextFactorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getHyphenMinusKeyword_0()); }
	(HyphenMinus)?
	{ after(grammarAccess.getFactorAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getPostfixExpParserRuleCall_1()); }
	rulePostfixExp
	{ after(grammarAccess.getFactorAccess().getPostfixExpParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OscFile__PreludeStatementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOscFileAccess().getPreludeStatementsPreludeStatementParserRuleCall_0_0()); }
		rulePreludeStatement
		{ after(grammarAccess.getOscFileAccess().getPreludeStatementsPreludeStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OscFile__OscDeclarationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOscFileAccess().getOscDeclarationsOscDeclarationParserRuleCall_1_0()); }
		ruleOscDeclaration
		{ after(grammarAccess.getOscFileAccess().getOscDeclarationsOscDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ImportReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getImportReferenceImportReferenceParserRuleCall_1_0()); }
		ruleImportReference
		{ after(grammarAccess.getImportStatementAccess().getImportReferenceImportReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredID__IdentifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredIDAccess().getIdentifierIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getStructuredIDAccess().getIdentifierIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredID__IdentifierAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredIDAccess().getIdentifierIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStructuredIDAccess().getIdentifierIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__PhysicalTypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeDeclarationAccess().getPhysicalTypeNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPhysicalTypeDeclarationAccess().getPhysicalTypeNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalTypeDeclaration__BaseUnitSpecifierAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeDeclarationAccess().getBaseUnitSpecifierSIBaseUnitSpecifierParserRuleCall_3_0()); }
		ruleSIBaseUnitSpecifier
		{ after(grammarAccess.getPhysicalTypeDeclarationAccess().getBaseUnitSpecifierSIBaseUnitSpecifierParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__UnitNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitDeclarationAccess().getUnitNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUnitDeclarationAccess().getUnitNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__PhysicalTypeNameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitDeclarationAccess().getPhysicalTypeNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getUnitDeclarationAccess().getPhysicalTypeNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnitDeclaration__UnitSpecifierAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnitDeclarationAccess().getUnitSpecifierSIUnitSpecifierParserRuleCall_5_0()); }
		ruleSIUnitSpecifier
		{ after(grammarAccess.getUnitDeclarationAccess().getUnitSpecifierSIUnitSpecifierParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseUnitSpecifier__SIBaseExponentListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIBaseUnitSpecifierAccess().getSIBaseExponentListSIBaseExponentListParserRuleCall_2_0()); }
		ruleSIBaseExponentList
		{ after(grammarAccess.getSIBaseUnitSpecifierAccess().getSIBaseExponentListSIBaseExponentListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponentList__SIBaseExponentListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIBaseExponentListAccess().getSIBaseExponentListSIBaseExponentParserRuleCall_0_0()); }
		ruleSIBaseExponent
		{ after(grammarAccess.getSIBaseExponentListAccess().getSIBaseExponentListSIBaseExponentParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponentList__NextSIBaseExponentListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIBaseExponentListAccess().getNextSIBaseExponentListSIBaseExponentParserRuleCall_1_1_0()); }
		ruleSIBaseExponent
		{ after(grammarAccess.getSIBaseExponentListAccess().getNextSIBaseExponentListSIBaseExponentParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponent__UnitAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIBaseExponentAccess().getUnitSIBaseUnitNameParserRuleCall_0_0()); }
		ruleSIBaseUnitName
		{ after(grammarAccess.getSIBaseExponentAccess().getUnitSIBaseUnitNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIBaseExponent__NumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIBaseExponentAccess().getNumberINTEGERTerminalRuleCall_2_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getSIBaseExponentAccess().getNumberINTEGERTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__SIBaseExponentListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIUnitSpecifierAccess().getSIBaseExponentListSIBaseExponentListParserRuleCall_2_0()); }
		ruleSIBaseExponentList
		{ after(grammarAccess.getSIUnitSpecifierAccess().getSIBaseExponentListSIBaseExponentListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__SIfactorAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIUnitSpecifierAccess().getSIfactorSIUnitFactorParserRuleCall_3_1_0()); }
		ruleSIUnitFactor
		{ after(grammarAccess.getSIUnitSpecifierAccess().getSIfactorSIUnitFactorParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SIUnitSpecifier__SIUnitAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSIUnitSpecifierAccess().getSIUnitSIUnitOffsetParserRuleCall_4_1_0()); }
		ruleSIUnitOffset
		{ after(grammarAccess.getSIUnitSpecifierAccess().getSIUnitSIUnitOffsetParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__EnumNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeExtensionAccess().getEnumNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumTypeExtensionAccess().getEnumNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__EnumMemberDeclsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsEnumMemberDeclarationParserRuleCall_4_0()); }
		ruleEnumMemberDeclaration
		{ after(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsEnumMemberDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumTypeExtension__EnumMemberDeclsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsEnumMemberDeclarationParserRuleCall_5_1_0()); }
		ruleEnumMemberDeclaration
		{ after(grammarAccess.getEnumTypeExtensionAccess().getEnumMemberDeclsEnumMemberDeclarationParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__ExtendableTypeNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredTypeExtensionAccess().getExtendableTypeNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStructuredTypeExtensionAccess().getExtendableTypeNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredTypeExtension__ExtensionMemberDeclsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructuredTypeExtensionAccess().getExtensionMemberDeclsExtensionMemberDeclarationParserRuleCall_4_0()); }
		ruleExtensionMemberDeclaration
		{ after(grammarAccess.getStructuredTypeExtensionAccess().getExtensionMemberDeclsExtensionMemberDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalParameterDeclaration__ParameterDeclarationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalParameterDeclarationAccess().getParameterDeclarationParameterDeclarationParserRuleCall_1_0()); }
		ruleParameterDeclaration
		{ after(grammarAccess.getGlobalParameterDeclarationAccess().getParameterDeclarationParameterDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__FieldNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getFieldNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterDeclarationAccess().getFieldNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__NextfieldNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getNextfieldNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterDeclarationAccess().getNextfieldNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__TypeDeclaratorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_3_0()); }
		ruleTypeDeclarator
		{ after(grammarAccess.getParameterDeclarationAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__DefaultValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getDefaultValueExpressionParserRuleCall_4_1_0()); }
		ruleExpression
		{ after(grammarAccess.getParameterDeclarationAccess().getDefaultValueExpressionParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDeclaration__WithDeclarationAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDeclarationAccess().getWithDeclarationParameterWithDeclarationParserRuleCall_5_0()); }
		ruleParameterWithDeclaration
		{ after(grammarAccess.getParameterDeclarationAccess().getWithDeclarationParameterWithDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__EnumNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclarationAccess().getEnumNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumDeclarationAccess().getEnumNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__EnumMemberDeclsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsEnumMemberDeclarationParserRuleCall_4_0()); }
		ruleEnumMemberDeclaration
		{ after(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsEnumMemberDeclarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDeclaration__EnumMemberDeclsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsEnumMemberDeclarationParserRuleCall_5_1_0()); }
		ruleEnumMemberDeclaration
		{ after(grammarAccess.getEnumDeclarationAccess().getEnumMemberDeclsEnumMemberDeclarationParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__EnumMemberNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumMemberDeclaration__EnumMemberValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberValueINTEGERTerminalRuleCall_1_1_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getEnumMemberDeclarationAccess().getEnumMemberValueINTEGERTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValueReference__EnumNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueReferenceAccess().getEnumNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumValueReferenceAccess().getEnumNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValueReference__EnumMemberNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumValueReferenceAccess().getEnumMemberNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumValueReferenceAccess().getEnumMemberNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__ActorNameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierDeclarationAccess().getActorNameIDTerminalRuleCall_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getModifierDeclarationAccess().getActorNameIDTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__ModifierNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierDeclarationAccess().getModifierNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getModifierDeclarationAccess().getModifierNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__QualifiedBehaviorNameAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierDeclarationAccess().getQualifiedBehaviorNameIDTerminalRuleCall_3_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModifierDeclarationAccess().getQualifiedBehaviorNameIDTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__ScenarioMemberDeclAssignment_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierDeclarationAccess().getScenarioMemberDeclMemberDeclarationParserRuleCall_6_0_0()); }
		ruleMemberDeclaration
		{ after(grammarAccess.getModifierDeclarationAccess().getScenarioMemberDeclMemberDeclarationParserRuleCall_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierDeclaration__BehaviorSpecificationAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifierDeclarationAccess().getBehaviorSpecificationOnDirectiveParserRuleCall_6_1_0()); }
		ruleOnDirective
		{ after(grammarAccess.getModifierDeclarationAccess().getBehaviorSpecificationOnDirectiveParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__ActionNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDeclarationAccess().getActionNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionDeclarationAccess().getActionNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__BaseActionNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDeclarationAccess().getBaseActionNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionDeclarationAccess().getBaseActionNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__FieldNameAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDeclarationAccess().getFieldNameIDTerminalRuleCall_2_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActionDeclarationAccess().getFieldNameIDTerminalRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__EnumReferenceAssignment_2_2_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDeclarationAccess().getEnumReferenceEnumValueReferenceParserRuleCall_2_2_3_0_0()); }
		ruleEnumValueReference
		{ after(grammarAccess.getActionDeclarationAccess().getEnumReferenceEnumValueReferenceParserRuleCall_2_2_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDeclaration__ActionMemberDeclAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDeclarationAccess().getActionMemberDeclMemberDeclarationParserRuleCall_5_0()); }
		ruleMemberDeclaration
		{ after(grammarAccess.getActionDeclarationAccess().getActionMemberDeclMemberDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__ActorNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorDeclarationAccess().getActorNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActorDeclarationAccess().getActorNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__BaseActorNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorDeclarationAccess().getBaseActorNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActorDeclarationAccess().getBaseActorNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__FieldNameAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorDeclarationAccess().getFieldNameIDTerminalRuleCall_2_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getActorDeclarationAccess().getFieldNameIDTerminalRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__EnumReferenceAssignment_2_2_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorDeclarationAccess().getEnumReferenceEnumValueReferenceParserRuleCall_2_2_3_0_0()); }
		ruleEnumValueReference
		{ after(grammarAccess.getActorDeclarationAccess().getEnumReferenceEnumValueReferenceParserRuleCall_2_2_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActorDeclaration__ActorMemberDeclAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActorDeclarationAccess().getActorMemberDeclMemberDeclarationParserRuleCall_3_2_0()); }
		ruleMemberDeclaration
		{ after(grammarAccess.getActorDeclarationAccess().getActorMemberDeclMemberDeclarationParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__StructNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getStructNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStructDeclarationAccess().getStructNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__BaseStructNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getBaseStructNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStructDeclarationAccess().getBaseStructNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__FieldNameAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getFieldNameIDTerminalRuleCall_2_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStructDeclarationAccess().getFieldNameIDTerminalRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__EnumReferenceAssignment_2_2_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getEnumReferenceEnumValueReferenceParserRuleCall_2_2_3_0_0()); }
		ruleEnumValueReference
		{ after(grammarAccess.getStructDeclarationAccess().getEnumReferenceEnumValueReferenceParserRuleCall_2_2_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StructDeclaration__StructMemberDeclAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructDeclarationAccess().getStructMemberDeclMemberDeclarationParserRuleCall_5_0()); }
		ruleMemberDeclaration
		{ after(grammarAccess.getStructDeclarationAccess().getStructMemberDeclMemberDeclarationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__ScenarioNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getScenarioNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScenarioDeclarationAccess().getScenarioNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__BaseScenarioNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getBaseScenarioNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScenarioDeclarationAccess().getBaseScenarioNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__FieldNameAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getFieldNameIDTerminalRuleCall_2_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScenarioDeclarationAccess().getFieldNameIDTerminalRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__EnumReferenceAssignment_2_2_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getEnumReferenceEnumValueReferenceParserRuleCall_2_2_3_0_0()); }
		ruleEnumValueReference
		{ after(grammarAccess.getScenarioDeclarationAccess().getEnumReferenceEnumValueReferenceParserRuleCall_2_2_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__ScenarioMemberDeclAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getScenarioMemberDeclMemberDeclarationParserRuleCall_5_0_0()); }
		ruleMemberDeclaration
		{ after(grammarAccess.getScenarioDeclarationAccess().getScenarioMemberDeclMemberDeclarationParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScenarioDeclaration__BehaviorSpecificationAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioDeclarationAccess().getBehaviorSpecificationBehaviorSpecificationParserRuleCall_5_1_0()); }
		ruleBehaviorSpecification
		{ after(grammarAccess.getScenarioDeclarationAccess().getBehaviorSpecificationBehaviorSpecificationParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CoverageDeclaration__ArgumentListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCoverageDeclarationAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getCoverageDeclarationAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__MethodNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getMethodNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodDeclarationAccess().getMethodNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__ArgumentListSpecificationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getArgumentListSpecificationArgumentListSpecificationParserRuleCall_3_0()); }
		ruleArgumentListSpecification
		{ after(grammarAccess.getMethodDeclarationAccess().getArgumentListSpecificationArgumentListSpecificationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__ReturnTypeAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getReturnTypeTypeDeclaratorParserRuleCall_5_1_0()); }
		ruleTypeDeclarator
		{ after(grammarAccess.getMethodDeclarationAccess().getReturnTypeTypeDeclaratorParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__MethodImplementationAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getMethodImplementationMethodImplementationParserRuleCall_6_0()); }
		ruleMethodImplementation
		{ after(grammarAccess.getMethodDeclarationAccess().getMethodImplementationMethodImplementationParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__ExpressionAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodImplementationAccess().getExpressionExpressionParserRuleCall_2_0_1_0()); }
		ruleExpression
		{ after(grammarAccess.getMethodImplementationAccess().getExpressionExpressionParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__StructuredIDAssignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodImplementationAccess().getStructuredIDStructuredIDParserRuleCall_2_2_1_0()); }
		ruleStructuredID
		{ after(grammarAccess.getMethodImplementationAccess().getStructuredIDStructuredIDParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodImplementation__ArgumentListAssignment_2_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodImplementationAccess().getArgumentListArgumentListParserRuleCall_2_2_3_0()); }
		ruleArgumentList
		{ after(grammarAccess.getMethodImplementationAccess().getArgumentListArgumentListParserRuleCall_2_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__EventNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getEventNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEventDeclarationAccess().getEventNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__ParamsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getParamsArgumentListSpecificationParserRuleCall_2_1_0_0()); }
		ruleArgumentListSpecification
		{ after(grammarAccess.getEventDeclarationAccess().getParamsArgumentListSpecificationParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__ParamsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getParamsArgumentListSpecificationParserRuleCall_2_1_1_1_0()); }
		ruleArgumentListSpecification
		{ after(grammarAccess.getEventDeclarationAccess().getParamsArgumentListSpecificationParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventDeclaration__EventSpecificationAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventDeclarationAccess().getEventSpecificationEventSpecificationParserRuleCall_3_1_0()); }
		ruleEventSpecification
		{ after(grammarAccess.getEventDeclarationAccess().getEventSpecificationEventSpecificationParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__EventReferenceAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventSpecificationAccess().getEventReferenceEventReferenceParserRuleCall_0_0_0()); }
		ruleEventReference
		{ after(grammarAccess.getEventSpecificationAccess().getEventReferenceEventReferenceParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__EventFieldNameAssignment_0_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventSpecificationAccess().getEventFieldNameIDTerminalRuleCall_0_1_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEventSpecificationAccess().getEventFieldNameIDTerminalRuleCall_0_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__EventConditionAssignment_0_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventSpecificationAccess().getEventConditionEventConditionParserRuleCall_0_1_2_0()); }
		ruleEventCondition
		{ after(grammarAccess.getEventSpecificationAccess().getEventConditionEventConditionParserRuleCall_0_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventSpecification__EventConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventSpecificationAccess().getEventConditionEventConditionParserRuleCall_1_0()); }
		ruleEventCondition
		{ after(grammarAccess.getEventSpecificationAccess().getEventConditionEventConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventReference__EventPathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventReferenceAccess().getEventPathEventPathParserRuleCall_1_0()); }
		ruleEventPath
		{ after(grammarAccess.getEventReferenceAccess().getEventPathEventPathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPath__ExpressionAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPathAccess().getExpressionExpressionParserRuleCall_0_0_0()); }
		ruleExpression
		{ after(grammarAccess.getEventPathAccess().getExpressionExpressionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EventPath__EventNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEventPathAccess().getEventNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEventPathAccess().getEventNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RiseExpression__BoolExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRiseExpressionAccess().getBoolExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getRiseExpressionAccess().getBoolExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FallExpression__BoolExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFallExpressionAccess().getBoolExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getFallExpressionAccess().getBoolExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElapsedExpression__DurationExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElapsedExpressionAccess().getDurationExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getElapsedExpressionAccess().getDurationExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__DurationExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryExpressionAccess().getDurationExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getEveryExpressionAccess().getDurationExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryExpression__NextdurationExpressionAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEveryExpressionAccess().getNextdurationExpressionExpressionParserRuleCall_3_3_0()); }
		ruleExpression
		{ after(grammarAccess.getEveryExpressionAccess().getNextdurationExpressionExpressionParserRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__FieldNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getFieldNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getFieldNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NextfieldNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getNextfieldNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclarationAccess().getNextfieldNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__TypeDeclaratorAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_4_0()); }
		ruleTypeDeclarator
		{ after(grammarAccess.getVariableDeclarationAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__DefaultValueAssignment_5_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getDefaultValueExpressionParserRuleCall_5_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getDefaultValueExpressionParserRuleCall_5_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__SampleExpressionAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclarationAccess().getSampleExpressionSampleExpressionParserRuleCall_5_1_1_0()); }
		ruleSampleExpression
		{ after(grammarAccess.getVariableDeclarationAccess().getSampleExpressionSampleExpressionParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSampleExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__EventSpecificationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleExpressionAccess().getEventSpecificationEventSpecificationParserRuleCall_4_0()); }
		ruleEventSpecification
		{ after(grammarAccess.getSampleExpressionAccess().getEventSpecificationEventSpecificationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleExpression__DefaultValueAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleExpressionAccess().getDefaultValueExpressionParserRuleCall_5_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSampleExpressionAccess().getDefaultValueExpressionParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__EventSpecificationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnDirectiveAccess().getEventSpecificationIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getOnDirectiveAccess().getEventSpecificationIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OnDirective__OnMemberAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOnDirectiveAccess().getOnMemberOnDirectiveMemberParserRuleCall_4_0()); }
		ruleOnDirectiveMember
		{ after(grammarAccess.getOnDirectiveAccess().getOnMemberOnDirectiveMemberParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDirective__MethodInvocationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCallDirectiveAccess().getMethodInvocationMethodInvocationParserRuleCall_1_0()); }
		ruleMethodInvocation
		{ after(grammarAccess.getCallDirectiveAccess().getMethodInvocationMethodInvocationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__EventNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmitDirectiveAccess().getEventNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEmitDirectiveAccess().getEventNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EmitDirective__ArgumentListAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEmitDirectiveAccess().getArgumentListArgumentListParserRuleCall_3_0()); }
		ruleArgumentList
		{ after(grammarAccess.getEmitDirectiveAccess().getArgumentListArgumentListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WaitDirective__EventSpecificationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWaitDirectiveAccess().getEventSpecificationEventSpecificationParserRuleCall_1_0()); }
		ruleEventSpecification
		{ after(grammarAccess.getWaitDirectiveAccess().getEventSpecificationEventSpecificationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirective__DoMembersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoDirectiveAccess().getDoMembersDoDirectiveMemberParserRuleCall_1_0()); }
		ruleDoDirectiveMember
		{ after(grammarAccess.getDoDirectiveAccess().getDoMembersDoDirectiveMemberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__LabelNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getLabelNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDoDirectiveMemberAccess().getLabelNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__CompositionAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getCompositionCompositionParserRuleCall_1_0_0()); }
		ruleComposition
		{ after(grammarAccess.getDoDirectiveMemberAccess().getCompositionCompositionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__EmitDirectiveAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getEmitDirectiveEmitDirectiveParserRuleCall_1_1_0()); }
		ruleEmitDirective
		{ after(grammarAccess.getDoDirectiveMemberAccess().getEmitDirectiveEmitDirectiveParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__CallDirectiveAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getCallDirectiveCallDirectiveParserRuleCall_1_2_0()); }
		ruleCallDirective
		{ after(grammarAccess.getDoDirectiveMemberAccess().getCallDirectiveCallDirectiveParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__WaitDirectiveAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getWaitDirectiveWaitDirectiveParserRuleCall_1_3_0()); }
		ruleWaitDirective
		{ after(grammarAccess.getDoDirectiveMemberAccess().getWaitDirectiveWaitDirectiveParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoDirectiveMember__BehaviorInvocationAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoDirectiveMemberAccess().getBehaviorInvocationBehaviorInvocationParserRuleCall_1_4_0()); }
		ruleBehaviorInvocation
		{ after(grammarAccess.getDoDirectiveMemberAccess().getBehaviorInvocationBehaviorInvocationParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__CompositionOpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getCompositionOpCompositionOptionsParserRuleCall_0_0()); }
		ruleCompositionOptions
		{ after(grammarAccess.getCompositionAccess().getCompositionOpCompositionOptionsParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__ArgumentListAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getArgumentListArgumentListParserRuleCall_1_1_0()); }
		ruleArgumentList
		{ after(grammarAccess.getCompositionAccess().getArgumentListArgumentListParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__DoMembersAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getDoMembersDoDirectiveMemberParserRuleCall_4_0_0()); }
		ruleDoDirectiveMember
		{ after(grammarAccess.getCompositionAccess().getDoMembersDoDirectiveMemberParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Composition__WithDeclarationAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompositionAccess().getWithDeclarationBehaviorWithDeclarationParserRuleCall_4_1_0()); }
		ruleBehaviorWithDeclaration
		{ after(grammarAccess.getCompositionAccess().getWithDeclarationBehaviorWithDeclarationParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__ActorExpressionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorInvocationAccess().getActorExpressionExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getBehaviorInvocationAccess().getActorExpressionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocation__ArgumentListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorInvocationAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getBehaviorInvocationAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterWithDeclaration__ParameterWithMembersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterWithDeclarationAccess().getParameterWithMembersConstraintDeclarationParserRuleCall_3_0()); }
		ruleConstraintDeclaration
		{ after(grammarAccess.getParameterWithDeclarationAccess().getParameterWithMembersConstraintDeclarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorWithDeclaration__BehaviorWithMembersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBehaviorWithDeclarationAccess().getBehaviorWithMembersBehaviorWithMemberParserRuleCall_3_0()); }
		ruleBehaviorWithMember
		{ after(grammarAccess.getBehaviorWithDeclarationAccess().getBehaviorWithMembersBehaviorWithMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__ConstraintQualifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintQualifierConstraintQualifierParserRuleCall_2_0()); }
		ruleConstraintQualifier
		{ after(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintQualifierConstraintQualifierParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeepConstraintDeclaration__ConstraintExpressionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintExpressionExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getKeepConstraintDeclarationAccess().getConstraintExpressionExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RemoveDefaultDeclaration__ParameterReferenceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveDefaultDeclarationAccess().getParameterReferencePostfixExpParserRuleCall_2_0()); }
		rulePostfixExp
		{ after(grammarAccess.getRemoveDefaultDeclarationAccess().getParameterReferencePostfixExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UntilDirective__EventSpecificationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUntilDirectiveAccess().getEventSpecificationEventSpecificationParserRuleCall_1_0()); }
		ruleEventSpecification
		{ after(grammarAccess.getUntilDirectiveAccess().getEventSpecificationEventSpecificationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentListSpecification__ArgumentSpecificationAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationArgumentSpecificationParserRuleCall_0_0()); }
		ruleArgumentSpecification
		{ after(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationArgumentSpecificationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentListSpecification__ArgumentSpecificationAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationArgumentSpecificationParserRuleCall_1_1_0()); }
		ruleArgumentSpecification
		{ after(grammarAccess.getArgumentListSpecificationAccess().getArgumentSpecificationArgumentSpecificationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__ArgumentNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentSpecificationAccess().getArgumentNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getArgumentSpecificationAccess().getArgumentNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__TypeDeclaratorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentSpecificationAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_2_0()); }
		ruleTypeDeclarator
		{ after(grammarAccess.getArgumentSpecificationAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentSpecification__DefaultValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentSpecificationAccess().getDefaultValueExpressionParserRuleCall_3_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArgumentSpecificationAccess().getDefaultValueExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__PositionalArgumentsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getPositionalArgumentsExpressionParserRuleCall_0_0_0()); }
		ruleExpression
		{ after(grammarAccess.getArgumentListAccess().getPositionalArgumentsExpressionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__PositionalArgumentsAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getPositionalArgumentsExpressionParserRuleCall_0_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArgumentListAccess().getPositionalArgumentsExpressionParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__NamedArgumentsAssignment_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getNamedArgumentsNamedArgumentParserRuleCall_0_2_1_0()); }
		ruleNamedArgument
		{ after(grammarAccess.getArgumentListAccess().getNamedArgumentsNamedArgumentParserRuleCall_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__NamedArgumentsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getNamedArgumentsNamedArgumentParserRuleCall_1_0_0()); }
		ruleNamedArgument
		{ after(grammarAccess.getArgumentListAccess().getNamedArgumentsNamedArgumentParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__NamedArgumentsAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getNamedArgumentsNamedArgumentParserRuleCall_1_1_1_0()); }
		ruleNamedArgument
		{ after(grammarAccess.getArgumentListAccess().getNamedArgumentsNamedArgumentParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__ArgumentNameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getArgumentNameIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getNamedArgumentAccess().getArgumentNameIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getNamedArgumentAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedArgument__ArgumentListAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamedArgumentAccess().getArgumentListArgumentListParserRuleCall_3_1_0()); }
		ruleArgumentList
		{ after(grammarAccess.getNamedArgumentAccess().getArgumentListArgumentListParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__PrimaryExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpAccess().getPrimaryExpPrimaryExpParserRuleCall_0_0()); }
		rulePrimaryExp
		{ after(grammarAccess.getPostfixExpAccess().getPrimaryExpPrimaryExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExp__TailAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpAccess().getTailPostfixExpTailParserRuleCall_1_0()); }
		rulePostfixExpTail
		{ after(grammarAccess.getPostfixExpAccess().getTailPostfixExpTailParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpTail__TypeDeclaratorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpTailAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_3_0()); }
		ruleTypeDeclarator
		{ after(grammarAccess.getCastExpTailAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeTestTail__TypeDeclaratorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeTestTailAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_3_0()); }
		ruleTypeDeclarator
		{ after(grammarAccess.getTypeTestTailAccess().getTypeDeclaratorTypeDeclaratorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccessTail__FieldAccessAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccessTailAccess().getFieldAccessIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccessTailAccess().getFieldAccessIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ArgumentListAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getMethodInvocationAccess().getArgumentListArgumentListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__NumberIntegerAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getNumberIntegerINTEGERTerminalRuleCall_0_0_0()); }
		RULE_INTEGER
		{ after(grammarAccess.getPhysicalTypeAccess().getNumberIntegerINTEGERTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__NumberFloatAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getNumberFloatFLOATTerminalRuleCall_0_1_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getPhysicalTypeAccess().getNumberFloatFLOATTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__UnitBaseNameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getUnitBaseNameSIBaseUnitNameParserRuleCall_1_0_0()); }
		ruleSIBaseUnitName
		{ after(grammarAccess.getPhysicalTypeAccess().getUnitBaseNameSIBaseUnitNameParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PhysicalType__UnitNameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPhysicalTypeAccess().getUnitNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPhysicalTypeAccess().getUnitNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__ElementsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListConstructorAccess().getElementsValueExpParserRuleCall_1_0()); }
		ruleValueExp
		{ after(grammarAccess.getListConstructorAccess().getElementsValueExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListConstructor__ElementsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListConstructorAccess().getElementsValueExpParserRuleCall_2_1_0()); }
		ruleValueExp
		{ after(grammarAccess.getListConstructorAccess().getElementsValueExpParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__StartAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeConstructorAccess().getStartValueExpParserRuleCall_0_2_0()); }
		ruleValueExp
		{ after(grammarAccess.getRangeConstructorAccess().getStartValueExpParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__EndAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeConstructorAccess().getEndValueExpParserRuleCall_0_4_0()); }
		ruleValueExp
		{ after(grammarAccess.getRangeConstructorAccess().getEndValueExpParserRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__StartAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeConstructorAccess().getStartValueExpParserRuleCall_1_1_0()); }
		ruleValueExp
		{ after(grammarAccess.getRangeConstructorAccess().getStartValueExpParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeConstructor__EndAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeConstructorAccess().getEndValueExpParserRuleCall_1_3_0()); }
		ruleValueExp
		{ after(grammarAccess.getRangeConstructorAccess().getEndValueExpParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__ConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getConditionExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionAccess().getConditionExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__TrueResultAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getTrueResultExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionAccess().getTrueResultExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__FalseResultAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getFalseResultExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionAccess().getFalseResultExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__RelationalOpAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getRelationalOpRelationalOpParserRuleCall_2_0_0()); }
		ruleRelationalOp
		{ after(grammarAccess.getRelationAccess().getRelationalOpRelationalOpParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__NextSumAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getNextSumSumParserRuleCall_2_1_0()); }
		ruleSum
		{ after(grammarAccess.getRelationAccess().getNextSumSumParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__AdditiveOpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getAdditiveOpAdditiveOpParserRuleCall_1_0_0()); }
		ruleAdditiveOp
		{ after(grammarAccess.getSumAccess().getAdditiveOpAdditiveOpParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__NextTermAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getNextTermTermParserRuleCall_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getSumAccess().getNextTermTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__MultiplicativeOpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getMultiplicativeOpMultiplicativeOpParserRuleCall_1_0_0()); }
		ruleMultiplicativeOp
		{ after(grammarAccess.getTermAccess().getMultiplicativeOpMultiplicativeOpParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__NextFactorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getNextFactorFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getTermAccess().getNextFactorFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
