/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.asam.openScenario.impl;

import de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage;
import de.bmwgroup.openscenario.asam.openScenario.Sum;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sum</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.SumImpl#getRelationalOp <em>Relational Op</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.SumImpl#getNextSum <em>Next Sum</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SumImpl extends RelationImpl implements Sum
{
  /**
   * The cached value of the '{@link #getRelationalOp() <em>Relational Op</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelationalOp()
   * @generated
   * @ordered
   */
  protected EList<String> relationalOp;

  /**
   * The cached value of the '{@link #getNextSum() <em>Next Sum</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNextSum()
   * @generated
   * @ordered
   */
  protected EList<Sum> nextSum;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SumImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.SUM;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getRelationalOp()
  {
    if (relationalOp == null)
    {
      relationalOp = new EDataTypeEList<String>(String.class, this, OpenScenarioPackage.SUM__RELATIONAL_OP);
    }
    return relationalOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Sum> getNextSum()
  {
    if (nextSum == null)
    {
      nextSum = new EObjectContainmentEList<Sum>(Sum.class, this, OpenScenarioPackage.SUM__NEXT_SUM);
    }
    return nextSum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.SUM__NEXT_SUM:
        return ((InternalEList<?>)getNextSum()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.SUM__RELATIONAL_OP:
        return getRelationalOp();
      case OpenScenarioPackage.SUM__NEXT_SUM:
        return getNextSum();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.SUM__RELATIONAL_OP:
        getRelationalOp().clear();
        getRelationalOp().addAll((Collection<? extends String>)newValue);
        return;
      case OpenScenarioPackage.SUM__NEXT_SUM:
        getNextSum().clear();
        getNextSum().addAll((Collection<? extends Sum>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.SUM__RELATIONAL_OP:
        getRelationalOp().clear();
        return;
      case OpenScenarioPackage.SUM__NEXT_SUM:
        getNextSum().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.SUM__RELATIONAL_OP:
        return relationalOp != null && !relationalOp.isEmpty();
      case OpenScenarioPackage.SUM__NEXT_SUM:
        return nextSum != null && !nextSum.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (relationalOp: ");
    result.append(relationalOp);
    result.append(')');
    return result.toString();
  }

} //SumImpl
