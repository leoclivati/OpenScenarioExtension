/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.asam.openScenario.impl;

import de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage;
import de.bmwgroup.openscenario.asam.openScenario.PhysicalTypeDeclaration;
import de.bmwgroup.openscenario.asam.openScenario.SIBaseUnitSpecifier;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Physical Type Declaration</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.PhysicalTypeDeclarationImpl#getPhysicalTypeName <em>Physical Type Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.PhysicalTypeDeclarationImpl#getBaseUnitSpecifier <em>Base Unit Specifier</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PhysicalTypeDeclarationImpl extends OscDeclarationImpl implements PhysicalTypeDeclaration
{
  /**
   * The default value of the '{@link #getPhysicalTypeName() <em>Physical Type Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhysicalTypeName()
   * @generated
   * @ordered
   */
  protected static final String PHYSICAL_TYPE_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPhysicalTypeName() <em>Physical Type Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPhysicalTypeName()
   * @generated
   * @ordered
   */
  protected String physicalTypeName = PHYSICAL_TYPE_NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getBaseUnitSpecifier() <em>Base Unit Specifier</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBaseUnitSpecifier()
   * @generated
   * @ordered
   */
  protected SIBaseUnitSpecifier baseUnitSpecifier;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PhysicalTypeDeclarationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.PHYSICAL_TYPE_DECLARATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPhysicalTypeName()
  {
    return physicalTypeName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPhysicalTypeName(String newPhysicalTypeName)
  {
    String oldPhysicalTypeName = physicalTypeName;
    physicalTypeName = newPhysicalTypeName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__PHYSICAL_TYPE_NAME, oldPhysicalTypeName, physicalTypeName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SIBaseUnitSpecifier getBaseUnitSpecifier()
  {
    return baseUnitSpecifier;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBaseUnitSpecifier(SIBaseUnitSpecifier newBaseUnitSpecifier, NotificationChain msgs)
  {
    SIBaseUnitSpecifier oldBaseUnitSpecifier = baseUnitSpecifier;
    baseUnitSpecifier = newBaseUnitSpecifier;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER, oldBaseUnitSpecifier, newBaseUnitSpecifier);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBaseUnitSpecifier(SIBaseUnitSpecifier newBaseUnitSpecifier)
  {
    if (newBaseUnitSpecifier != baseUnitSpecifier)
    {
      NotificationChain msgs = null;
      if (baseUnitSpecifier != null)
        msgs = ((InternalEObject)baseUnitSpecifier).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER, null, msgs);
      if (newBaseUnitSpecifier != null)
        msgs = ((InternalEObject)newBaseUnitSpecifier).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER, null, msgs);
      msgs = basicSetBaseUnitSpecifier(newBaseUnitSpecifier, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER, newBaseUnitSpecifier, newBaseUnitSpecifier));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER:
        return basicSetBaseUnitSpecifier(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__PHYSICAL_TYPE_NAME:
        return getPhysicalTypeName();
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER:
        return getBaseUnitSpecifier();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__PHYSICAL_TYPE_NAME:
        setPhysicalTypeName((String)newValue);
        return;
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER:
        setBaseUnitSpecifier((SIBaseUnitSpecifier)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__PHYSICAL_TYPE_NAME:
        setPhysicalTypeName(PHYSICAL_TYPE_NAME_EDEFAULT);
        return;
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER:
        setBaseUnitSpecifier((SIBaseUnitSpecifier)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__PHYSICAL_TYPE_NAME:
        return PHYSICAL_TYPE_NAME_EDEFAULT == null ? physicalTypeName != null : !PHYSICAL_TYPE_NAME_EDEFAULT.equals(physicalTypeName);
      case OpenScenarioPackage.PHYSICAL_TYPE_DECLARATION__BASE_UNIT_SPECIFIER:
        return baseUnitSpecifier != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (physicalTypeName: ");
    result.append(physicalTypeName);
    result.append(')');
    return result.toString();
  }

} //PhysicalTypeDeclarationImpl
