/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.asam.openScenario;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Composition</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.Composition#getCompositionOp <em>Composition Op</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.Composition#getArgumentList <em>Argument List</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.Composition#getDoMembers <em>Do Members</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.Composition#getWithDeclaration <em>With Declaration</em>}</li>
 * </ul>
 *
 * @see de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage#getComposition()
 * @model
 * @generated
 */
public interface Composition extends EObject
{
  /**
   * Returns the value of the '<em><b>Composition Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Composition Op</em>' attribute.
   * @see #setCompositionOp(String)
   * @see de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage#getComposition_CompositionOp()
   * @model
   * @generated
   */
  String getCompositionOp();

  /**
   * Sets the value of the '{@link de.bmwgroup.openscenario.asam.openScenario.Composition#getCompositionOp <em>Composition Op</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Composition Op</em>' attribute.
   * @see #getCompositionOp()
   * @generated
   */
  void setCompositionOp(String value);

  /**
   * Returns the value of the '<em><b>Argument List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Argument List</em>' containment reference.
   * @see #setArgumentList(ArgumentList)
   * @see de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage#getComposition_ArgumentList()
   * @model containment="true"
   * @generated
   */
  ArgumentList getArgumentList();

  /**
   * Sets the value of the '{@link de.bmwgroup.openscenario.asam.openScenario.Composition#getArgumentList <em>Argument List</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Argument List</em>' containment reference.
   * @see #getArgumentList()
   * @generated
   */
  void setArgumentList(ArgumentList value);

  /**
   * Returns the value of the '<em><b>Do Members</b></em>' containment reference list.
   * The list contents are of type {@link de.bmwgroup.openscenario.asam.openScenario.DoDirectiveMember}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Do Members</em>' containment reference list.
   * @see de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage#getComposition_DoMembers()
   * @model containment="true"
   * @generated
   */
  EList<DoDirectiveMember> getDoMembers();

  /**
   * Returns the value of the '<em><b>With Declaration</b></em>' containment reference list.
   * The list contents are of type {@link de.bmwgroup.openscenario.asam.openScenario.BehaviorWithDeclaration}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>With Declaration</em>' containment reference list.
   * @see de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage#getComposition_WithDeclaration()
   * @model containment="true"
   * @generated
   */
  EList<BehaviorWithDeclaration> getWithDeclaration();

} // Composition
