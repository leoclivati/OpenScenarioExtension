/**
 * generated by Xtext 2.35.0
 */
package de.bmwgroup.openscenario.asam.openScenario.impl;

import de.bmwgroup.openscenario.asam.openScenario.EnumValueReference;
import de.bmwgroup.openscenario.asam.openScenario.OpenScenarioPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Enum Value Reference</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.EnumValueReferenceImpl#getEnumName <em>Enum Name</em>}</li>
 *   <li>{@link de.bmwgroup.openscenario.asam.openScenario.impl.EnumValueReferenceImpl#getEnumMemberName <em>Enum Member Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class EnumValueReferenceImpl extends ValueExpImpl implements EnumValueReference
{
  /**
   * The default value of the '{@link #getEnumName() <em>Enum Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumName()
   * @generated
   * @ordered
   */
  protected static final String ENUM_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEnumName() <em>Enum Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumName()
   * @generated
   * @ordered
   */
  protected String enumName = ENUM_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getEnumMemberName() <em>Enum Member Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumMemberName()
   * @generated
   * @ordered
   */
  protected static final String ENUM_MEMBER_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEnumMemberName() <em>Enum Member Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEnumMemberName()
   * @generated
   * @ordered
   */
  protected String enumMemberName = ENUM_MEMBER_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected EnumValueReferenceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OpenScenarioPackage.Literals.ENUM_VALUE_REFERENCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEnumName()
  {
    return enumName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnumName(String newEnumName)
  {
    String oldEnumName = enumName;
    enumName = newEnumName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_NAME, oldEnumName, enumName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEnumMemberName()
  {
    return enumMemberName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEnumMemberName(String newEnumMemberName)
  {
    String oldEnumMemberName = enumMemberName;
    enumMemberName = newEnumMemberName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_MEMBER_NAME, oldEnumMemberName, enumMemberName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_NAME:
        return getEnumName();
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_MEMBER_NAME:
        return getEnumMemberName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_NAME:
        setEnumName((String)newValue);
        return;
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_MEMBER_NAME:
        setEnumMemberName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_NAME:
        setEnumName(ENUM_NAME_EDEFAULT);
        return;
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_MEMBER_NAME:
        setEnumMemberName(ENUM_MEMBER_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_NAME:
        return ENUM_NAME_EDEFAULT == null ? enumName != null : !ENUM_NAME_EDEFAULT.equals(enumName);
      case OpenScenarioPackage.ENUM_VALUE_REFERENCE__ENUM_MEMBER_NAME:
        return ENUM_MEMBER_NAME_EDEFAULT == null ? enumMemberName != null : !ENUM_MEMBER_NAME_EDEFAULT.equals(enumMemberName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (enumName: ");
    result.append(enumName);
    result.append(", enumMemberName: ");
    result.append(enumMemberName);
    result.append(')');
    return result.toString();
  }

} //EnumValueReferenceImpl
